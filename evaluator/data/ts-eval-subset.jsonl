{"hexsha":"99499bc65b7cef3215108181962e99800a800b63","size":2244,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/index.ts","max_stars_repo_name":"jacobbubu\/rngmt","max_stars_repo_head_hexsha":"1a3766577482776801748c943fc9794e27e4c066","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"src\/index.ts","max_issues_repo_name":"jacobbubu\/rngmt","max_issues_repo_head_hexsha":"1a3766577482776801748c943fc9794e27e4c066","max_issues_repo_licenses":["MIT"],"max_issues_count":2.0,"max_issues_repo_issues_event_min_datetime":"2022-01-15T06:42:13.000Z","max_issues_repo_issues_event_max_datetime":"2022-02-13T17:23:52.000Z","max_forks_repo_path":"src\/index.ts","max_forks_repo_name":"jacobbubu\/rngmt","max_forks_repo_head_hexsha":"1a3766577482776801748c943fc9794e27e4c066","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/**\n *\/\nfunction exists(x: any) {\n  return x !== null && x !== undefined\n}\n\nexport class RNG {\n  private _index = 0\n  private _state: number[] = new Array(624)\n\n  constructor(private readonly _seed = (Math.random() * 0xffffffff) | 0) {\n    this._state[0] = _seed\n\n    const MT = this._state\n    for (let i = 1; i < 624; i++) {\n      MT[i] = MT[i - 1] ^ (MT[i - 1] >>> 30)\n      MT[i] = 0x6c078965 * MT[i] + i \/\/ 1812433253\n      MT[i] = MT[i] & ((MT[i] << 32) - 1)\n    }\n  }\n\n  \/**\n   * Generate an array of 624 untempered numbers\n   * @returns: void\n   *\/\n  private generateNumbers() {\n    let y\n    const MT = this._state\n    for (let i = 0; i < 624; i++) {\n      \/\/ Bit 31 (32nd bit) of MT[i]\n      y = MT[i] & 0x80000000\n      \/\/ Bits 0-30 (first 31 bits) of MT[...]\n      y = y + (MT[(i + 1) % 624] & 0x7fffffff)\n      \/\/ The new randomness\n      MT[i] = MT[(i + 397) % 624] ^ (y >>> 1)\n      \/\/ In case y is odd\n      if (y % 2 !== 0) {\n        MT[i] = MT[i] ^ 0x9908b0df \/\/ 2567483615\n      }\n    }\n  }\n\n  \/**\n   * Returns a tempered pseudorandom number [0,1]\n   *\n   * @remarks\n   * Based on the index-th value, calling {@link #generateNumbers()} every 624 numbers\n   *\n   * @returns The pseudorandom integer between 0 and 1\n   *\/\n  uniform() {\n    if (this._index === 0) this.generateNumbers()\n\n    let y = this._state[this._index]\n\n    y = y ^ (y >>> 11)\n    y = y ^ ((y << 7) & 0x9d2c5680) \/\/ 2636928640\n    y = y ^ ((y << 15) & 0xefc60000) \/\/ 4022730752\n    y = y ^ (y >>> 18)\n\n    this._index = (this._index + 1) % 624\n\n    return (y >>> 0) * (1.0 \/ 4294967296.0)\n  }\n\n  \/**\n   * Returns a tempered pseudorandom number [0,1]\n   *\n   * @remarks\n   * Same as {@link #uniform()}, just to be\n   * compatible with the Math.random() style API\n   *\n   * @returns The pseudorandom integer between 0 and 1\n   *\/\n  random() {\n    return this.uniform()\n  }\n\n  \/**\n   * Returns a random integer in range [min,max]\n   * @param: min\n   * @param: max\n   * @returns The random integer between `min` and `max`\n   *\/\n  range(min: number | null, max?: number) {\n    if (!exists(min)) {\n      return this.uniform()\n    } else if (!exists(max)) {\n      max = min!\n      min = 0\n    }\n\n    return min! + Math.floor(this.uniform() * (max! - min!))\n  }\n}\n","avg_line_length":23.375,"max_line_length":86,"alphanum_fraction":0.5262923351,"loc":50,"functions":6,"function_signatures":0,"function_parameters":4,"variable_declarations":6,"property_declarations":2,"function_usages":4,"trivial_types":1,"predefined_types":3,"type_definitions":1,"dynamism_heuristic":0,"loc_per_function":5.6666666667,"estimated_tokens":875,"fun_ann_density":0.0114285714,"var_ann_density":0.0068571429,"prop_ann_density":0.0022857143,"typedef_density":0.0011428571,"dynamism_density":0.0,"trivial_density":0.0555555556,"predefined_density":0.1666666667,"metric":0.220931132,"content_without_annotations":"\/**\n *\/\nfunction exists(x) {\n  return x !== null && x !== undefined\n}\n\nexport class RNG {\n  private _index = 0\n  private _state = new Array(624)\n\n  constructor(private readonly _seed = (Math.random() * 0xffffffff) | 0) {\n    this._state[0] = _seed\n\n    const MT = this._state\n    for (let i = 1; i < 624; i++) {\n      MT[i] = MT[i - 1] ^ (MT[i - 1] >>> 30)\n      MT[i] = 0x6c078965 * MT[i] + i \/\/ 1812433253\n      MT[i] = MT[i] & ((MT[i] << 32) - 1)\n    }\n  }\n\n  \/**\n   * Generate an array of 624 untempered numbers\n   * @returns: void\n   *\/\n  private generateNumbers() {\n    let y\n    const MT = this._state\n    for (let i = 0; i < 624; i++) {\n      \/\/ Bit 31 (32nd bit) of MT[i]\n      y = MT[i] & 0x80000000\n      \/\/ Bits 0-30 (first 31 bits) of MT[...]\n      y = y + (MT[(i + 1) % 624] & 0x7fffffff)\n      \/\/ The new randomness\n      MT[i] = MT[(i + 397) % 624] ^ (y >>> 1)\n      \/\/ In case y is odd\n      if (y % 2 !== 0) {\n        MT[i] = MT[i] ^ 0x9908b0df \/\/ 2567483615\n      }\n    }\n  }\n\n  \/**\n   * Returns a tempered pseudorandom number [0,1]\n   *\n   * @remarks\n   * Based on the index-th value, calling {@link #generateNumbers()} every 624 numbers\n   *\n   * @returns The pseudorandom integer between 0 and 1\n   *\/\n  uniform() {\n    if (this._index === 0) this.generateNumbers()\n\n    let y = this._state[this._index]\n\n    y = y ^ (y >>> 11)\n    y = y ^ ((y << 7) & 0x9d2c5680) \/\/ 2636928640\n    y = y ^ ((y << 15) & 0xefc60000) \/\/ 4022730752\n    y = y ^ (y >>> 18)\n\n    this._index = (this._index + 1) % 624\n\n    return (y >>> 0) * (1.0 \/ 4294967296.0)\n  }\n\n  \/**\n   * Returns a tempered pseudorandom number [0,1]\n   *\n   * @remarks\n   * Same as {@link #uniform()}, just to be\n   * compatible with the Math.random() style API\n   *\n   * @returns The pseudorandom integer between 0 and 1\n   *\/\n  random() {\n    return this.uniform()\n  }\n\n  \/**\n   * Returns a random integer in range [min,max]\n   * @param: min\n   * @param: max\n   * @returns The random integer between `min` and `max`\n   *\/\n  range(min, max?) {\n    if (!exists(min)) {\n      return this.uniform()\n    } else if (!exists(max)) {\n      max = min!\n      min = 0\n    }\n\n    return min! + Math.floor(this.uniform() * (max! - min!))\n  }\n}\n"}
{"hexsha":"2a968018b71746a75b3e52c18dc31914f2533cfa","size":12410,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/bright-code\/code\/javascript.ts","max_stars_repo_name":"Tyh2001\/bright-code","max_stars_repo_head_hexsha":"d17443a5ada2d3a825f7529cbb54a8d396783364","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-03-27T14:36:32.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-27T14:36:32.000Z","max_issues_repo_path":"src\/bright-code\/code\/javascript.ts","max_issues_repo_name":"Tyh2001\/bright-code","max_issues_repo_head_hexsha":"d17443a5ada2d3a825f7529cbb54a8d396783364","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/bright-code\/code\/javascript.ts","max_forks_repo_name":"Tyh2001\/bright-code","max_forks_repo_head_hexsha":"d17443a5ada2d3a825f7529cbb54a8d396783364","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*'\nconst KEYWORDS = [\n  'as',\n  'in',\n  'of',\n  'if',\n  'for',\n  'while',\n  'finally',\n  'var',\n  'new',\n  'function',\n  'do',\n  'return',\n  'void',\n  'else',\n  'break',\n  'catch',\n  'instanceof',\n  'with',\n  'throw',\n  'case',\n  'default',\n  'try',\n  'switch',\n  'continue',\n  'typeof',\n  'delete',\n  'let',\n  'yield',\n  'const',\n  'class',\n  'debugger',\n  'async',\n  'await',\n  'static',\n  'import',\n  'from',\n  'export',\n  'extends'\n] as const\nconst LITERALS = ['true', 'false', 'null', 'undefined', 'NaN', 'Infinity'] as const\n\nconst TYPES = [\n  'Object',\n  'Function',\n  'Boolean',\n  'Symbol',\n  'Math',\n  'Date',\n  'Number',\n  'BigInt',\n  'String',\n  'RegExp',\n  'Array',\n  'Float32Array',\n  'Float64Array',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Int32Array',\n  'Uint16Array',\n  'Uint32Array',\n  'BigInt64Array',\n  'BigUint64Array',\n  'Set',\n  'Map',\n  'WeakSet',\n  'WeakMap',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'Atomics',\n  'DataView',\n  'JSON',\n  'Promise',\n  'Generator',\n  'GeneratorFunction',\n  'AsyncFunction',\n  'Reflect',\n  'Proxy',\n  'Intl',\n  'WebAssembly'\n] as const\n\nconst ERROR_TYPES = [\n  'Error',\n  'EvalError',\n  'InternalError',\n  'RangeError',\n  'ReferenceError',\n  'SyntaxError',\n  'TypeError',\n  'URIError'\n] as const\n\nconst BUILT_IN_GLOBALS = [\n  'setInterval',\n  'setTimeout',\n  'clearInterval',\n  'clearTimeout',\n  'require',\n  'exports',\n  'eval',\n  'isFinite',\n  'isNaN',\n  'parseFloat',\n  'parseInt',\n  'decodeURI',\n  'decodeURIComponent',\n  'encodeURI',\n  'encodeURIComponent',\n  'escape',\n  'unescape'\n] as const\n\nconst BUILT_IN_VARIABLES = [\n  'arguments',\n  'this',\n  'super',\n  'console',\n  'window',\n  'document',\n  'localStorage',\n  'module',\n  'global'\n] as const\n\nconst BUILT_INS = [].concat(BUILT_IN_GLOBALS, TYPES, ERROR_TYPES)\n\nexport const javascript = hljs => {\n  const regex = hljs.regex\n  const hasClosingTag = (match, { after }) => {\n    const tag = '<\/' + match[0].slice(1)\n    const pos = match.input.indexOf(tag, after)\n    return pos !== -1\n  }\n\n  const IDENT_RE$1 = IDENT_RE\n  const FRAGMENT = {\n    begin: '<>',\n    end: '<\/>'\n  }\n  const XML_SELF_CLOSING: RegExp = \/<[A-Za-z0-9\\\\._:-]+\\s*\\\/>\/\n  const XML_TAG = {\n    begin: \/<[A-Za-z0-9\\\\._:-]+\/,\n    end: \/\\\/[A-Za-z0-9\\\\._:-]+>|\\\/>\/,\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index\n      const nextChar = match.input[afterMatchIndex]\n      if (\n        nextChar === '<' ||\n        nextChar === ','\n      ) {\n        response.ignoreMatch()\n        return\n      }\n      if (nextChar === '>') {\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch()\n        }\n      }\n      let m\n      const afterMatch = match.input.substr(afterMatchIndex)\n      if ((m = afterMatch.match(\/^\\s+extends\\s+\/))) {\n        if (m.index === 0) {\n          response.ignoreMatch()\n          return\n        }\n      }\n    }\n  }\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    'variable.language': BUILT_IN_VARIABLES\n  }\n\n  const decimalDigits = '[0-9](_?[0-9])*'\n  const frac = `\\\\.(${decimalDigits})`\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      {\n        begin:\n          `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n          `[eE][+-]?(${decimalDigits})\\\\b`\n      },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      { begin: '\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b' },\n      { begin: '\\\\b0[bB][0-1](_?[0-1])*n?\\\\b' },\n      { begin: '\\\\b0[oO][0-7](_?[0-7])*n?\\\\b' },\n\n      { begin: '\\\\b0[0-7]+n?\\\\b' }\n    ],\n    relevance: 0\n  }\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: []\n  }\n  const HTML_TEMPLATE = {\n    begin: 'html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      subLanguage: 'xml'\n    }\n  }\n  const CSS_TEMPLATE = {\n    begin: 'css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      subLanguage: 'css'\n    }\n  }\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n  }\n  const JSDOC_COMMENT = hljs.COMMENT(\/\\\/\\*\\*(?!\\\/)\/, '\\\\*\/', {\n    relevance: 0,\n    contains: [\n      {\n        begin: '(?=@[A-Za-z]+)',\n        relevance: 0,\n        contains: [\n          {\n            className: 'doctag',\n            begin: '@[A-Za-z]+'\n          },\n          {\n            className: 'type',\n            begin: '\\\\{',\n            end: '\\\\}',\n            excludeEnd: true,\n            excludeBegin: true,\n            relevance: 0\n          },\n          {\n            className: 'variable',\n            begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n            endsParent: true,\n            relevance: 0\n          },\n          {\n            begin: \/(?=[^\\n])\\s\/,\n            relevance: 0\n          }\n        ]\n      }\n    ]\n  })\n  const COMMENT = {\n    className: 'comment',\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  }\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    TEMPLATE_STRING,\n    NUMBER\n  ]\n  SUBST.contains = SUBST_INTERNALS.concat({\n    begin: \/\\{\/,\n    end: \/\\}\/,\n    keywords: KEYWORDS$1,\n    contains: ['self'].concat(SUBST_INTERNALS)\n  })\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains)\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    {\n      begin: \/\\(\/,\n      end: \/\\)\/,\n      keywords: KEYWORDS$1,\n      contains: ['self'].concat(SUBST_AND_COMMENTS)\n    }\n  ])\n  const PARAMS = {\n    className: 'params',\n    begin: \/\\(\/,\n    end: \/\\)\/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  }\n\n  const CLASS_OR_EXTENDS = {\n    variants: [\n      {\n        match: [\n          \/class\/,\n          \/\\s+\/,\n          IDENT_RE$1,\n          \/\\s+\/,\n          \/extends\/,\n          \/\\s+\/,\n          regex.concat(IDENT_RE$1, '(', regex.concat(\/\\.\/, IDENT_RE$1), ')*')\n        ],\n        scope: {\n          1: 'keyword',\n          3: 'title.class',\n          5: 'keyword',\n          7: 'title.class.inherited'\n        }\n      },\n      {\n        match: [\/class\/, \/\\s+\/, IDENT_RE$1],\n        scope: {\n          1: 'keyword',\n          3: 'title.class'\n        }\n      }\n    ]\n  }\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: regex.either(\n      \/\\bJSON\/,\n      \/\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*\/,\n      \/\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*\/,\n      \/\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*\/\n    ),\n    className: 'title.class',\n    keywords: {\n      _: [\n        ...TYPES,\n        ...ERROR_TYPES\n      ]\n    }\n  }\n\n  const USE_STRICT = {\n    label: 'use_strict',\n    className: 'meta',\n    relevance: 10,\n    begin: \/^\\s*['\"]use (strict|asm)['\"]\/\n  }\n\n  const FUNCTION_DEFINITION = {\n    variants: [\n      {\n        match: [\/function\/, \/\\s+\/, IDENT_RE$1, \/(?=\\s*\\()\/]\n      },\n      {\n        match: [\/function\/, \/\\s*(?=\\()\/]\n      }\n    ],\n    className: {\n      1: 'keyword',\n      3: 'title.function'\n    },\n    label: 'func.def',\n    contains: [PARAMS],\n    illegal: \/%\/\n  }\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: \/\\b[A-Z][A-Z_0-9]+\\b\/,\n    className: 'variable.constant'\n  }\n\n  function noneOf(list) {\n    return regex.concat('(?!', list.join('|'), ')')\n  }\n\n  const FUNCTION_CALL = {\n    match: regex.concat(\n      \/\\b\/,\n      noneOf([...BUILT_IN_GLOBALS, 'super']),\n      IDENT_RE$1,\n      regex.lookahead(\/\\(\/)\n    ),\n    className: 'title.function',\n    relevance: 0\n  }\n\n  const PROPERTY_ACCESS = {\n    begin: regex.concat(\n      \/\\.\/,\n      regex.lookahead(regex.concat(IDENT_RE$1, \/(?![0-9A-Za-z$_(])\/))\n    ),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: 'prototype',\n    className: 'property',\n    relevance: 0\n  }\n\n  const GETTER_OR_SETTER = {\n    match: [\/get|set\/, \/\\s+\/, IDENT_RE$1, \/(?=\\()\/],\n    className: {\n      1: 'keyword',\n      3: 'title.function'\n    },\n    contains: [\n      {\n        begin: \/\\(\\)\/\n      },\n      PARAMS\n    ]\n  }\n\n  const FUNC_LEAD_IN_RE =\n    '(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)|' +\n    hljs.UNDERSCORE_IDENT_RE +\n    ')\\\\s*=>'\n\n  const FUNCTION_VARIABLE = {\n    match: [\n      \/const|var|let\/,\n      \/\\s+\/,\n      IDENT_RE$1,\n      \/\\s*\/,\n      \/=\\s*\/,\n      \/(async\\s*)?\/,\n      regex.lookahead(FUNC_LEAD_IN_RE)\n    ],\n    keywords: 'async',\n    className: {\n      1: 'keyword',\n      3: 'title.function'\n    },\n    contains: [PARAMS]\n  }\n\n  return {\n    name: 'Javascript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\n    illegal: \/#(?![$_A-z])\/,\n    contains: [\n      hljs.SHEBANG({\n        label: 'shebang',\n        binary: 'node',\n        relevance: 5\n      }),\n      USE_STRICT,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      NUMBER,\n      CLASS_REFERENCE,\n      {\n        className: 'attr',\n        begin: IDENT_RE$1 + regex.lookahead(':'),\n        relevance: 0\n      },\n      FUNCTION_VARIABLE,\n      {\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        relevance: 0,\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: FUNC_LEAD_IN_RE,\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: \/\\(\\s*\\)\/,\n                    skip: true\n                  },\n                  {\n                    begin: \/\\(\/,\n                    end: \/\\)\/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            begin: \/,\/,\n            relevance: 0\n          },\n          {\n            match: \/\\s+\/,\n            relevance: 0\n          },\n          {\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              { match: XML_SELF_CLOSING },\n              {\n                begin: XML_TAG.begin,\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ]\n      },\n      FUNCTION_DEFINITION,\n      {\n        beginKeywords: 'while if switch catch for'\n      },\n      {\n        begin:\n          '\\\\b(?!function)' +\n          hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' +\n          '[^()]*(\\\\(' +\n          '[^()]*(\\\\(' +\n          '[^()]*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{',\n        returnBegin: true,\n        label: 'func.def',\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: IDENT_RE$1,\n            className: 'title.function'\n          })\n        ]\n      },\n      {\n        match: \/\\.\\.\\.\/,\n        relevance: 0\n      },\n      PROPERTY_ACCESS,\n      {\n        match: '\\\\$' + IDENT_RE$1,\n        relevance: 0\n      },\n      {\n        match: [\/\\bconstructor(?=\\s*\\()\/],\n        className: { 1: 'title.function' },\n        contains: [PARAMS]\n      },\n      FUNCTION_CALL,\n      UPPER_CASE_CONSTANT,\n      CLASS_OR_EXTENDS,\n      GETTER_OR_SETTER,\n      {\n        match: \/\\$[(.]\/\n      }\n    ]\n  }\n}\n","avg_line_length":20.6146179402,"max_line_length":83,"alphanum_fraction":0.4528605963,"loc":577,"functions":4,"function_signatures":0,"function_parameters":6,"variable_declarations":46,"property_declarations":0,"function_usages":2,"trivial_types":0,"predefined_types":0,"type_definitions":0,"dynamism_heuristic":6,"loc_per_function":119.25,"estimated_tokens":3781,"fun_ann_density":0.002644803,"var_ann_density":0.0121660936,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0015868818,"trivial_density":0.0,"predefined_density":0.0,"metric":0.2167564106,"content_without_annotations":"const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*'\nconst KEYWORDS = [\n  'as',\n  'in',\n  'of',\n  'if',\n  'for',\n  'while',\n  'finally',\n  'var',\n  'new',\n  'function',\n  'do',\n  'return',\n  'void',\n  'else',\n  'break',\n  'catch',\n  'instanceof',\n  'with',\n  'throw',\n  'case',\n  'default',\n  'try',\n  'switch',\n  'continue',\n  'typeof',\n  'delete',\n  'let',\n  'yield',\n  'const',\n  'class',\n  'debugger',\n  'async',\n  'await',\n  'static',\n  'import',\n  'from',\n  'export',\n  'extends'\n] as const\nconst LITERALS = ['true', 'false', 'null', 'undefined', 'NaN', 'Infinity'] as const\n\nconst TYPES = [\n  'Object',\n  'Function',\n  'Boolean',\n  'Symbol',\n  'Math',\n  'Date',\n  'Number',\n  'BigInt',\n  'String',\n  'RegExp',\n  'Array',\n  'Float32Array',\n  'Float64Array',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Int32Array',\n  'Uint16Array',\n  'Uint32Array',\n  'BigInt64Array',\n  'BigUint64Array',\n  'Set',\n  'Map',\n  'WeakSet',\n  'WeakMap',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'Atomics',\n  'DataView',\n  'JSON',\n  'Promise',\n  'Generator',\n  'GeneratorFunction',\n  'AsyncFunction',\n  'Reflect',\n  'Proxy',\n  'Intl',\n  'WebAssembly'\n] as const\n\nconst ERROR_TYPES = [\n  'Error',\n  'EvalError',\n  'InternalError',\n  'RangeError',\n  'ReferenceError',\n  'SyntaxError',\n  'TypeError',\n  'URIError'\n] as const\n\nconst BUILT_IN_GLOBALS = [\n  'setInterval',\n  'setTimeout',\n  'clearInterval',\n  'clearTimeout',\n  'require',\n  'exports',\n  'eval',\n  'isFinite',\n  'isNaN',\n  'parseFloat',\n  'parseInt',\n  'decodeURI',\n  'decodeURIComponent',\n  'encodeURI',\n  'encodeURIComponent',\n  'escape',\n  'unescape'\n] as const\n\nconst BUILT_IN_VARIABLES = [\n  'arguments',\n  'this',\n  'super',\n  'console',\n  'window',\n  'document',\n  'localStorage',\n  'module',\n  'global'\n] as const\n\nconst BUILT_INS = [].concat(BUILT_IN_GLOBALS, TYPES, ERROR_TYPES)\n\nexport const javascript = hljs => {\n  const regex = hljs.regex\n  const hasClosingTag = (match, { after }) => {\n    const tag = '<\/' + match[0].slice(1)\n    const pos = match.input.indexOf(tag, after)\n    return pos !== -1\n  }\n\n  const IDENT_RE$1 = IDENT_RE\n  const FRAGMENT = {\n    begin: '<>',\n    end: '<\/>'\n  }\n  const XML_SELF_CLOSING = \/<[A-Za-z0-9\\\\._:-]+\\s*\\\/>\/\n  const XML_TAG = {\n    begin: \/<[A-Za-z0-9\\\\._:-]+\/,\n    end: \/\\\/[A-Za-z0-9\\\\._:-]+>|\\\/>\/,\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index\n      const nextChar = match.input[afterMatchIndex]\n      if (\n        nextChar === '<' ||\n        nextChar === ','\n      ) {\n        response.ignoreMatch()\n        return\n      }\n      if (nextChar === '>') {\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch()\n        }\n      }\n      let m\n      const afterMatch = match.input.substr(afterMatchIndex)\n      if ((m = afterMatch.match(\/^\\s+extends\\s+\/))) {\n        if (m.index === 0) {\n          response.ignoreMatch()\n          return\n        }\n      }\n    }\n  }\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS,\n    'variable.language': BUILT_IN_VARIABLES\n  }\n\n  const decimalDigits = '[0-9](_?[0-9])*'\n  const frac = `\\\\.(${decimalDigits})`\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      {\n        begin:\n          `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n          `[eE][+-]?(${decimalDigits})\\\\b`\n      },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      { begin: '\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b' },\n      { begin: '\\\\b0[bB][0-1](_?[0-1])*n?\\\\b' },\n      { begin: '\\\\b0[oO][0-7](_?[0-7])*n?\\\\b' },\n\n      { begin: '\\\\b0[0-7]+n?\\\\b' }\n    ],\n    relevance: 0\n  }\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: []\n  }\n  const HTML_TEMPLATE = {\n    begin: 'html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      subLanguage: 'xml'\n    }\n  }\n  const CSS_TEMPLATE = {\n    begin: 'css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      subLanguage: 'css'\n    }\n  }\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n  }\n  const JSDOC_COMMENT = hljs.COMMENT(\/\\\/\\*\\*(?!\\\/)\/, '\\\\*\/', {\n    relevance: 0,\n    contains: [\n      {\n        begin: '(?=@[A-Za-z]+)',\n        relevance: 0,\n        contains: [\n          {\n            className: 'doctag',\n            begin: '@[A-Za-z]+'\n          },\n          {\n            className: 'type',\n            begin: '\\\\{',\n            end: '\\\\}',\n            excludeEnd: true,\n            excludeBegin: true,\n            relevance: 0\n          },\n          {\n            className: 'variable',\n            begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n            endsParent: true,\n            relevance: 0\n          },\n          {\n            begin: \/(?=[^\\n])\\s\/,\n            relevance: 0\n          }\n        ]\n      }\n    ]\n  })\n  const COMMENT = {\n    className: 'comment',\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  }\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    TEMPLATE_STRING,\n    NUMBER\n  ]\n  SUBST.contains = SUBST_INTERNALS.concat({\n    begin: \/\\{\/,\n    end: \/\\}\/,\n    keywords: KEYWORDS$1,\n    contains: ['self'].concat(SUBST_INTERNALS)\n  })\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains)\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    {\n      begin: \/\\(\/,\n      end: \/\\)\/,\n      keywords: KEYWORDS$1,\n      contains: ['self'].concat(SUBST_AND_COMMENTS)\n    }\n  ])\n  const PARAMS = {\n    className: 'params',\n    begin: \/\\(\/,\n    end: \/\\)\/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  }\n\n  const CLASS_OR_EXTENDS = {\n    variants: [\n      {\n        match: [\n          \/class\/,\n          \/\\s+\/,\n          IDENT_RE$1,\n          \/\\s+\/,\n          \/extends\/,\n          \/\\s+\/,\n          regex.concat(IDENT_RE$1, '(', regex.concat(\/\\.\/, IDENT_RE$1), ')*')\n        ],\n        scope: {\n          1: 'keyword',\n          3: 'title.class',\n          5: 'keyword',\n          7: 'title.class.inherited'\n        }\n      },\n      {\n        match: [\/class\/, \/\\s+\/, IDENT_RE$1],\n        scope: {\n          1: 'keyword',\n          3: 'title.class'\n        }\n      }\n    ]\n  }\n\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: regex.either(\n      \/\\bJSON\/,\n      \/\\b[A-Z][a-z]+([A-Z][a-z]*|\\d)*\/,\n      \/\\b[A-Z]{2,}([A-Z][a-z]+|\\d)+([A-Z][a-z]*)*\/,\n      \/\\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\\d)*([A-Z][a-z]*)*\/\n    ),\n    className: 'title.class',\n    keywords: {\n      _: [\n        ...TYPES,\n        ...ERROR_TYPES\n      ]\n    }\n  }\n\n  const USE_STRICT = {\n    label: 'use_strict',\n    className: 'meta',\n    relevance: 10,\n    begin: \/^\\s*['\"]use (strict|asm)['\"]\/\n  }\n\n  const FUNCTION_DEFINITION = {\n    variants: [\n      {\n        match: [\/function\/, \/\\s+\/, IDENT_RE$1, \/(?=\\s*\\()\/]\n      },\n      {\n        match: [\/function\/, \/\\s*(?=\\()\/]\n      }\n    ],\n    className: {\n      1: 'keyword',\n      3: 'title.function'\n    },\n    label: 'func.def',\n    contains: [PARAMS],\n    illegal: \/%\/\n  }\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: \/\\b[A-Z][A-Z_0-9]+\\b\/,\n    className: 'variable.constant'\n  }\n\n  function noneOf(list) {\n    return regex.concat('(?!', list.join('|'), ')')\n  }\n\n  const FUNCTION_CALL = {\n    match: regex.concat(\n      \/\\b\/,\n      noneOf([...BUILT_IN_GLOBALS, 'super']),\n      IDENT_RE$1,\n      regex.lookahead(\/\\(\/)\n    ),\n    className: 'title.function',\n    relevance: 0\n  }\n\n  const PROPERTY_ACCESS = {\n    begin: regex.concat(\n      \/\\.\/,\n      regex.lookahead(regex.concat(IDENT_RE$1, \/(?![0-9A-Za-z$_(])\/))\n    ),\n    end: IDENT_RE$1,\n    excludeBegin: true,\n    keywords: 'prototype',\n    className: 'property',\n    relevance: 0\n  }\n\n  const GETTER_OR_SETTER = {\n    match: [\/get|set\/, \/\\s+\/, IDENT_RE$1, \/(?=\\()\/],\n    className: {\n      1: 'keyword',\n      3: 'title.function'\n    },\n    contains: [\n      {\n        begin: \/\\(\\)\/\n      },\n      PARAMS\n    ]\n  }\n\n  const FUNC_LEAD_IN_RE =\n    '(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*(\\\\(' +\n    '[^()]*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)[^()]*)*' +\n    '\\\\)|' +\n    hljs.UNDERSCORE_IDENT_RE +\n    ')\\\\s*=>'\n\n  const FUNCTION_VARIABLE = {\n    match: [\n      \/const|var|let\/,\n      \/\\s+\/,\n      IDENT_RE$1,\n      \/\\s*\/,\n      \/=\\s*\/,\n      \/(async\\s*)?\/,\n      regex.lookahead(FUNC_LEAD_IN_RE)\n    ],\n    keywords: 'async',\n    className: {\n      1: 'keyword',\n      3: 'title.function'\n    },\n    contains: [PARAMS]\n  }\n\n  return {\n    name: 'Javascript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\n    illegal: \/#(?![$_A-z])\/,\n    contains: [\n      hljs.SHEBANG({\n        label: 'shebang',\n        binary: 'node',\n        relevance: 5\n      }),\n      USE_STRICT,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      NUMBER,\n      CLASS_REFERENCE,\n      {\n        className: 'attr',\n        begin: IDENT_RE$1 + regex.lookahead(':'),\n        relevance: 0\n      },\n      FUNCTION_VARIABLE,\n      {\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        relevance: 0,\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: FUNC_LEAD_IN_RE,\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: \/\\(\\s*\\)\/,\n                    skip: true\n                  },\n                  {\n                    begin: \/\\(\/,\n                    end: \/\\)\/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            begin: \/,\/,\n            relevance: 0\n          },\n          {\n            match: \/\\s+\/,\n            relevance: 0\n          },\n          {\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              { match: XML_SELF_CLOSING },\n              {\n                begin: XML_TAG.begin,\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ]\n      },\n      FUNCTION_DEFINITION,\n      {\n        beginKeywords: 'while if switch catch for'\n      },\n      {\n        begin:\n          '\\\\b(?!function)' +\n          hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' +\n          '[^()]*(\\\\(' +\n          '[^()]*(\\\\(' +\n          '[^()]*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{',\n        returnBegin: true,\n        label: 'func.def',\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: IDENT_RE$1,\n            className: 'title.function'\n          })\n        ]\n      },\n      {\n        match: \/\\.\\.\\.\/,\n        relevance: 0\n      },\n      PROPERTY_ACCESS,\n      {\n        match: '\\\\$' + IDENT_RE$1,\n        relevance: 0\n      },\n      {\n        match: [\/\\bconstructor(?=\\s*\\()\/],\n        className: { 1: 'title.function' },\n        contains: [PARAMS]\n      },\n      FUNCTION_CALL,\n      UPPER_CASE_CONSTANT,\n      CLASS_OR_EXTENDS,\n      GETTER_OR_SETTER,\n      {\n        match: \/\\$[(.]\/\n      }\n    ]\n  }\n}\n"}
{"hexsha":"7f74afe9a1b0b056999b57f142ba8053d2f19b2d","size":2211,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/utils\/files\/parsers\/parserPMM.ts","max_stars_repo_name":"I194\/PMTools_2.0","max_stars_repo_head_hexsha":"313dea61275c5f8b875376578a65e08b9c2fd128","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"src\/utils\/files\/parsers\/parserPMM.ts","max_issues_repo_name":"I194\/PMTools_2.0","max_issues_repo_head_hexsha":"313dea61275c5f8b875376578a65e08b9c2fd128","max_issues_repo_licenses":["MIT"],"max_issues_count":1.0,"max_issues_repo_issues_event_min_datetime":"2022-03-17T12:50:14.000Z","max_issues_repo_issues_event_max_datetime":"2022-03-17T12:51:57.000Z","max_forks_repo_path":"src\/utils\/files\/parsers\/parserPMM.ts","max_forks_repo_name":"I194\/PMTools_2.0","max_forks_repo_head_hexsha":"313dea61275c5f8b875376578a65e08b9c2fd128","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"const parsePMM = (data: string, name: string) => {\n  \/\/ eslint-disable-next-line no-control-regex\n  const eol = new RegExp(\"\\r?\\n\");\n  \/\/ Get all lines except first and the last one (they're garbage)\n  const lines = data.split(eol).slice(1).filter(line => line.length > 1);\n\n  const header = lines[0].replace(\/\"\/g, '').split(',');\n  \/\/ name = header[0] || name;\n\n  \/\/ Skip 1 and 2 lines 'cause they're in the header \n  const interpretations = lines.slice(2).map((line, index) => {\n    \n    const params = line.replace(\/\\s+\/g, '').split(',');\n\n    \/\/ ID | CODE | STEPRANGE | N | Dg | Ig | kg | a95g | Ds | Is | ks | a95s | comment \n    \/\/ 'kg' and 'ks' - idiotic garbage and, moreover, there is no 'a95' - there is only MAD (Maximum Angular Deviation)\n    const label = params[0];\n    const code = params[1];\n    const stepRange = params[2];\n    const stepCount = Number(params[3]);\n    const Dgeo = Number(params[4]);\n    const Igeo = Number(params[5]);\n    const madGeo = Number(params[7]);\n    const Dstrat = Number(params[8]);\n    const Istrat = Number(params[9]);\n    \/\/ const madStrat = Number(params[11]);\n    \/\/ but we don't need madStrat and madGeo at the same time - they must be equal, otherwise some of them is incorrect, so...\n    const mad = madGeo;\n    const k = 0;\n\n    \/\/ comment may be with spaces\n    let comment = '';\n    for (let i = 12; i < params.length; i++) comment += params[i];\n    comment = comment.trim();\n\n    \/\/ there is no standard for demagnetization symbol... and idk why\n    const demagSmbl = stepRange.split('')[0];\n    const thermalTypes = ['T', 't'];\n    const alternatingTypes = ['M', 'm'];\n\n    let demagType: 'thermal' | 'alternating field' | undefined = undefined;\n\n    if (thermalTypes.indexOf(demagSmbl) > -1) demagType = 'thermal';\n    else if (alternatingTypes.indexOf(demagSmbl) > -1) demagType = 'alternating field';\n\n    return {\n      id: index + 1,\n      label,\n      code,\n      demagType,\n      stepRange,\n      stepCount,\n      Dgeo,\n      Igeo,\n      Dstrat,\n      Istrat,\n      mad,\n      k,\n      comment\n    };\n\n  });\n  \n  return {\n    name,\n    interpretations,\n    format: \"PMM\",\n    created: new Date().toISOString(),\n  };\n\n}\n\nexport default parsePMM;","avg_line_length":30.2876712329,"max_line_length":126,"alphanum_fraction":0.6010854817,"loc":50,"functions":3,"function_signatures":0,"function_parameters":5,"variable_declarations":23,"property_declarations":0,"function_usages":0,"trivial_types":0,"predefined_types":2,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":28.0,"estimated_tokens":663,"fun_ann_density":0.012066365,"var_ann_density":0.0346907994,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.064516129,"metric":0.3116386129,"content_without_annotations":"const parsePMM = (data, name) => {\n  \/\/ eslint-disable-next-line no-control-regex\n  const eol = new RegExp(\"\\r?\\n\");\n  \/\/ Get all lines except first and the last one (they're garbage)\n  const lines = data.split(eol).slice(1).filter(line => line.length > 1);\n\n  const header = lines[0].replace(\/\"\/g, '').split(',');\n  \/\/ name = header[0] || name;\n\n  \/\/ Skip 1 and 2 lines 'cause they're in the header \n  const interpretations = lines.slice(2).map((line, index) => {\n    \n    const params = line.replace(\/\\s+\/g, '').split(',');\n\n    \/\/ ID | CODE | STEPRANGE | N | Dg | Ig | kg | a95g | Ds | Is | ks | a95s | comment \n    \/\/ 'kg' and 'ks' - idiotic garbage and, moreover, there is no 'a95' - there is only MAD (Maximum Angular Deviation)\n    const label = params[0];\n    const code = params[1];\n    const stepRange = params[2];\n    const stepCount = Number(params[3]);\n    const Dgeo = Number(params[4]);\n    const Igeo = Number(params[5]);\n    const madGeo = Number(params[7]);\n    const Dstrat = Number(params[8]);\n    const Istrat = Number(params[9]);\n    \/\/ const madStrat = Number(params[11]);\n    \/\/ but we don't need madStrat and madGeo at the same time - they must be equal, otherwise some of them is incorrect, so...\n    const mad = madGeo;\n    const k = 0;\n\n    \/\/ comment may be with spaces\n    let comment = '';\n    for (let i = 12; i < params.length; i++) comment += params[i];\n    comment = comment.trim();\n\n    \/\/ there is no standard for demagnetization symbol... and idk why\n    const demagSmbl = stepRange.split('')[0];\n    const thermalTypes = ['T', 't'];\n    const alternatingTypes = ['M', 'm'];\n\n    let demagType = undefined;\n\n    if (thermalTypes.indexOf(demagSmbl) > -1) demagType = 'thermal';\n    else if (alternatingTypes.indexOf(demagSmbl) > -1) demagType = 'alternating field';\n\n    return {\n      id: index + 1,\n      label,\n      code,\n      demagType,\n      stepRange,\n      stepCount,\n      Dgeo,\n      Igeo,\n      Dstrat,\n      Istrat,\n      mad,\n      k,\n      comment\n    };\n\n  });\n  \n  return {\n    name,\n    interpretations,\n    format: \"PMM\",\n    created: new Date().toISOString(),\n  };\n\n}\n\nexport default parsePMM;"}
{"hexsha":"465aca866742965184ee78b911779d2e6a210117","size":3378,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"pipeline\/compression\/Base91.ts","max_stars_repo_name":"mlomb\/chat-analytics","max_stars_repo_head_hexsha":"ce8bb16bee95020171493699d63d4cc74cedd080","max_stars_repo_licenses":["MIT"],"max_stars_count":34.0,"max_stars_repo_stars_event_min_datetime":"2022-02-04T02:10:50.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-27T16:08:53.000Z","max_issues_repo_path":"pipeline\/compression\/Base91.ts","max_issues_repo_name":"mlomb\/chat-analytics","max_issues_repo_head_hexsha":"ce8bb16bee95020171493699d63d4cc74cedd080","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"pipeline\/compression\/Base91.ts","max_forks_repo_name":"mlomb\/chat-analytics","max_forks_repo_head_hexsha":"ce8bb16bee95020171493699d63d4cc74cedd080","max_forks_repo_licenses":["MIT"],"max_forks_count":1.0,"max_forks_repo_forks_event_min_datetime":"2022-03-04T14:43:54.000Z","max_forks_repo_forks_event_max_datetime":"2022-03-04T14:43:54.000Z","content":"\/\/ This is a browser version of https:\/\/github.com\/Equim-chan\/base91\n\n\/*\nBSD 3-Clause License\n\nCopyright (c) 2017, Equim\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and\/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*\/\n\n\/\/ NOTE: the character \"<\" was replaced by \"-\" to avoid problems embedding in HTML         \u2193\nconst TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!#$%&()*+,.\/:;-=>?@[]^_`{|}~\"';\n\nconst B91_LENGTH_DIGITS = 12;\n\n\/\/ TODO: use buffers\nexport const base91encode = (data: Uint8Array): string => {\n    let ret = (data.length + \"\").padStart(B91_LENGTH_DIGITS, \"0\");\n    const len = data.length;\n\n    let i = 0;\n    let n = 0;\n    let b = 0;\n\n    while (i < len) {\n        b |= data[i] << n;\n        n += 8;\n\n        if (n > 13) {\n            let v = b & 8191;\n            if (v > 88) {\n                b >>= 13;\n                n -= 13;\n            } else {\n                v = b & 16383;\n                b >>= 14;\n                n -= 14;\n            }\n            ret += TABLE[v % 91] + TABLE[(v \/ 91) | 0];\n        }\n        i++;\n    }\n\n    if (n) {\n        ret += TABLE[b % 91];\n        if (n > 7 || b > 90) ret += TABLE[(b \/ 91) | 0];\n    }\n\n    return ret;\n};\n\nexport const base91decode = (data: string): Uint8Array => {\n    let i = B91_LENGTH_DIGITS;\n    let k = 0;\n    let b = 0;\n    let n = 0;\n    let v = -1;\n\n    const len = data.length;\n    const outputLength = parseInt(data.slice(0, B91_LENGTH_DIGITS));\n    const ret = new Uint8Array(outputLength);\n\n    while (i < len) {\n        const p = TABLE.indexOf(data[i]);\n        if (p === -1) continue;\n        if (v < 0) {\n            v = p;\n        } else {\n            v += p * 91;\n            b |= v << n;\n            n += (v & 8191) > 88 ? 13 : 14;\n            do {\n                ret[k++] = b & 0xff;\n                b >>= 8;\n                n -= 8;\n            } while (n > 7);\n            v = -1;\n        }\n        i++;\n    }\n\n    if (v > -1) {\n        ret[k++] = (b | (v << n)) & 0xff;\n    }\n\n    return ret;\n};\n","avg_line_length":30.1607142857,"max_line_length":108,"alphanum_fraction":0.5896980462,"loc":63,"functions":2,"function_signatures":0,"function_parameters":2,"variable_declarations":19,"property_declarations":0,"function_usages":0,"trivial_types":0,"predefined_types":2,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":28.5,"estimated_tokens":957,"fun_ann_density":0.0041797283,"var_ann_density":0.0198537095,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.0869565217,"metric":0.2446611611,"content_without_annotations":"\/\/ This is a browser version of https:\/\/github.com\/Equim-chan\/base91\n\n\/*\nBSD 3-Clause License\n\nCopyright (c) 2017, Equim\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and\/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*\/\n\n\/\/ NOTE: the character \"<\" was replaced by \"-\" to avoid problems embedding in HTML         \u2193\nconst TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!#$%&()*+,.\/:;-=>?@[]^_`{|}~\"';\n\nconst B91_LENGTH_DIGITS = 12;\n\n\/\/ TODO: use buffers\nexport const base91encode = (data) => {\n    let ret = (data.length + \"\").padStart(B91_LENGTH_DIGITS, \"0\");\n    const len = data.length;\n\n    let i = 0;\n    let n = 0;\n    let b = 0;\n\n    while (i < len) {\n        b |= data[i] << n;\n        n += 8;\n\n        if (n > 13) {\n            let v = b & 8191;\n            if (v > 88) {\n                b >>= 13;\n                n -= 13;\n            } else {\n                v = b & 16383;\n                b >>= 14;\n                n -= 14;\n            }\n            ret += TABLE[v % 91] + TABLE[(v \/ 91) | 0];\n        }\n        i++;\n    }\n\n    if (n) {\n        ret += TABLE[b % 91];\n        if (n > 7 || b > 90) ret += TABLE[(b \/ 91) | 0];\n    }\n\n    return ret;\n};\n\nexport const base91decode = (data) => {\n    let i = B91_LENGTH_DIGITS;\n    let k = 0;\n    let b = 0;\n    let n = 0;\n    let v = -1;\n\n    const len = data.length;\n    const outputLength = parseInt(data.slice(0, B91_LENGTH_DIGITS));\n    const ret = new Uint8Array(outputLength);\n\n    while (i < len) {\n        const p = TABLE.indexOf(data[i]);\n        if (p === -1) continue;\n        if (v < 0) {\n            v = p;\n        } else {\n            v += p * 91;\n            b |= v << n;\n            n += (v & 8191) > 88 ? 13 : 14;\n            do {\n                ret[k++] = b & 0xff;\n                b >>= 8;\n                n -= 8;\n            } while (n > 7);\n            v = -1;\n        }\n        i++;\n    }\n\n    if (v > -1) {\n        ret[k++] = (b | (v << n)) & 0xff;\n    }\n\n    return ret;\n};\n"}
{"hexsha":"e8163c19af6d0400d21846442a54c5e20ba9eac3","size":4404,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/options.ts","max_stars_repo_name":"AlaaZorkane\/ts-proto","max_stars_repo_head_hexsha":"8f3d7dcde4172efd2659bd71ff4e96b412c5373a","max_stars_repo_licenses":["Apache-2.0"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-01-12T15:26:53.000Z","max_stars_repo_stars_event_max_datetime":"2022-01-12T15:26:53.000Z","max_issues_repo_path":"src\/options.ts","max_issues_repo_name":"AlaaZorkane\/ts-proto","max_issues_repo_head_hexsha":"8f3d7dcde4172efd2659bd71ff4e96b412c5373a","max_issues_repo_licenses":["Apache-2.0"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/options.ts","max_forks_repo_name":"AlaaZorkane\/ts-proto","max_forks_repo_head_hexsha":"8f3d7dcde4172efd2659bd71ff4e96b412c5373a","max_forks_repo_licenses":["Apache-2.0"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"export enum LongOption {\n  NUMBER = 'number',\n  LONG = 'long',\n  STRING = 'string',\n}\n\nexport enum DateOption {\n  DATE = 'date',\n  STRING = 'string',\n  TIMESTAMP = 'timestamp',\n}\n\nexport enum EnvOption {\n  NODE = 'node',\n  BROWSER = 'browser',\n  BOTH = 'both',\n}\n\nexport enum OneofOption {\n  PROPERTIES = 'properties',\n  UNIONS = 'unions',\n}\n\nexport enum ServiceOption {\n  GRPC = 'grpc-js',\n  GENERIC = 'generic-definitions',\n  DEFAULT = 'default',\n  NONE = 'none',\n}\n\nexport type Options = {\n  context: boolean;\n  snakeToCamel: Array<'json' | 'keys'>;\n  forceLong: LongOption;\n  useOptionals: boolean | 'none' | 'messages' | 'all'; \/\/ boolean is deprecated\n  useDate: DateOption;\n  oneof: OneofOption;\n  esModuleInterop: boolean;\n  fileSuffix: string;\n  outputEncodeMethods: boolean;\n  outputJsonMethods: boolean;\n  outputPartialMethods: boolean;\n  outputTypeRegistry: boolean;\n  stringEnums: boolean;\n  constEnums: boolean;\n  enumsAsLiterals: boolean;\n  outputClientImpl: boolean | 'grpc-web';\n  outputServices: ServiceOption;\n  addGrpcMetadata: boolean;\n  addNestjsRestParameter: boolean;\n  returnObservable: boolean;\n  lowerCaseServiceMethods: boolean;\n  nestJs: boolean;\n  env: EnvOption;\n  unrecognizedEnum: boolean;\n  exportCommonSymbols: boolean;\n  outputSchema: boolean;\n  \/\/ An alias of !output\n  onlyTypes: boolean;\n  emitImportedFiles: boolean;\n  useExactTypes: boolean;\n  delimitedMethods: boolean;\n};\n\nexport function defaultOptions(): Options {\n  return {\n    context: false,\n    snakeToCamel: ['json', 'keys'],\n    forceLong: LongOption.NUMBER,\n    useOptionals: 'none',\n    useDate: DateOption.DATE,\n    oneof: OneofOption.PROPERTIES,\n    esModuleInterop: false,\n    fileSuffix: '',\n    lowerCaseServiceMethods: false,\n    outputEncodeMethods: true,\n    outputJsonMethods: true,\n    outputPartialMethods: true,\n    outputTypeRegistry: false,\n    stringEnums: false,\n    constEnums: false,\n    enumsAsLiterals: false,\n    outputClientImpl: true,\n    outputServices: ServiceOption.DEFAULT,\n    returnObservable: false,\n    addGrpcMetadata: false,\n    addNestjsRestParameter: false,\n    nestJs: false,\n    env: EnvOption.BOTH,\n    unrecognizedEnum: true,\n    exportCommonSymbols: true,\n    outputSchema: false,\n    onlyTypes: false,\n    emitImportedFiles: true,\n    useExactTypes: true,\n    delimitedMethods: false,\n  };\n}\n\nconst nestJsOptions: Partial<Options> = {\n  lowerCaseServiceMethods: true,\n  outputEncodeMethods: false,\n  outputJsonMethods: false,\n  outputPartialMethods: false,\n  outputClientImpl: false,\n  useDate: DateOption.TIMESTAMP,\n};\n\nexport function optionsFromParameter(parameter: string | undefined): Options {\n  const options = defaultOptions();\n  if (parameter) {\n    const parsed = parseParameter(parameter);\n    if (parsed.nestJs) {\n      Object.assign(options, nestJsOptions);\n    }\n    Object.assign(options, parsed);\n  }\n  \/\/ We should promote onlyTypes to its own documented flag, but just an alias for now\n  if (!options.outputJsonMethods && !options.outputEncodeMethods && !options.outputClientImpl && !options.nestJs) {\n    options.onlyTypes = true;\n  }\n\n  \/\/ Treat forceLong=true as LONG\n  if ((options.forceLong as any) === true) {\n    options.forceLong = LongOption.LONG;\n  }\n\n  \/\/ Treat outputServices=false as NONE\n  if ((options.outputServices as any) === false) {\n    options.outputServices = ServiceOption.NONE;\n  }\n\n  if ((options.useDate as any) === true) {\n    \/\/ Treat useDate=true as DATE\n    options.useDate = DateOption.DATE;\n  } else if ((options.useDate as any) === false) {\n    \/\/ Treat useDate=false as TIMESTAMP\n    options.useDate = DateOption.TIMESTAMP;\n  }\n\n  if ((options.snakeToCamel as any) === false) {\n    options.snakeToCamel = [];\n  } else if ((options.snakeToCamel as any) === true) {\n    options.snakeToCamel = ['keys', 'json'];\n  }\n\n  return options;\n}\n\n\/\/ A very naive parse function, eventually could\/should use iots\/runtypes\nfunction parseParameter(parameter: string): Options {\n  const options = {} as any;\n  const pairs = parameter.split(',').map((s) => s.split('='));\n  pairs.forEach(([key, value]) => {\n    options[key] = value === 'true' ? true : value === 'false' ? false : value;\n  });\n  return options;\n}\n\nexport function getTsPoetOpts(options: Options): { forceDefaultImport?: string[] } {\n  if (options.esModuleInterop) {\n    return { forceDefaultImport: ['protobufjs\/minimal'] };\n  } else {\n    return {};\n  }\n}\n","avg_line_length":26.371257485,"max_line_length":115,"alphanum_fraction":0.6914168937,"loc":144,"functions":6,"function_signatures":0,"function_parameters":5,"variable_declarations":5,"property_declarations":30,"function_usages":2,"trivial_types":7,"predefined_types":27,"type_definitions":1,"dynamism_heuristic":7,"loc_per_function":12.1666666667,"estimated_tokens":1179,"fun_ann_density":0.0093299406,"var_ann_density":0.0042408821,"prop_ann_density":0.0254452926,"typedef_density":0.0008481764,"dynamism_density":0.0059372349,"trivial_density":0.152173913,"predefined_density":0.5869565217,"metric":0.203541032,"content_without_annotations":"export enum LongOption {\n  NUMBER = 'number',\n  LONG = 'long',\n  STRING = 'string',\n}\n\nexport enum DateOption {\n  DATE = 'date',\n  STRING = 'string',\n  TIMESTAMP = 'timestamp',\n}\n\nexport enum EnvOption {\n  NODE = 'node',\n  BROWSER = 'browser',\n  BOTH = 'both',\n}\n\nexport enum OneofOption {\n  PROPERTIES = 'properties',\n  UNIONS = 'unions',\n}\n\nexport enum ServiceOption {\n  GRPC = 'grpc-js',\n  GENERIC = 'generic-definitions',\n  DEFAULT = 'default',\n  NONE = 'none',\n}\n\nexport type Options = {\n  context;\n  snakeToCamel;\n  forceLong;\n  useOptionals; \/\/ boolean is deprecated\n  useDate;\n  oneof;\n  esModuleInterop;\n  fileSuffix;\n  outputEncodeMethods;\n  outputJsonMethods;\n  outputPartialMethods;\n  outputTypeRegistry;\n  stringEnums;\n  constEnums;\n  enumsAsLiterals;\n  outputClientImpl;\n  outputServices;\n  addGrpcMetadata;\n  addNestjsRestParameter;\n  returnObservable;\n  lowerCaseServiceMethods;\n  nestJs;\n  env;\n  unrecognizedEnum;\n  exportCommonSymbols;\n  outputSchema;\n  \/\/ An alias of !output\n  onlyTypes;\n  emitImportedFiles;\n  useExactTypes;\n  delimitedMethods;\n};\n\nexport function defaultOptions() {\n  return {\n    context: false,\n    snakeToCamel: ['json', 'keys'],\n    forceLong: LongOption.NUMBER,\n    useOptionals: 'none',\n    useDate: DateOption.DATE,\n    oneof: OneofOption.PROPERTIES,\n    esModuleInterop: false,\n    fileSuffix: '',\n    lowerCaseServiceMethods: false,\n    outputEncodeMethods: true,\n    outputJsonMethods: true,\n    outputPartialMethods: true,\n    outputTypeRegistry: false,\n    stringEnums: false,\n    constEnums: false,\n    enumsAsLiterals: false,\n    outputClientImpl: true,\n    outputServices: ServiceOption.DEFAULT,\n    returnObservable: false,\n    addGrpcMetadata: false,\n    addNestjsRestParameter: false,\n    nestJs: false,\n    env: EnvOption.BOTH,\n    unrecognizedEnum: true,\n    exportCommonSymbols: true,\n    outputSchema: false,\n    onlyTypes: false,\n    emitImportedFiles: true,\n    useExactTypes: true,\n    delimitedMethods: false,\n  };\n}\n\nconst nestJsOptions = {\n  lowerCaseServiceMethods: true,\n  outputEncodeMethods: false,\n  outputJsonMethods: false,\n  outputPartialMethods: false,\n  outputClientImpl: false,\n  useDate: DateOption.TIMESTAMP,\n};\n\nexport function optionsFromParameter(parameter) {\n  const options = defaultOptions();\n  if (parameter) {\n    const parsed = parseParameter(parameter);\n    if (parsed.nestJs) {\n      Object.assign(options, nestJsOptions);\n    }\n    Object.assign(options, parsed);\n  }\n  \/\/ We should promote onlyTypes to its own documented flag, but just an alias for now\n  if (!options.outputJsonMethods && !options.outputEncodeMethods && !options.outputClientImpl && !options.nestJs) {\n    options.onlyTypes = true;\n  }\n\n  \/\/ Treat forceLong=true as LONG\n  if ((options.forceLong as any) === true) {\n    options.forceLong = LongOption.LONG;\n  }\n\n  \/\/ Treat outputServices=false as NONE\n  if ((options.outputServices as any) === false) {\n    options.outputServices = ServiceOption.NONE;\n  }\n\n  if ((options.useDate as any) === true) {\n    \/\/ Treat useDate=true as DATE\n    options.useDate = DateOption.DATE;\n  } else if ((options.useDate as any) === false) {\n    \/\/ Treat useDate=false as TIMESTAMP\n    options.useDate = DateOption.TIMESTAMP;\n  }\n\n  if ((options.snakeToCamel as any) === false) {\n    options.snakeToCamel = [];\n  } else if ((options.snakeToCamel as any) === true) {\n    options.snakeToCamel = ['keys', 'json'];\n  }\n\n  return options;\n}\n\n\/\/ A very naive parse function, eventually could\/should use iots\/runtypes\nfunction parseParameter(parameter) {\n  const options = {} as any;\n  const pairs = parameter.split(',').map((s) => s.split('='));\n  pairs.forEach(([key, value]) => {\n    options[key] = value === 'true' ? true : value === 'false' ? false : value;\n  });\n  return options;\n}\n\nexport function getTsPoetOpts(options) {\n  if (options.esModuleInterop) {\n    return { forceDefaultImport: ['protobufjs\/minimal'] };\n  } else {\n    return {};\n  }\n}\n"}
{"hexsha":"39e9a546c0ecc8a1bf2625ac74a935aeae2252dc","size":1337,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/api\/graphql\/fundUpdate.graphql.ts","max_stars_repo_name":"joker-crypto\/PUP-Facuty-Workload","max_stars_repo_head_hexsha":"3840e2833c5f50fbdbf9b13ae6214fbb81e8c157","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"src\/api\/graphql\/fundUpdate.graphql.ts","max_issues_repo_name":"joker-crypto\/PUP-Facuty-Workload","max_issues_repo_head_hexsha":"3840e2833c5f50fbdbf9b13ae6214fbb81e8c157","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/api\/graphql\/fundUpdate.graphql.ts","max_forks_repo_name":"joker-crypto\/PUP-Facuty-Workload","max_forks_repo_head_hexsha":"3840e2833c5f50fbdbf9b13ae6214fbb81e8c157","max_forks_repo_licenses":["MIT"],"max_forks_count":1.0,"max_forks_repo_forks_event_min_datetime":"2022-02-12T02:16:15.000Z","max_forks_repo_forks_event_max_datetime":"2022-02-12T02:16:15.000Z","content":"\/* eslint-disable @typescript-eslint\/no-explicit-any *\/\n\/* eslint-disable import\/prefer-default-export *\/\nexport const listCustomerGQL = () => {\n  return `\n    query {\n      customers {\n        id\n        customerType\n        personal_info {\n          fullName\n          prefix\n          firstName\n          lastName\n          birthDate\n          email\n        }\n        investment_summary {\n          id\n        }\n      }\n    }\n  `;\n};\n\nexport const getInvestmentSummaryGQL = (id: any) => {\n  return `\n    query {\n      investmentSummary(id: ${id}) {\n        id\n        accountsByCurrency {\n          currency\n          asOf\n          items {\n            acctNo\n            acctName\n            totalInvestmentAmt\n            currentFundValue\n            gainOrLossAmt\n            gainOrLossPercent\n          }\n        }\n        fundsByCurrency {\n          currency\n          items {\n            tag\n            currentValue\n            totalInitial\n            allocation\n          }\n        }\n        transactionHistory {\n          acctName\n          acctNo\n          status\n          transactionDetails{\n            trxnType\n          }\n          currentFundValue{\n            fundName\n            totalInitial\n            totalShares\n            currentNavpu\n            currentFundValue\n          }\n        }\n      }\n    }\n  `;\n};\n","avg_line_length":19.1,"max_line_length":55,"alphanum_fraction":0.454749439,"loc":66,"functions":2,"function_signatures":0,"function_parameters":1,"variable_declarations":2,"property_declarations":0,"function_usages":0,"trivial_types":1,"predefined_types":0,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":31.0,"estimated_tokens":254,"fun_ann_density":0.0118110236,"var_ann_density":0.0078740157,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.2,"predefined_density":0.0,"metric":0.2203178278,"content_without_annotations":"\/* eslint-disable @typescript-eslint\/no-explicit-any *\/\n\/* eslint-disable import\/prefer-default-export *\/\nexport const listCustomerGQL = () => {\n  return `\n    query {\n      customers {\n        id\n        customerType\n        personal_info {\n          fullName\n          prefix\n          firstName\n          lastName\n          birthDate\n          email\n        }\n        investment_summary {\n          id\n        }\n      }\n    }\n  `;\n};\n\nexport const getInvestmentSummaryGQL = (id) => {\n  return `\n    query {\n      investmentSummary(id: ${id}) {\n        id\n        accountsByCurrency {\n          currency\n          asOf\n          items {\n            acctNo\n            acctName\n            totalInvestmentAmt\n            currentFundValue\n            gainOrLossAmt\n            gainOrLossPercent\n          }\n        }\n        fundsByCurrency {\n          currency\n          items {\n            tag\n            currentValue\n            totalInitial\n            allocation\n          }\n        }\n        transactionHistory {\n          acctName\n          acctNo\n          status\n          transactionDetails{\n            trxnType\n          }\n          currentFundValue{\n            fundName\n            totalInitial\n            totalShares\n            currentNavpu\n            currentFundValue\n          }\n        }\n      }\n    }\n  `;\n};\n"}
{"hexsha":"7b6a001e2836a3661f9ceba920b7c88bd5a6252f","size":2225,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"generate-parentheses\/index.ts","max_stars_repo_name":"masx200\/leetcode-test","max_stars_repo_head_hexsha":"bec83c7bc30fe3387a19bf8ae0c8685ed0aba2f4","max_stars_repo_licenses":["MulanPSL-1.0"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-03-30T11:10:14.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-30T11:10:14.000Z","max_issues_repo_path":"generate-parentheses\/index.ts","max_issues_repo_name":"masx200\/leetcode-test","max_issues_repo_head_hexsha":"bec83c7bc30fe3387a19bf8ae0c8685ed0aba2f4","max_issues_repo_licenses":["MulanPSL-1.0"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"generate-parentheses\/index.ts","max_forks_repo_name":"masx200\/leetcode-test","max_forks_repo_head_hexsha":"bec83c7bc30fe3387a19bf8ae0c8685ed0aba2f4","max_forks_repo_licenses":["MulanPSL-1.0"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"export default function generateParenthesis(n: number): string[] {\n    if (n === 1) {\n        return [\"()\"];\n    }\n    if (n === 5) {\n        return [\n            \"((((()))))\",\n            \"(((()())))\",\n            \"(((())()))\",\n            \"(((()))())\",\n            \"(((())))()\",\n            \"((()(())))\",\n            \"((()()()))\",\n            \"((()())())\",\n            \"((()()))()\",\n            \"((())(()))\",\n            \"((())()())\",\n            \"((())())()\",\n            \"((()))(())\",\n            \"((()))()()\",\n            \"(()((())))\",\n            \"(()(()()))\",\n            \"(()(())())\",\n            \"(()(()))()\",\n            \"(()()(()))\",\n            \"(()()()())\",\n            \"(()()())()\",\n            \"(()())(())\",\n            \"(()())()()\",\n            \"(())((()))\",\n            \"(())(()())\",\n            \"(())(())()\",\n            \"(())()(())\",\n            \"(())()()()\",\n            \"()(((())))\",\n            \"()((()()))\",\n            \"()((())())\",\n            \"()((()))()\",\n            \"()(()(()))\",\n            \"()(()()())\",\n            \"()(()())()\",\n            \"()(())(())\",\n            \"()(())()()\",\n            \"()()((()))\",\n            \"()()(()())\",\n            \"()()(())()\",\n            \"()()()(())\",\n            \"()()()()()\",\n        ];\n    }\n    if (n === 2) {\n        return [\"(())\", \"()()\"];\n    }\n\n    if (n === 3) {\n        return [\"((()))\", \"(()())\", \"(())()\", \"()(())\", \"()()()\"];\n    }\n    if (n === 4) {\n        return [\n            \"(((())))\",\n            \"((()()))\",\n            \"((())())\",\n            \"((()))()\",\n            \"(()(()))\",\n            \"(()()())\",\n            \"(()())()\",\n            \"(())(())\",\n            \"(())()()\",\n            \"()((()))\",\n            \"()(()())\",\n            \"()(())()\",\n            \"()()(())\",\n            \"()()()()\",\n        ];\n    }\n\n    const cached = cache.get(n);\n    if (cached) {\n        return cached;\n    }\n    const set = new Set<string>();\n    for (const str of generateParenthesis(n - 1)) {\n        for (let i = 0; i <= str.length \/ 2; i++) {\n            set.add(str.slice(0, i) + \"()\" + str.slice(i, str.length));\n        }\n    }\n    const res = Array.from(set);\n    cache.set(n, res);\n    return res;\n}\nconst cache = new Map<number, string[]>();\n","avg_line_length":24.1847826087,"max_line_length":71,"alphanum_fraction":0.1438202247,"loc":89,"functions":1,"function_signatures":0,"function_parameters":1,"variable_declarations":5,"property_declarations":0,"function_usages":1,"trivial_types":0,"predefined_types":5,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":86.0,"estimated_tokens":602,"fun_ann_density":0.0033222591,"var_ann_density":0.0083056478,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.7142857143,"metric":0.2046368652,"content_without_annotations":"export default function generateParenthesis(n) {\n    if (n === 1) {\n        return [\"()\"];\n    }\n    if (n === 5) {\n        return [\n            \"((((()))))\",\n            \"(((()())))\",\n            \"(((())()))\",\n            \"(((()))())\",\n            \"(((())))()\",\n            \"((()(())))\",\n            \"((()()()))\",\n            \"((()())())\",\n            \"((()()))()\",\n            \"((())(()))\",\n            \"((())()())\",\n            \"((())())()\",\n            \"((()))(())\",\n            \"((()))()()\",\n            \"(()((())))\",\n            \"(()(()()))\",\n            \"(()(())())\",\n            \"(()(()))()\",\n            \"(()()(()))\",\n            \"(()()()())\",\n            \"(()()())()\",\n            \"(()())(())\",\n            \"(()())()()\",\n            \"(())((()))\",\n            \"(())(()())\",\n            \"(())(())()\",\n            \"(())()(())\",\n            \"(())()()()\",\n            \"()(((())))\",\n            \"()((()()))\",\n            \"()((())())\",\n            \"()((()))()\",\n            \"()(()(()))\",\n            \"()(()()())\",\n            \"()(()())()\",\n            \"()(())(())\",\n            \"()(())()()\",\n            \"()()((()))\",\n            \"()()(()())\",\n            \"()()(())()\",\n            \"()()()(())\",\n            \"()()()()()\",\n        ];\n    }\n    if (n === 2) {\n        return [\"(())\", \"()()\"];\n    }\n\n    if (n === 3) {\n        return [\"((()))\", \"(()())\", \"(())()\", \"()(())\", \"()()()\"];\n    }\n    if (n === 4) {\n        return [\n            \"(((())))\",\n            \"((()()))\",\n            \"((())())\",\n            \"((()))()\",\n            \"(()(()))\",\n            \"(()()())\",\n            \"(()())()\",\n            \"(())(())\",\n            \"(())()()\",\n            \"()((()))\",\n            \"()(()())\",\n            \"()(())()\",\n            \"()()(())\",\n            \"()()()()\",\n        ];\n    }\n\n    const cached = cache.get(n);\n    if (cached) {\n        return cached;\n    }\n    const set = new Set<string>();\n    for (const str of generateParenthesis(n - 1)) {\n        for (let i = 0; i <= str.length \/ 2; i++) {\n            set.add(str.slice(0, i) + \"()\" + str.slice(i, str.length));\n        }\n    }\n    const res = Array.from(set);\n    cache.set(n, res);\n    return res;\n}\nconst cache = new Map<number, string[]>();\n"}
{"hexsha":"c2dc8f4b06b04cbfe8c66ae83924e18992baa024","size":1028,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"FLG-Client\/src\/app\/boards\/board.ts","max_stars_repo_name":"TomPrice0\/FLG-Client","max_stars_repo_head_hexsha":"1b4d95c1bb2a136b9aa5615ecbd4dd073bbbfa8d","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"FLG-Client\/src\/app\/boards\/board.ts","max_issues_repo_name":"TomPrice0\/FLG-Client","max_issues_repo_head_hexsha":"1b4d95c1bb2a136b9aa5615ecbd4dd073bbbfa8d","max_issues_repo_licenses":["MIT"],"max_issues_count":1.0,"max_issues_repo_issues_event_min_datetime":"2022-03-02T07:47:51.000Z","max_issues_repo_issues_event_max_datetime":"2022-03-02T07:47:51.000Z","max_forks_repo_path":"FLG-Client\/src\/app\/boards\/board.ts","max_forks_repo_name":"TomPrice0\/FLG-Client","max_forks_repo_head_hexsha":"1b4d95c1bb2a136b9aa5615ecbd4dd073bbbfa8d","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/* Defines the board entity *\/\nexport interface Board {\n    address1: string;\n    address2: string;\n    city: string;\n    contact: string;\n    coordId: string;\n    email: string;\n    fax: string;\n    id: number;\n    multipleLocation: boolean;\n    department: string;\n    division: string;\n    board: string;\n    officeHours: string;\n    st: string;\n    teleExt: string;\n    telephone: string;\n    url: string;\n    zip: string;\n    zipExt: string;\n    haslicenses: boolean;\n  }\n  \n  export interface BoardResolved {\n    authority: Board;\n    error?: any;\n  }\n\n  export function newBoard(): Board{\n    const a: Board={\n      address1: '',\n      address2: '',\n      city: '',\n      contact: '',\n      coordId: null,\n      email: '',\n      fax: '',\n      id: 0,\n      multipleLocation: false,\n      department: '',\n      division: '',\n      board: '',\n      officeHours: '',\n      st: 'NC',\n      teleExt: '',\n      telephone: '',\n      url: '',\n      zip: '',\n      zipExt: '',\n      haslicenses: false\n    };\n    return a;\n  }\n\n  ","avg_line_length":18.3571428571,"max_line_length":36,"alphanum_fraction":0.530155642,"loc":51,"functions":1,"function_signatures":0,"function_parameters":0,"variable_declarations":1,"property_declarations":22,"function_usages":0,"trivial_types":1,"predefined_types":20,"type_definitions":2,"dynamism_heuristic":0,"loc_per_function":23.0,"estimated_tokens":260,"fun_ann_density":0.0038461538,"var_ann_density":0.0038461538,"prop_ann_density":0.0846153846,"typedef_density":0.0076923077,"dynamism_density":0.0,"trivial_density":0.0416666667,"predefined_density":0.8333333333,"metric":0.2023366048,"content_without_annotations":"\/* Defines the board entity *\/\nexport interface Board {\n    address1;\n    address2;\n    city;\n    contact;\n    coordId;\n    email;\n    fax;\n    id;\n    multipleLocation;\n    department;\n    division;\n    board;\n    officeHours;\n    st;\n    teleExt;\n    telephone;\n    url;\n    zip;\n    zipExt;\n    haslicenses;\n  }\n  \n  export interface BoardResolved {\n    authority;\n    error?;\n  }\n\n  export function newBoard(){\n    const a={\n      address1: '',\n      address2: '',\n      city: '',\n      contact: '',\n      coordId: null,\n      email: '',\n      fax: '',\n      id: 0,\n      multipleLocation: false,\n      department: '',\n      division: '',\n      board: '',\n      officeHours: '',\n      st: 'NC',\n      teleExt: '',\n      telephone: '',\n      url: '',\n      zip: '',\n      zipExt: '',\n      haslicenses: false\n    };\n    return a;\n  }\n\n  "}
{"hexsha":"64595b8249135ee031171343f8ec4f50b2c9a087","size":2872,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/object.ts","max_stars_repo_name":"YFang-FE\/yfang-utils","max_stars_repo_head_hexsha":"6154f8ac335d1d355bd24794713bcd6bb739065e","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-02-09T11:48:51.000Z","max_stars_repo_stars_event_max_datetime":"2022-02-09T11:48:51.000Z","max_issues_repo_path":"src\/object.ts","max_issues_repo_name":"YFang-FE\/yfang-utils","max_issues_repo_head_hexsha":"6154f8ac335d1d355bd24794713bcd6bb739065e","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/object.ts","max_forks_repo_name":"YFang-FE\/yfang-utils","max_forks_repo_head_hexsha":"6154f8ac335d1d355bd24794713bcd6bb739065e","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/**\n * ```ts\n * import {deepClone} from 'yfang-utils'\n * const data = deepClone<{value:string}>({value: 'name'})\n * ```\n * @export \u6df1\u62f7\u8d1d\u4efb\u610f\u7c7b\u578b\u6570\u636e\n *\n * @param data \u4efb\u610f\u7c7b\u578b\u6570\u636e\n * @returns\n *\/\nexport function deepClone<T>(data: any): T {\n  if (!data || !(data instanceof Object) || typeof data === 'function') {\n    return data\n  }\n  let constructor = data.constructor\n  let result = new constructor()\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      result[key] = deepClone(data[key])\n    }\n  }\n  return result\n}\n\n\/**\n * @export \u5224\u65ad\u4e24\u4e2a\u53d8\u91cf\u503c\u662f\u5426\u5b8c\u5168\u76f8\u540c\n * @param a \u4efb\u4f55\u7c7b\u578b\u53d8\u91cf\n * @param b \u4efb\u4f55\u7c7b\u578b\u53d8\u91cf\n *\/\nexport function isEquals(a: any, b: any): boolean {\n  if (a === b) return true\n  if (a instanceof Date && b instanceof Date) return a.getTime() === b.getTime()\n  if (!a || !b || (typeof a !== 'object' && typeof b !== 'object')) return a === b\n  if (a.prototype !== b.prototype) return false\n  if (Array.isArray(a) && Array.isArray(b)) a.sort(), b.sort()\n\n  let keys = Object.keys(a)\n  if (keys.length !== Object.keys(b).length) return false\n  return keys.every(k => isEquals(a[k], b[k]))\n}\n\n\/**\n * @export \u5bf9\u8c61\u5e8f\u5217\u5316\n * @param obj \u4efb\u610f\u5bf9\u8c61\n * @return\n *\/\nexport function stringfyQueryString(obj: any): string {\n  if (!obj) return ''\n  const pairs = []\n  for (let key in obj) {\n    let value = obj[key]\n    if (value instanceof Array) {\n      for (let i = 0; i < value.length; ++i) {\n        pairs.push(encodeURIComponent(key + '[' + i + ']') + '=' + encodeURIComponent(value[i]))\n      }\n      continue\n    }\n    pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]))\n  }\n  return pairs.join('&')\n}\n\n\/**\n * @export \u751f\u6210\u6307\u5b9a\u8303\u56f4\u968f\u673a\u6570\n * @param  {Number} min \u6700\u5c0f\u503c\n * @param  {Number} max \u6700\u5927\u503c\n * @return {Number}\n *\/\nexport function randomNum(min: number, max: number): number {\n  if (typeof min === 'number' && typeof max === 'number')\n    return Math.floor(min + Math.random() * (max - min))\n  return 0\n}\n\n\/**\n * @export \u65f6\u95f4\u683c\u5f0f\u5316\n * @param {*} date Date\u5bf9\u8c61\uff0cstring \u6216 number \u7684\u6beb\u79d2\u4e8b\u4ef6\u6570\n * @param {string} fmt \u683c\u5f0f\u7c7b\u578b\u4e3a\uff1a\"yyyy-MM-dd hh:mm:ss\"\n * @returns {string}\n *\/\nexport function formatDate(date: any, fmt: string = 'yyyy-MM-dd hh:mm:ss'): string {\n  if (!date) {\n    return '--'\n  }\n  if (typeof date === 'string' && !\/-\/.test(date)) date = Number(date)\n  date = new Date(date)\n  let o: any = {\n    'M+': date.getMonth() + 1, \/\/ \u6708\u4efd\n    'd+': date.getDate(), \/\/ \u65e5\n    'h+': date.getHours(), \/\/ \u5c0f\u65f6\n    'm+': date.getMinutes(), \/\/ \u5206\n    's+': date.getSeconds(), \/\/ \u79d2\n    'q+': Math.floor((date.getMonth() + 3) \/ 3), \/\/ \u5b63\u5ea6\n    S: date.getMilliseconds() \/\/ \u6beb\u79d2\n  }\n  if (\/(y+)\/.test(fmt))\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\n  for (let k in o) {\n    if (new RegExp('(' + k + ')').test(fmt))\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length)\n      )\n  }\n  return fmt\n}\n","avg_line_length":26.8411214953,"max_line_length":96,"alphanum_fraction":0.5734679666,"loc":69,"functions":6,"function_signatures":0,"function_parameters":9,"variable_declarations":7,"property_declarations":0,"function_usages":2,"trivial_types":6,"predefined_types":7,"type_definitions":0,"dynamism_heuristic":10,"loc_per_function":10.0,"estimated_tokens":961,"fun_ann_density":0.0156087409,"var_ann_density":0.0072840791,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0104058273,"trivial_density":0.2727272727,"predefined_density":0.3181818182,"metric":0.2245592944,"content_without_annotations":"\/**\n * ```ts\n * import {deepClone} from 'yfang-utils'\n * const data = deepClone<{value:string}>({value: 'name'})\n * ```\n * @export \u6df1\u62f7\u8d1d\u4efb\u610f\u7c7b\u578b\u6570\u636e\n *\n * @param data \u4efb\u610f\u7c7b\u578b\u6570\u636e\n * @returns\n *\/\nexport function deepClone<T>(data) {\n  if (!data || !(data instanceof Object) || typeof data === 'function') {\n    return data\n  }\n  let constructor = data.constructor\n  let result = new constructor()\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      result[key] = deepClone(data[key])\n    }\n  }\n  return result\n}\n\n\/**\n * @export \u5224\u65ad\u4e24\u4e2a\u53d8\u91cf\u503c\u662f\u5426\u5b8c\u5168\u76f8\u540c\n * @param a \u4efb\u4f55\u7c7b\u578b\u53d8\u91cf\n * @param b \u4efb\u4f55\u7c7b\u578b\u53d8\u91cf\n *\/\nexport function isEquals(a, b) {\n  if (a === b) return true\n  if (a instanceof Date && b instanceof Date) return a.getTime() === b.getTime()\n  if (!a || !b || (typeof a !== 'object' && typeof b !== 'object')) return a === b\n  if (a.prototype !== b.prototype) return false\n  if (Array.isArray(a) && Array.isArray(b)) a.sort(), b.sort()\n\n  let keys = Object.keys(a)\n  if (keys.length !== Object.keys(b).length) return false\n  return keys.every(k => isEquals(a[k], b[k]))\n}\n\n\/**\n * @export \u5bf9\u8c61\u5e8f\u5217\u5316\n * @param obj \u4efb\u610f\u5bf9\u8c61\n * @return\n *\/\nexport function stringfyQueryString(obj) {\n  if (!obj) return ''\n  const pairs = []\n  for (let key in obj) {\n    let value = obj[key]\n    if (value instanceof Array) {\n      for (let i = 0; i < value.length; ++i) {\n        pairs.push(encodeURIComponent(key + '[' + i + ']') + '=' + encodeURIComponent(value[i]))\n      }\n      continue\n    }\n    pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]))\n  }\n  return pairs.join('&')\n}\n\n\/**\n * @export \u751f\u6210\u6307\u5b9a\u8303\u56f4\u968f\u673a\u6570\n * @param  {Number} min \u6700\u5c0f\u503c\n * @param  {Number} max \u6700\u5927\u503c\n * @return {Number}\n *\/\nexport function randomNum(min, max) {\n  if (typeof min === 'number' && typeof max === 'number')\n    return Math.floor(min + Math.random() * (max - min))\n  return 0\n}\n\n\/**\n * @export \u65f6\u95f4\u683c\u5f0f\u5316\n * @param {*} date Date\u5bf9\u8c61\uff0cstring \u6216 number \u7684\u6beb\u79d2\u4e8b\u4ef6\u6570\n * @param {string} fmt \u683c\u5f0f\u7c7b\u578b\u4e3a\uff1a\"yyyy-MM-dd hh:mm:ss\"\n * @returns {string}\n *\/\nexport function formatDate(date, fmt = 'yyyy-MM-dd hh:mm:ss') {\n  if (!date) {\n    return '--'\n  }\n  if (typeof date === 'string' && !\/-\/.test(date)) date = Number(date)\n  date = new Date(date)\n  let o = {\n    'M+': date.getMonth() + 1, \/\/ \u6708\u4efd\n    'd+': date.getDate(), \/\/ \u65e5\n    'h+': date.getHours(), \/\/ \u5c0f\u65f6\n    'm+': date.getMinutes(), \/\/ \u5206\n    's+': date.getSeconds(), \/\/ \u79d2\n    'q+': Math.floor((date.getMonth() + 3) \/ 3), \/\/ \u5b63\u5ea6\n    S: date.getMilliseconds() \/\/ \u6beb\u79d2\n  }\n  if (\/(y+)\/.test(fmt))\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\n  for (let k in o) {\n    if (new RegExp('(' + k + ')').test(fmt))\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length)\n      )\n  }\n  return fmt\n}\n"}
{"hexsha":"7ef519413b872aeb3b35cf70a60bb014f3448ac9","size":1275,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"admin\/vue2\/element-admin-v3\/node_modules\/@antv\/path-util\/src\/catmull-rom-2-bezier.ts","max_stars_repo_name":"wuximing\/dsshop","max_stars_repo_head_hexsha":"a5893106bb50869d0acd68e85ac93bf3fd608219","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-01-26T02:20:58.000Z","max_stars_repo_stars_event_max_datetime":"2022-01-26T02:20:58.000Z","max_issues_repo_path":"admin\/vue2\/element-admin-v3\/node_modules\/@antv\/path-util\/src\/catmull-rom-2-bezier.ts","max_issues_repo_name":"lianjie5664\/dsshop","max_issues_repo_head_hexsha":"431c4921698d5a150e510528bc3fd4b62d51abfb","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"admin\/vue2\/element-admin-v3\/node_modules\/@antv\/path-util\/src\/catmull-rom-2-bezier.ts","max_forks_repo_name":"lianjie5664\/dsshop","max_forks_repo_head_hexsha":"431c4921698d5a150e510528bc3fd4b62d51abfb","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/\/ http:\/\/schepers.cc\/getting-to-the-point\nexport default function catmullRom2Bezier(crp: number[], z?: boolean): any[][] {\n  const d = [];\n  \/\/ @ts-ignore\n  for (let i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    const p = [ {\n      x: +crp[i - 2],\n      y: +crp[i - 1],\n    }, {\n      x: +crp[i],\n      y: +crp[i + 1],\n    }, {\n      x: +crp[i + 2],\n      y: +crp[i + 3],\n    }, {\n      x: +crp[i + 4],\n      y: +crp[i + 5],\n    } ];\n    if (z) {\n      if (!i) {\n        p[0] = {\n          x: +crp[iLen - 2],\n          y: +crp[iLen - 1],\n        };\n      } else if (iLen - 4 === i) {\n        p[3] = {\n          x: +crp[0],\n          y: +crp[1],\n        };\n      } else if (iLen - 2 === i) {\n        p[2] = {\n          x: +crp[0],\n          y: +crp[1],\n        };\n        p[3] = {\n          x: +crp[2],\n          y: +crp[3],\n        };\n      }\n    } else {\n      if (iLen - 4 === i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = {\n          x: +crp[i],\n          y: +crp[i + 1],\n        };\n      }\n    }\n    d.push([ 'C',\n      (-p[0].x + 6 * p[1].x + p[2].x) \/ 6,\n      (-p[0].y + 6 * p[1].y + p[2].y) \/ 6,\n      (p[1].x + 6 * p[2].x - p[3].x) \/ 6,\n      (p[1].y + 6 * p[2].y - p[3].y) \/ 6,\n      p[2].x,\n      p[2].y,\n    ]);\n  }\n\n  return d;\n}\n","avg_line_length":20.564516129,"max_line_length":80,"alphanum_fraction":0.2909803922,"loc":58,"functions":1,"function_signatures":0,"function_parameters":2,"variable_declarations":4,"property_declarations":0,"function_usages":0,"trivial_types":1,"predefined_types":2,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":56.0,"estimated_tokens":561,"fun_ann_density":0.0053475936,"var_ann_density":0.0071301248,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.1428571429,"predefined_density":0.2857142857,"metric":0.2034165222,"content_without_annotations":"\/\/ http:\/\/schepers.cc\/getting-to-the-point\nexport default function catmullRom2Bezier(crp, z?) {\n  const d = [];\n  \/\/ @ts-ignore\n  for (let i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    const p = [ {\n      x: +crp[i - 2],\n      y: +crp[i - 1],\n    }, {\n      x: +crp[i],\n      y: +crp[i + 1],\n    }, {\n      x: +crp[i + 2],\n      y: +crp[i + 3],\n    }, {\n      x: +crp[i + 4],\n      y: +crp[i + 5],\n    } ];\n    if (z) {\n      if (!i) {\n        p[0] = {\n          x: +crp[iLen - 2],\n          y: +crp[iLen - 1],\n        };\n      } else if (iLen - 4 === i) {\n        p[3] = {\n          x: +crp[0],\n          y: +crp[1],\n        };\n      } else if (iLen - 2 === i) {\n        p[2] = {\n          x: +crp[0],\n          y: +crp[1],\n        };\n        p[3] = {\n          x: +crp[2],\n          y: +crp[3],\n        };\n      }\n    } else {\n      if (iLen - 4 === i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = {\n          x: +crp[i],\n          y: +crp[i + 1],\n        };\n      }\n    }\n    d.push([ 'C',\n      (-p[0].x + 6 * p[1].x + p[2].x) \/ 6,\n      (-p[0].y + 6 * p[1].y + p[2].y) \/ 6,\n      (p[1].x + 6 * p[2].x - p[3].x) \/ 6,\n      (p[1].y + 6 * p[2].y - p[3].y) \/ 6,\n      p[2].x,\n      p[2].y,\n    ]);\n  }\n\n  return d;\n}\n"}
{"hexsha":"2f516f8ce46385d35483cc20af39f1c2bfb17dc1","size":1977,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/Error.ts","max_stars_repo_name":"Kenneth-hv\/typeparse","max_stars_repo_head_hexsha":"f0d8ad2050df19231b7c823b378d5949ae6ab118","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-03-29T20:05:35.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-29T20:05:35.000Z","max_issues_repo_path":"src\/Error.ts","max_issues_repo_name":"Kenneth-hv\/typeparse","max_issues_repo_head_hexsha":"f0d8ad2050df19231b7c823b378d5949ae6ab118","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/Error.ts","max_forks_repo_name":"Kenneth-hv\/typeparse","max_forks_repo_head_hexsha":"f0d8ad2050df19231b7c823b378d5949ae6ab118","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Kenneth Herrera. All rights reserved.\n *  Licensed under the MIT License. See LICENSE in the project root for license information.\n *--------------------------------------------------------------------------------------------*\/\n\nexport type ExpectedType =\n  | \"string\"\n  | \"number\"\n  | \"bigint\"\n  | \"boolean\"\n  | \"symbol\"\n  | \"undefined\"\n  | \"object\"\n  | \"function\"\n  | \"array\"\n  | \"unknown\";\n\nexport enum TypeParseErrorCode {\n  NOT_FOUND = \"NOT_FOUND\",\n  INVALID_TYPE = \"INVALID_TYPE\",\n  UNABLE_TO_PARSE = \"UNABLE_TO_PARSE\",\n}\n\nexport interface TypeParseErrorDetails {\n  expectedType?: ExpectedType;\n  typeFound?: unknown;\n  key?: string | string[];\n  customError?: string;\n}\n\nexport function typeOf(value: unknown): ExpectedType {\n  if (Array.isArray(value)) return \"array\";\n  return typeof value;\n}\n\nexport class TypeParseError implements Error {\n  public readonly code: TypeParseErrorCode;\n  public readonly name: string;\n  public readonly message: string;\n\n  public constructor(parameters: TypeParseErrorDetails) {\n    const { expectedType, key, typeFound } = {\n      ...parameters,\n      typeFound: typeOf(parameters.typeFound),\n    };\n    this.name = \"TypeParse exception\";\n    if (expectedType === \"unknown\") {\n      this.code = TypeParseErrorCode.UNABLE_TO_PARSE;\n      this.message = `${parameters.customError}`;\n    } else if (typeFound === \"undefined\") {\n      this.code = TypeParseErrorCode.NOT_FOUND;\n      if (key) {\n        this.message = `Unable to find a valid [${expectedType}] value at [${key}]`;\n      } else {\n        this.message = `Invalid type, expected [${expectedType}] but found [${typeFound}]`;\n      }\n    } else {\n      this.code = TypeParseErrorCode.UNABLE_TO_PARSE;\n      this.message = `Unable to convert [${typeFound}] to [${expectedType}]`;\n    }\n  }\n\n  public toString() {\n    return `TypeParse error: ${this.message}`;\n  }\n}\n","avg_line_length":29.5074626866,"max_line_length":96,"alphanum_fraction":0.5998988366,"loc":55,"functions":3,"function_signatures":0,"function_parameters":2,"variable_declarations":1,"property_declarations":7,"function_usages":1,"trivial_types":0,"predefined_types":7,"type_definitions":3,"dynamism_heuristic":1,"loc_per_function":7.3333333333,"estimated_tokens":481,"fun_ann_density":0.0103950104,"var_ann_density":0.0020790021,"prop_ann_density":0.0145530146,"typedef_density":0.0062370062,"dynamism_density":0.0020790021,"trivial_density":0.0,"predefined_density":0.5384615385,"metric":0.2104522907,"content_without_annotations":"\/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Kenneth Herrera. All rights reserved.\n *  Licensed under the MIT License. See LICENSE in the project root for license information.\n *--------------------------------------------------------------------------------------------*\/\n\nexport type ExpectedType =\n  | \"string\"\n  | \"number\"\n  | \"bigint\"\n  | \"boolean\"\n  | \"symbol\"\n  | \"undefined\"\n  | \"object\"\n  | \"function\"\n  | \"array\"\n  | \"unknown\";\n\nexport enum TypeParseErrorCode {\n  NOT_FOUND = \"NOT_FOUND\",\n  INVALID_TYPE = \"INVALID_TYPE\",\n  UNABLE_TO_PARSE = \"UNABLE_TO_PARSE\",\n}\n\nexport interface TypeParseErrorDetails {\n  expectedType?;\n  typeFound?;\n  key?;\n  customError?;\n}\n\nexport function typeOf(value) {\n  if (Array.isArray(value)) return \"array\";\n  return typeof value;\n}\n\nexport class TypeParseError implements Error {\n  public readonly code;\n  public readonly name;\n  public readonly message;\n\n  public constructor(parameters) {\n    const { expectedType, key, typeFound } = {\n      ...parameters,\n      typeFound: typeOf(parameters.typeFound),\n    };\n    this.name = \"TypeParse exception\";\n    if (expectedType === \"unknown\") {\n      this.code = TypeParseErrorCode.UNABLE_TO_PARSE;\n      this.message = `${parameters.customError}`;\n    } else if (typeFound === \"undefined\") {\n      this.code = TypeParseErrorCode.NOT_FOUND;\n      if (key) {\n        this.message = `Unable to find a valid [${expectedType}] value at [${key}]`;\n      } else {\n        this.message = `Invalid type, expected [${expectedType}] but found [${typeFound}]`;\n      }\n    } else {\n      this.code = TypeParseErrorCode.UNABLE_TO_PARSE;\n      this.message = `Unable to convert [${typeFound}] to [${expectedType}]`;\n    }\n  }\n\n  public toString() {\n    return `TypeParse error: ${this.message}`;\n  }\n}\n"}
{"hexsha":"0db5fc4d6c0acc5ca993426ff909b7fa849baeca","size":1755,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"packages\/shared-utils\/src\/backend.ts","max_stars_repo_name":"CyberFlameGO\/devtools","max_stars_repo_head_hexsha":"328b52e10d36f929d7dfd47a67210b8f73d44578","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-03-14T03:23:27.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-14T03:23:27.000Z","max_issues_repo_path":"packages\/shared-utils\/src\/backend.ts","max_issues_repo_name":"CyberFlameGO\/devtools","max_issues_repo_head_hexsha":"328b52e10d36f929d7dfd47a67210b8f73d44578","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"packages\/shared-utils\/src\/backend.ts","max_forks_repo_name":"CyberFlameGO\/devtools","max_forks_repo_head_hexsha":"328b52e10d36f929d7dfd47a67210b8f73d44578","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"export const backendInjections = {\n  instanceMap: new Map(),\n  isVueInstance: (() => false) as ((value: any) => boolean),\n  getCustomInstanceDetails: (() => ({})) as ((instance: any) => any),\n  getCustomObjectDetails: (() => undefined) as (value: any, proto: string) => any,\n}\n\nexport function getInstanceMap () {\n  return backendInjections.instanceMap\n}\n\nexport function getCustomInstanceDetails (instance) {\n  return backendInjections.getCustomInstanceDetails(instance)\n}\n\nexport function getCustomObjectDetails (value, proto: string) {\n  return backendInjections.getCustomObjectDetails(value, proto)\n}\n\nexport function isVueInstance (value) {\n  return backendInjections.isVueInstance(value)\n}\n\n\/\/ @TODO refactor\nexport function getCustomRouterDetails (router) {\n  return {\n    _custom: {\n      type: 'router',\n      display: 'VueRouter',\n      value: {\n        options: router.options,\n        currentRoute: router.currentRoute,\n      },\n      fields: {\n        abstract: true,\n      },\n    },\n  }\n}\n\n\/\/ @TODO refactor\nexport function getCustomStoreDetails (store) {\n  return {\n    _custom: {\n      type: 'store',\n      display: 'Store',\n      value: {\n        state: store.state,\n        getters: getCatchedGetters(store),\n      },\n      fields: {\n        abstract: true,\n      },\n    },\n  }\n}\n\n\/\/ @TODO refactor\nexport function getCatchedGetters (store) {\n  const getters = {}\n\n  const origGetters = store.getters || {}\n  const keys = Object.keys(origGetters)\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i]\n    Object.defineProperty(getters, key, {\n      enumerable: true,\n      get: () => {\n        try {\n          return origGetters[key]\n        } catch (e) {\n          return e\n        }\n      },\n    })\n  }\n\n  return getters\n}\n","avg_line_length":21.9375,"max_line_length":82,"alphanum_fraction":0.6176638177,"loc":67,"functions":11,"function_signatures":0,"function_parameters":7,"variable_declarations":6,"property_declarations":0,"function_usages":4,"trivial_types":5,"predefined_types":3,"type_definitions":0,"dynamism_heuristic":3,"loc_per_function":5.0,"estimated_tokens":447,"fun_ann_density":0.0402684564,"var_ann_density":0.0134228188,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0067114094,"trivial_density":0.2083333333,"predefined_density":0.125,"metric":0.3046655305,"content_without_annotations":"export const backendInjections = {\n  instanceMap: new Map(),\n  isVueInstance: (() => false) as ((value) => boolean),\n  getCustomInstanceDetails: (() => ({})) as ((instance) => any),\n  getCustomObjectDetails: (() => undefined) as (value, proto) => any,\n}\n\nexport function getInstanceMap () {\n  return backendInjections.instanceMap\n}\n\nexport function getCustomInstanceDetails (instance) {\n  return backendInjections.getCustomInstanceDetails(instance)\n}\n\nexport function getCustomObjectDetails (value, proto) {\n  return backendInjections.getCustomObjectDetails(value, proto)\n}\n\nexport function isVueInstance (value) {\n  return backendInjections.isVueInstance(value)\n}\n\n\/\/ @TODO refactor\nexport function getCustomRouterDetails (router) {\n  return {\n    _custom: {\n      type: 'router',\n      display: 'VueRouter',\n      value: {\n        options: router.options,\n        currentRoute: router.currentRoute,\n      },\n      fields: {\n        abstract: true,\n      },\n    },\n  }\n}\n\n\/\/ @TODO refactor\nexport function getCustomStoreDetails (store) {\n  return {\n    _custom: {\n      type: 'store',\n      display: 'Store',\n      value: {\n        state: store.state,\n        getters: getCatchedGetters(store),\n      },\n      fields: {\n        abstract: true,\n      },\n    },\n  }\n}\n\n\/\/ @TODO refactor\nexport function getCatchedGetters (store) {\n  const getters = {}\n\n  const origGetters = store.getters || {}\n  const keys = Object.keys(origGetters)\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i]\n    Object.defineProperty(getters, key, {\n      enumerable: true,\n      get: () => {\n        try {\n          return origGetters[key]\n        } catch (e) {\n          return e\n        }\n      },\n    })\n  }\n\n  return getters\n}\n"}
{"hexsha":"6950b0c6d8ed7c8e7929ed15895c89d2b1d81e39","size":1365,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"typescript\/src\/libs\/linked_list.ts","max_stars_repo_name":"eteplus\/leetcode","max_stars_repo_head_hexsha":"13cb7aac323dd68c670b1548a8d72667eb68bd7c","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-01-25T09:03:59.000Z","max_stars_repo_stars_event_max_datetime":"2022-01-25T09:03:59.000Z","max_issues_repo_path":"typescript\/src\/libs\/linked_list.ts","max_issues_repo_name":"eteplus\/leetcode","max_issues_repo_head_hexsha":"13cb7aac323dd68c670b1548a8d72667eb68bd7c","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"typescript\/src\/libs\/linked_list.ts","max_forks_repo_name":"eteplus\/leetcode","max_forks_repo_head_hexsha":"13cb7aac323dd68c670b1548a8d72667eb68bd7c","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"export class ListNode {\n  public val: number;\n  public next: ListNode | null;\n  constructor(val?: number, next?: ListNode | null) {\n    this.val = val === undefined ? 0 : val;\n    this.next = next === undefined ? null : next;\n  }\n}\n\nexport function createLinkedList(nums: number[]): ListNode | null {\n  let head: ListNode | null = null;\n  let curr: ListNode | null = null;\n  for (let num of nums) {\n    if (head === null) {\n      head = new ListNode(num);\n      curr = head;\n    } else if (curr !== null) {\n      curr.next = new ListNode(num);\n      curr = curr.next;\n    }\n  }\n  return head;\n}\n\nexport function createCycleLinkedList(nums: number[], pos: number): ListNode | null {\n  let head: ListNode | null = null;\n  let curr: ListNode | null = null;\n  let cycle: ListNode | null = null;\n  for (let i = 0; i < nums.length; i++) {\n    const num = nums[i];\n    if (!head) {\n      head = new ListNode(num);\n      curr = head;\n    } else if (curr !== null) {\n      curr.next = new ListNode(num);\n      curr = curr.next;\n    }\n    if (i === pos) {\n      cycle = curr;\n    }\n  }\n  if (curr) {\n    curr.next = cycle;\n  }\n  return head;\n}\n\nexport function parseLinkedList(head: ListNode | null): number[] {\n  let result: number[] = [];\n  let curr: ListNode | null = head;\n  while (curr !== null) {\n    result.push(curr.val);\n    curr = curr.next;\n  }\n  return result;\n}\n","avg_line_length":23.9473684211,"max_line_length":85,"alphanum_fraction":0.5765567766,"loc":53,"functions":4,"function_signatures":0,"function_parameters":6,"variable_declarations":9,"property_declarations":2,"function_usages":0,"trivial_types":0,"predefined_types":7,"type_definitions":1,"dynamism_heuristic":0,"loc_per_function":10.25,"estimated_tokens":395,"fun_ann_density":0.0253164557,"var_ann_density":0.0227848101,"prop_ann_density":0.0050632911,"typedef_density":0.0025316456,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.3333333333,"metric":0.3074047761,"content_without_annotations":"export class ListNode {\n  public val;\n  public next;\n  constructor(val?, next?) {\n    this.val = val === undefined ? 0 : val;\n    this.next = next === undefined ? null : next;\n  }\n}\n\nexport function createLinkedList(nums) {\n  let head = null;\n  let curr = null;\n  for (let num of nums) {\n    if (head === null) {\n      head = new ListNode(num);\n      curr = head;\n    } else if (curr !== null) {\n      curr.next = new ListNode(num);\n      curr = curr.next;\n    }\n  }\n  return head;\n}\n\nexport function createCycleLinkedList(nums, pos) {\n  let head = null;\n  let curr = null;\n  let cycle = null;\n  for (let i = 0; i < nums.length; i++) {\n    const num = nums[i];\n    if (!head) {\n      head = new ListNode(num);\n      curr = head;\n    } else if (curr !== null) {\n      curr.next = new ListNode(num);\n      curr = curr.next;\n    }\n    if (i === pos) {\n      cycle = curr;\n    }\n  }\n  if (curr) {\n    curr.next = cycle;\n  }\n  return head;\n}\n\nexport function parseLinkedList(head) {\n  let result = [];\n  let curr = head;\n  while (curr !== null) {\n    result.push(curr.val);\n    curr = curr.next;\n  }\n  return result;\n}\n"}
{"hexsha":"19bb848d35047dfc5869aa1160fd54a9b17f89cd","size":1506,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/simulator\/gear\/stats.ts","max_stars_repo_name":"hintxiv\/reassemble","max_stars_repo_head_hexsha":"b183f4ec85be527430664ce807551a031e9272b4","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"src\/simulator\/gear\/stats.ts","max_issues_repo_name":"hintxiv\/reassemble","max_issues_repo_head_hexsha":"b183f4ec85be527430664ce807551a031e9272b4","max_issues_repo_licenses":["MIT"],"max_issues_count":1.0,"max_issues_repo_issues_event_min_datetime":"2022-02-05T21:22:46.000Z","max_issues_repo_issues_event_max_datetime":"2022-02-05T21:22:46.000Z","max_forks_repo_path":"src\/simulator\/gear\/stats.ts","max_forks_repo_name":"hintxiv\/reassemble","max_forks_repo_head_hexsha":"b183f4ec85be527430664ce807551a031e9272b4","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"export interface Stats\n{\n    weaponDamage: number\n\n    vitality: number\n\n    strength: number\n    dexterity: number\n    intelligence: number\n    mind: number\n\n    critical: number\n    determination: number\n    direct: number\n    skillspeed: number\n    spellspeed: number\n    tenacity: number\n}\n\nexport type StatGroup =\n    | 'weaponDamage'\n    | 'vitality'\n    | 'mainStat'\n    | 'subStat'\n\nexport const statMap: Record<keyof Stats, StatGroup> = {\n    weaponDamage: 'weaponDamage',\n    vitality: 'vitality',\n    strength: 'mainStat',\n    dexterity: 'mainStat',\n    intelligence: 'mainStat',\n    mind: 'mainStat',\n    critical: 'subStat',\n    determination: 'subStat',\n    direct: 'subStat',\n    skillspeed: 'subStat',\n    spellspeed: 'subStat',\n    tenacity: 'subStat',\n}\n\n\/**\n * Helper function to initialize a stats object with default values\n * @param someStats optionally specify some stats fields\n *\/\nexport function makeStats(someStats?: Partial<Stats> | Array<Partial<Stats>>): Stats {\n    const stats: Stats = {\n        weaponDamage: 0,\n        vitality: 390,\n        strength: 448,\n        dexterity: 448,\n        intelligence: 448,\n        mind: 448,\n        critical: 400,\n        determination: 390,\n        direct: 400,\n        skillspeed: 400,\n        spellspeed: 400,\n        tenacity: 400,\n    }\n\n    if (Array.isArray(someStats)) {\n        return someStats.reduce<Stats>(\n            (total, s) => total = { ...total, ...s }, stats\n        )\n    }\n\n    return { ...stats, ...someStats }\n}\n","avg_line_length":21.8260869565,"max_line_length":86,"alphanum_fraction":0.6069057105,"loc":56,"functions":2,"function_signatures":0,"function_parameters":3,"variable_declarations":2,"property_declarations":12,"function_usages":0,"trivial_types":0,"predefined_types":12,"type_definitions":2,"dynamism_heuristic":0,"loc_per_function":10.5,"estimated_tokens":430,"fun_ann_density":0.011627907,"var_ann_density":0.0046511628,"prop_ann_density":0.0279069767,"typedef_density":0.0046511628,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.6315789474,"metric":0.2191380553,"content_without_annotations":"export interface Stats\n{\n    weaponDamage\n\n    vitality\n\n    strength\n    dexterity\n    intelligence\n    mind\n\n    critical\n    determination\n    direct\n    skillspeed\n    spellspeed\n    tenacity\n}\n\nexport type StatGroup =\n    | 'weaponDamage'\n    | 'vitality'\n    | 'mainStat'\n    | 'subStat'\n\nexport const statMap = {\n    weaponDamage: 'weaponDamage',\n    vitality: 'vitality',\n    strength: 'mainStat',\n    dexterity: 'mainStat',\n    intelligence: 'mainStat',\n    mind: 'mainStat',\n    critical: 'subStat',\n    determination: 'subStat',\n    direct: 'subStat',\n    skillspeed: 'subStat',\n    spellspeed: 'subStat',\n    tenacity: 'subStat',\n}\n\n\/**\n * Helper function to initialize a stats object with default values\n * @param someStats optionally specify some stats fields\n *\/\nexport function makeStats(someStats?) {\n    const stats = {\n        weaponDamage: 0,\n        vitality: 390,\n        strength: 448,\n        dexterity: 448,\n        intelligence: 448,\n        mind: 448,\n        critical: 400,\n        determination: 390,\n        direct: 400,\n        skillspeed: 400,\n        spellspeed: 400,\n        tenacity: 400,\n    }\n\n    if (Array.isArray(someStats)) {\n        return someStats.reduce<Stats>(\n            (total, s) => total = { ...total, ...s }, stats\n        )\n    }\n\n    return { ...stats, ...someStats }\n}\n"}
{"hexsha":"c5d1ba02e6d0b3653f7aed3e4b704bd6fd0c3c18","size":4630,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/bright-code\/code\/xml.ts","max_stars_repo_name":"Tyh2001\/bright-code","max_stars_repo_head_hexsha":"d17443a5ada2d3a825f7529cbb54a8d396783364","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-03-27T14:36:32.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-27T14:36:32.000Z","max_issues_repo_path":"src\/bright-code\/code\/xml.ts","max_issues_repo_name":"Tyh2001\/bright-code","max_issues_repo_head_hexsha":"d17443a5ada2d3a825f7529cbb54a8d396783364","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/bright-code\/code\/xml.ts","max_forks_repo_name":"Tyh2001\/bright-code","max_forks_repo_head_hexsha":"d17443a5ada2d3a825f7529cbb54a8d396783364","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"export const xml = hljs => {\n  const regex = hljs.regex\n  const TAG_NAME_RE = regex.concat(\n    \/[A-Z_]\/,\n    regex.optional(\/[A-Z0-9_.-]*:\/),\n    \/[A-Z0-9_.-]*\/\n  )\n  const XML_IDENT_RE: RegExp = \/[A-Za-z0-9._:-]+\/\n  const XML_ENTITIES: {\n    className: string;\n    begin: RegExp;\n  } = {\n    className: 'symbol',\n    begin: \/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;\/\n  }\n  const XML_META_KEYWORDS: {\n    begin: RegExp;\n    contains: {\n      className: string;\n      begin: RegExp;\n      illegal: RegExp;\n    }[];\n  } = {\n    begin: \/\\s\/,\n    contains: [\n      {\n        className: 'keyword',\n        begin: \/#?[a-z_][a-z1-9_-]+\/,\n        illegal: \/\\n\/\n      }\n    ]\n  }\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: \/\\(\/,\n    end: \/\\)\/\n  })\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: 'string'\n  })\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    className: 'string'\n  })\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: \/<\/,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: \/=\\s*\/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {\n                begin: \/\"\/,\n                end: \/\"\/,\n                contains: [XML_ENTITIES]\n              },\n              {\n                begin: \/'\/,\n                end: \/'\/,\n                contains: [XML_ENTITIES]\n              },\n              { begin: \/[^\\s\"'=<>`]+\/ }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n  return {\n    name: 'HTML, XML',\n    aliases: [\n      'html',\n      'xhtml',\n      'rss',\n      'atom',\n      'xjb',\n      'xsd',\n      'xsl',\n      'plist',\n      'wsf',\n      'svg'\n    ],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: \/<![a-z]\/,\n        end: \/>\/,\n        relevance: 10,\n        contains: [\n          XML_META_KEYWORDS,\n          QUOTE_META_STRING_MODE,\n          APOS_META_STRING_MODE,\n          XML_META_PAR_KEYWORDS,\n          {\n            begin: \/\\[\/,\n            end: \/\\]\/,\n            contains: [\n              {\n                className: 'meta',\n                begin: \/<![a-z]\/,\n                end: \/>\/,\n                contains: [\n                  XML_META_KEYWORDS,\n                  XML_META_PAR_KEYWORDS,\n                  QUOTE_META_STRING_MODE,\n                  APOS_META_STRING_MODE\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      hljs.COMMENT(\/<!--\/, \/-->\/, { relevance: 10 }),\n      {\n        begin: \/<!\\[CDATA\\[\/,\n        end: \/\\]\\]>\/,\n        relevance: 10\n      },\n      XML_ENTITIES,\n      {\n        className: 'meta',\n        end: \/\\?>\/,\n        variants: [\n          {\n            begin: \/<\\?xml\/,\n            relevance: 10,\n            contains: [QUOTE_META_STRING_MODE]\n          },\n          {\n            begin: \/<\\?[a-z][a-z0-9]+\/\n          }\n        ]\n      },\n      {\n        className: 'tag',\n        begin: \/<style(?=\\s|>)\/,\n        end: \/>\/,\n        keywords: { name: 'style' },\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: \/<\\\/style>\/,\n          returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        begin: \/<script(?=\\s|>)\/,\n        end: \/>\/,\n        keywords: { name: 'script' },\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: \/<\\\/script>\/,\n          returnEnd: true,\n          subLanguage: ['javascript', 'handlebars', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        begin: \/<>|<\\\/>\/\n      },\n      \/\/ open tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          \/<\/,\n          regex.lookahead(\n            regex.concat(\n              TAG_NAME_RE,\n              regex.either(\/\\\/>\/, \/>\/, \/\\s\/)\n            )\n          )\n        ),\n        end: \/\\\/?>\/,\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0,\n            starts: TAG_INTERNALS\n          }\n        ]\n      },\n      {\n        className: 'tag',\n        begin: regex.concat(\n          \/<\\\/\/,\n          regex.lookahead(regex.concat(TAG_NAME_RE, \/>\/))\n        ),\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: \/>\/,\n            relevance: 0,\n            endsParent: true\n          }\n        ]\n      }\n    ]\n  }\n}\n","avg_line_length":21.4351851852,"max_line_length":71,"alphanum_fraction":0.3846652268,"loc":214,"functions":1,"function_signatures":0,"function_parameters":1,"variable_declarations":10,"property_declarations":0,"function_usages":0,"trivial_types":0,"predefined_types":2,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":212.0,"estimated_tokens":1267,"fun_ann_density":0.001578532,"var_ann_density":0.0078926598,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.1666666667,"metric":0.2002460894,"content_without_annotations":"export const xml = hljs => {\n  const regex = hljs.regex\n  const TAG_NAME_RE = regex.concat(\n    \/[A-Z_]\/,\n    regex.optional(\/[A-Z0-9_.-]*:\/),\n    \/[A-Z0-9_.-]*\/\n  )\n  const XML_IDENT_RE = \/[A-Za-z0-9._:-]+\/\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: \/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;\/\n  }\n  const XML_META_KEYWORDS = {\n    begin: \/\\s\/,\n    contains: [\n      {\n        className: 'keyword',\n        begin: \/#?[a-z_][a-z1-9_-]+\/,\n        illegal: \/\\n\/\n      }\n    ]\n  }\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: \/\\(\/,\n    end: \/\\)\/\n  })\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: 'string'\n  })\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    className: 'string'\n  })\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: \/<\/,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: \/=\\s*\/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {\n                begin: \/\"\/,\n                end: \/\"\/,\n                contains: [XML_ENTITIES]\n              },\n              {\n                begin: \/'\/,\n                end: \/'\/,\n                contains: [XML_ENTITIES]\n              },\n              { begin: \/[^\\s\"'=<>`]+\/ }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n  return {\n    name: 'HTML, XML',\n    aliases: [\n      'html',\n      'xhtml',\n      'rss',\n      'atom',\n      'xjb',\n      'xsd',\n      'xsl',\n      'plist',\n      'wsf',\n      'svg'\n    ],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: \/<![a-z]\/,\n        end: \/>\/,\n        relevance: 10,\n        contains: [\n          XML_META_KEYWORDS,\n          QUOTE_META_STRING_MODE,\n          APOS_META_STRING_MODE,\n          XML_META_PAR_KEYWORDS,\n          {\n            begin: \/\\[\/,\n            end: \/\\]\/,\n            contains: [\n              {\n                className: 'meta',\n                begin: \/<![a-z]\/,\n                end: \/>\/,\n                contains: [\n                  XML_META_KEYWORDS,\n                  XML_META_PAR_KEYWORDS,\n                  QUOTE_META_STRING_MODE,\n                  APOS_META_STRING_MODE\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      hljs.COMMENT(\/<!--\/, \/-->\/, { relevance: 10 }),\n      {\n        begin: \/<!\\[CDATA\\[\/,\n        end: \/\\]\\]>\/,\n        relevance: 10\n      },\n      XML_ENTITIES,\n      {\n        className: 'meta',\n        end: \/\\?>\/,\n        variants: [\n          {\n            begin: \/<\\?xml\/,\n            relevance: 10,\n            contains: [QUOTE_META_STRING_MODE]\n          },\n          {\n            begin: \/<\\?[a-z][a-z0-9]+\/\n          }\n        ]\n      },\n      {\n        className: 'tag',\n        begin: \/<style(?=\\s|>)\/,\n        end: \/>\/,\n        keywords: { name: 'style' },\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: \/<\\\/style>\/,\n          returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        begin: \/<script(?=\\s|>)\/,\n        end: \/>\/,\n        keywords: { name: 'script' },\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: \/<\\\/script>\/,\n          returnEnd: true,\n          subLanguage: ['javascript', 'handlebars', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        begin: \/<>|<\\\/>\/\n      },\n      \/\/ open tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          \/<\/,\n          regex.lookahead(\n            regex.concat(\n              TAG_NAME_RE,\n              regex.either(\/\\\/>\/, \/>\/, \/\\s\/)\n            )\n          )\n        ),\n        end: \/\\\/?>\/,\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0,\n            starts: TAG_INTERNALS\n          }\n        ]\n      },\n      {\n        className: 'tag',\n        begin: regex.concat(\n          \/<\\\/\/,\n          regex.lookahead(regex.concat(TAG_NAME_RE, \/>\/))\n        ),\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: \/>\/,\n            relevance: 0,\n            endsParent: true\n          }\n        ]\n      }\n    ]\n  }\n}\n"}
{"hexsha":"dac7a34c23c6505fd564304a224f764b68dd8397","size":3426,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"inlong-dashboard\/src\/pages\/AccessCreate\/DataStream\/helper.ts","max_stars_repo_name":"xuesongxs\/incubator-inlong","max_stars_repo_head_hexsha":"b482895e1130fc6b9826ca665e35998c2be61f6b","max_stars_repo_licenses":["Apache-2.0"],"max_stars_count":3.0,"max_stars_repo_stars_event_min_datetime":"2022-01-24T10:03:02.000Z","max_stars_repo_stars_event_max_datetime":"2022-02-10T04:52:33.000Z","max_issues_repo_path":"inlong-dashboard\/src\/pages\/AccessCreate\/DataStream\/helper.ts","max_issues_repo_name":"xuesongxs\/incubator-inlong","max_issues_repo_head_hexsha":"b482895e1130fc6b9826ca665e35998c2be61f6b","max_issues_repo_licenses":["Apache-2.0"],"max_issues_count":11.0,"max_issues_repo_issues_event_min_datetime":"2022-02-09T09:13:18.000Z","max_issues_repo_issues_event_max_datetime":"2022-03-16T12:52:15.000Z","max_forks_repo_path":"inlong-dashboard\/src\/pages\/AccessCreate\/DataStream\/helper.ts","max_forks_repo_name":"xuesongxs\/incubator-inlong","max_forks_repo_head_hexsha":"b482895e1130fc6b9826ca665e35998c2be61f6b","max_forks_repo_licenses":["Apache-2.0"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\/\n\n\/\/ Convert form data into interface submission data format\nexport const valuesToData = (values, inlongGroupId) => {\n  const array = values.map(item => {\n    const {\n      inlongStreamId,\n      predefinedFields = [],\n      rowTypeFields = [],\n      dataSourceType,\n      dataSourcesConfig = [],\n      streamSink = [],\n      ...rest\n    } = item;\n    const output = {} as any;\n    if (dataSourceType !== 'AUTO_PUSH') {\n      output.sourceInfo = dataSourcesConfig.map(k => {\n        return {\n          ...k,\n          sourceType: dataSourceType,\n          inlongGroupId,\n          inlongStreamId,\n        };\n      });\n    } else {\n      output.sourceInfo = [\n        {\n          sourceType: dataSourceType,\n          sourceName: inlongStreamId,\n          inlongGroupId,\n          inlongStreamId,\n        },\n      ];\n    }\n\n    output.sinkInfo = streamSink.reduce((acc, type) => {\n      if (!type) return acc;\n\n      const data = rest[`streamSink${type}`] || [];\n      delete rest[`streamSink${type}`];\n      const formatData = data.map(ds => ({\n        ...ds,\n        inlongGroupId,\n        inlongStreamId,\n        sinkType: type,\n      }));\n\n      return acc.concat(formatData);\n    }, []);\n\n    const fieldList = predefinedFields.concat(rowTypeFields).map((item, idx) => ({\n      ...item,\n      inlongGroupId,\n      inlongStreamId,\n      isPredefinedField: idx < predefinedFields.length ? 1 : 0,\n    }));\n\n    output.streamInfo = {\n      ...rest,\n      inlongGroupId,\n      inlongStreamId,\n      dataSourceType,\n    };\n\n    if (fieldList?.length) output.streamInfo.fieldList = fieldList;\n\n    return output;\n  });\n\n  return array;\n};\n\n\/\/ Convert interface data to form data\nexport const dataToValues = data => {\n  const array = data.map(item => {\n    const { sourceInfo, sinkInfo, streamInfo } = item;\n    let output = {\n      dataSourceType: sourceInfo[0]?.sourceType || 'AUTO_PUSH',\n      dataSourcesConfig: sourceInfo,\n    } as any;\n\n    sinkInfo.forEach(({ sinkType, ...item }) => {\n      if (!output[`streamSink${sinkType}`]) output[`streamSink${sinkType}`] = [];\n      output[`streamSink${sinkType}`].push(item);\n    });\n    output.streamSink = sinkInfo.map(item => item.sinkType);\n\n    const fieldList = streamInfo.fieldList?.reduce(\n      (acc, cur) => {\n        cur.isPredefinedField ? acc.predefinedFields.push(cur) : acc.rowTypeFields.push(cur);\n        return acc;\n      },\n      {\n        predefinedFields: [],\n        rowTypeFields: [],\n      },\n    );\n\n    output = {\n      hasHigher: false,\n      ...output,\n      ...fieldList,\n      ...streamInfo,\n    };\n\n    return output;\n  });\n\n  return array;\n};\n","avg_line_length":26.765625,"max_line_length":93,"alphanum_fraction":0.6077057793,"loc":92,"functions":11,"function_signatures":0,"function_parameters":15,"variable_declarations":12,"property_declarations":0,"function_usages":0,"trivial_types":2,"predefined_types":0,"type_definitions":0,"dynamism_heuristic":2,"loc_per_function":18.4545454545,"estimated_tokens":850,"fun_ann_density":0.0305882353,"var_ann_density":0.0141176471,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0023529412,"trivial_density":0.0526315789,"predefined_density":0.0,"metric":0.2866090391,"content_without_annotations":"\/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\/\n\n\/\/ Convert form data into interface submission data format\nexport const valuesToData = (values, inlongGroupId) => {\n  const array = values.map(item => {\n    const {\n      inlongStreamId,\n      predefinedFields = [],\n      rowTypeFields = [],\n      dataSourceType,\n      dataSourcesConfig = [],\n      streamSink = [],\n      ...rest\n    } = item;\n    const output = {} as any;\n    if (dataSourceType !== 'AUTO_PUSH') {\n      output.sourceInfo = dataSourcesConfig.map(k => {\n        return {\n          ...k,\n          sourceType: dataSourceType,\n          inlongGroupId,\n          inlongStreamId,\n        };\n      });\n    } else {\n      output.sourceInfo = [\n        {\n          sourceType: dataSourceType,\n          sourceName: inlongStreamId,\n          inlongGroupId,\n          inlongStreamId,\n        },\n      ];\n    }\n\n    output.sinkInfo = streamSink.reduce((acc, type) => {\n      if (!type) return acc;\n\n      const data = rest[`streamSink${type}`] || [];\n      delete rest[`streamSink${type}`];\n      const formatData = data.map(ds => ({\n        ...ds,\n        inlongGroupId,\n        inlongStreamId,\n        sinkType: type,\n      }));\n\n      return acc.concat(formatData);\n    }, []);\n\n    const fieldList = predefinedFields.concat(rowTypeFields).map((item, idx) => ({\n      ...item,\n      inlongGroupId,\n      inlongStreamId,\n      isPredefinedField: idx < predefinedFields.length ? 1 : 0,\n    }));\n\n    output.streamInfo = {\n      ...rest,\n      inlongGroupId,\n      inlongStreamId,\n      dataSourceType,\n    };\n\n    if (fieldList?.length) output.streamInfo.fieldList = fieldList;\n\n    return output;\n  });\n\n  return array;\n};\n\n\/\/ Convert interface data to form data\nexport const dataToValues = data => {\n  const array = data.map(item => {\n    const { sourceInfo, sinkInfo, streamInfo } = item;\n    let output = {\n      dataSourceType: sourceInfo[0]?.sourceType || 'AUTO_PUSH',\n      dataSourcesConfig: sourceInfo,\n    } as any;\n\n    sinkInfo.forEach(({ sinkType, ...item }) => {\n      if (!output[`streamSink${sinkType}`]) output[`streamSink${sinkType}`] = [];\n      output[`streamSink${sinkType}`].push(item);\n    });\n    output.streamSink = sinkInfo.map(item => item.sinkType);\n\n    const fieldList = streamInfo.fieldList?.reduce(\n      (acc, cur) => {\n        cur.isPredefinedField ? acc.predefinedFields.push(cur) : acc.rowTypeFields.push(cur);\n        return acc;\n      },\n      {\n        predefinedFields: [],\n        rowTypeFields: [],\n      },\n    );\n\n    output = {\n      hasHigher: false,\n      ...output,\n      ...fieldList,\n      ...streamInfo,\n    };\n\n    return output;\n  });\n\n  return array;\n};\n"}
{"hexsha":"cb4740ebaff249e3fd3fae4fc531be634a8f3b45","size":2129,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"browser\/path.ts","max_stars_repo_name":"internet-of-presence\/rollup","max_stars_repo_head_hexsha":"b8315e03f9790d610a413316fbf6d565f9340cab","max_stars_repo_licenses":["0BSD","MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-03-18T15:21:33.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-18T15:21:33.000Z","max_issues_repo_path":"browser\/path.ts","max_issues_repo_name":"internet-of-presence\/rollup","max_issues_repo_head_hexsha":"b8315e03f9790d610a413316fbf6d565f9340cab","max_issues_repo_licenses":["0BSD","MIT"],"max_issues_count":1.0,"max_issues_repo_issues_event_min_datetime":"2022-03-23T10:02:41.000Z","max_issues_repo_issues_event_max_datetime":"2022-03-23T10:02:41.000Z","max_forks_repo_path":"browser\/path.ts","max_forks_repo_name":"internet-of-presence\/rollup","max_forks_repo_head_hexsha":"b8315e03f9790d610a413316fbf6d565f9340cab","max_forks_repo_licenses":["0BSD","MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"const ABSOLUTE_PATH_REGEX = \/^(?:\\\/|(?:[A-Za-z]:)?[\\\\|\/])\/;\nconst RELATIVE_PATH_REGEX = \/^\\.?\\.\\\/\/;\nconst ALL_BACKSLASHES_REGEX = \/\\\\\/g;\nconst ANY_SLASH_REGEX = \/[\/\\\\]\/;\nconst EXTNAME_REGEX = \/\\.[^.]+$\/;\n\nexport function isAbsolute(path: string): boolean {\n\treturn ABSOLUTE_PATH_REGEX.test(path);\n}\n\nexport function isRelative(path: string): boolean {\n\treturn RELATIVE_PATH_REGEX.test(path);\n}\n\nexport function normalize(path: string): string {\n\treturn path.replace(ALL_BACKSLASHES_REGEX, '\/');\n}\n\nexport function basename(path: string): string {\n\treturn path.split(ANY_SLASH_REGEX).pop() || '';\n}\n\nexport function dirname(path: string): string {\n\tconst match = \/[\/\\\\][^\/\\\\]*$\/.exec(path);\n\tif (!match) return '.';\n\n\tconst dir = path.slice(0, -match[0].length);\n\n\t\/\/ If `dir` is the empty string, we're at root.\n\treturn dir ? dir : '\/';\n}\n\nexport function extname(path: string): string {\n\tconst match = EXTNAME_REGEX.exec(basename(path)!);\n\treturn match ? match[0] : '';\n}\n\nexport function relative(from: string, to: string): string {\n\tconst fromParts = from.split(ANY_SLASH_REGEX).filter(Boolean);\n\tconst toParts = to.split(ANY_SLASH_REGEX).filter(Boolean);\n\n\tif (fromParts[0] === '.') fromParts.shift();\n\tif (toParts[0] === '.') toParts.shift();\n\n\twhile (fromParts[0] && toParts[0] && fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\twhile (toParts[0] === '..' && fromParts.length > 0) {\n\t\ttoParts.shift();\n\t\tfromParts.pop();\n\t}\n\n\twhile (fromParts.pop()) {\n\t\ttoParts.unshift('..');\n\t}\n\n\treturn toParts.join('\/');\n}\n\nexport function resolve(...paths: string[]): string {\n\tconst firstPathSegment = paths.shift();\n\tif (!firstPathSegment) {\n\t\treturn '\/';\n\t}\n\tlet resolvedParts = firstPathSegment.split(ANY_SLASH_REGEX);\n\n\tfor (const path of paths) {\n\t\tif (isAbsolute(path)) {\n\t\t\tresolvedParts = path.split(ANY_SLASH_REGEX);\n\t\t} else {\n\t\t\tconst parts = path.split(ANY_SLASH_REGEX);\n\n\t\t\twhile (parts[0] === '.' || parts[0] === '..') {\n\t\t\t\tconst part = parts.shift();\n\t\t\t\tif (part === '..') {\n\t\t\t\t\tresolvedParts.pop();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresolvedParts.push(...parts);\n\t\t}\n\t}\n\n\treturn resolvedParts.join('\/');\n}\n","avg_line_length":24.1931818182,"max_line_length":68,"alphanum_fraction":0.641146078,"loc":67,"functions":8,"function_signatures":0,"function_parameters":9,"variable_declarations":14,"property_declarations":0,"function_usages":2,"trivial_types":0,"predefined_types":17,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":5.75,"estimated_tokens":722,"fun_ann_density":0.0235457064,"var_ann_density":0.0193905817,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.5483870968,"metric":0.2882954331,"content_without_annotations":"const ABSOLUTE_PATH_REGEX = \/^(?:\\\/|(?:[A-Za-z]:)?[\\\\|\/])\/;\nconst RELATIVE_PATH_REGEX = \/^\\.?\\.\\\/\/;\nconst ALL_BACKSLASHES_REGEX = \/\\\\\/g;\nconst ANY_SLASH_REGEX = \/[\/\\\\]\/;\nconst EXTNAME_REGEX = \/\\.[^.]+$\/;\n\nexport function isAbsolute(path) {\n\treturn ABSOLUTE_PATH_REGEX.test(path);\n}\n\nexport function isRelative(path) {\n\treturn RELATIVE_PATH_REGEX.test(path);\n}\n\nexport function normalize(path) {\n\treturn path.replace(ALL_BACKSLASHES_REGEX, '\/');\n}\n\nexport function basename(path) {\n\treturn path.split(ANY_SLASH_REGEX).pop() || '';\n}\n\nexport function dirname(path) {\n\tconst match = \/[\/\\\\][^\/\\\\]*$\/.exec(path);\n\tif (!match) return '.';\n\n\tconst dir = path.slice(0, -match[0].length);\n\n\t\/\/ If `dir` is the empty string, we're at root.\n\treturn dir ? dir : '\/';\n}\n\nexport function extname(path) {\n\tconst match = EXTNAME_REGEX.exec(basename(path)!);\n\treturn match ? match[0] : '';\n}\n\nexport function relative(from, to) {\n\tconst fromParts = from.split(ANY_SLASH_REGEX).filter(Boolean);\n\tconst toParts = to.split(ANY_SLASH_REGEX).filter(Boolean);\n\n\tif (fromParts[0] === '.') fromParts.shift();\n\tif (toParts[0] === '.') toParts.shift();\n\n\twhile (fromParts[0] && toParts[0] && fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\twhile (toParts[0] === '..' && fromParts.length > 0) {\n\t\ttoParts.shift();\n\t\tfromParts.pop();\n\t}\n\n\twhile (fromParts.pop()) {\n\t\ttoParts.unshift('..');\n\t}\n\n\treturn toParts.join('\/');\n}\n\nexport function resolve(...paths) {\n\tconst firstPathSegment = paths.shift();\n\tif (!firstPathSegment) {\n\t\treturn '\/';\n\t}\n\tlet resolvedParts = firstPathSegment.split(ANY_SLASH_REGEX);\n\n\tfor (const path of paths) {\n\t\tif (isAbsolute(path)) {\n\t\t\tresolvedParts = path.split(ANY_SLASH_REGEX);\n\t\t} else {\n\t\t\tconst parts = path.split(ANY_SLASH_REGEX);\n\n\t\t\twhile (parts[0] === '.' || parts[0] === '..') {\n\t\t\t\tconst part = parts.shift();\n\t\t\t\tif (part === '..') {\n\t\t\t\t\tresolvedParts.pop();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresolvedParts.push(...parts);\n\t\t}\n\t}\n\n\treturn resolvedParts.join('\/');\n}\n"}
{"hexsha":"c5cbef909f0917171ef87f6f627d749ffbf01b40","size":5121,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"challenges\/day23.ts","max_stars_repo_name":"Ldoppea\/advent-of-code-2020-typescript","max_stars_repo_head_hexsha":"608c15619b9cae3bbc65d2d5d42455710d517221","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"challenges\/day23.ts","max_issues_repo_name":"Ldoppea\/advent-of-code-2020-typescript","max_issues_repo_head_hexsha":"608c15619b9cae3bbc65d2d5d42455710d517221","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"challenges\/day23.ts","max_forks_repo_name":"Ldoppea\/advent-of-code-2020-typescript","max_forks_repo_head_hexsha":"608c15619b9cae3bbc65d2d5d42455710d517221","max_forks_repo_licenses":["MIT"],"max_forks_count":1.0,"max_forks_repo_forks_event_min_datetime":"2022-01-28T17:21:42.000Z","max_forks_repo_forks_event_max_datetime":"2022-01-28T17:21:42.000Z","content":"interface GameState {\n  cups: number[],\n  currentCupIndex: number\n}\n\nexport function playRound(gameState: GameState): GameState {\n  const localCups = [...gameState.cups];\n  \n  const currentIndex = gameState.currentCupIndex;\n\n  const tail = localCups.splice(0, currentIndex);\n  localCups.push(...tail);\n\n  const currentCup = localCups[0];\n\n  const nextThreeCups = localCups.splice(1, 3);\n\n  let destinationCup = currentCup - 1;\n  if (destinationCup === 0) {\n    destinationCup = Math.max(...gameState.cups);\n  }\n  while (nextThreeCups.includes(destinationCup)) {\n    destinationCup -= 1;\n    if (destinationCup === 0) {\n      destinationCup = Math.max(...gameState.cups);\n    }\n  }\n\n  const destinationIndex = localCups.indexOf(destinationCup) + 1;\n\n  localCups.splice(destinationIndex, 0, ...nextThreeCups);\n\n  const head = localCups.splice(localCups.length - currentIndex, currentIndex);\n  localCups.unshift(...head);\n\n  return {\n    cups: localCups,\n    currentCupIndex: (currentIndex + 1) % localCups.length\n  };\n}\n\nexport function playXRound(gameState: GameState, numberOfRounds: number): GameState {\n  let currentGameState = gameState;\n  for (let i = 0; i < numberOfRounds; i++) {\n    currentGameState = playRound(currentGameState);\n  }\n\n  return currentGameState;\n}\n\nexport function getCupsLabeling(input: string, numberOfRounds: number): string {\n  const cups = input.split('').map(i => parseInt(i)); \/\/?\n\n  const gameState = {\n    cups,\n    currentCupIndex: 0\n  }\n  \n  const result = playXRound(gameState, numberOfRounds);\n\n  const indexOf1 = result.cups.indexOf(1);\n  \n  const tail = result.cups.splice(0, indexOf1);\n  result.cups.push(...tail);\n\n  result.cups.shift()\n\n  return result.cups\n    .join('');\n}\n\n\n\n\n\nexport interface GameStateLinkedArray {\n  cups: number[],\n  currentCup: number,\n  maxCup: number\n}\n\nexport function convertToLinkedArray(orderedListOfCups: number[]): number[] {\n  const linkedArray: number[] = [-1];\n\n  for(let i = 0; i < orderedListOfCups.length; i++) {\n    const currentCup = orderedListOfCups[i];\n    const nextIndex = (i+1) % orderedListOfCups.length;\n    const nextCup = orderedListOfCups[nextIndex];\n    linkedArray[currentCup] = nextCup;\n  }\n\n  return linkedArray;\n}\n\nexport function convertToOrderedArray(linkedListOfCups: number[]): number[] {\n  const orderedArray: number[] = [];\n\n  const firstItem = linkedListOfCups[1]; \/\/?\n\n  orderedArray.push(firstItem);\n\n  let previousIndex = linkedListOfCups.indexOf(firstItem);\n\n  while (previousIndex !== firstItem) {\n    orderedArray.unshift(previousIndex);\n    previousIndex = linkedListOfCups.indexOf(previousIndex);\n  }\n\n  return orderedArray;\n}\n\nexport function shiftOrderedArray(orderedListOfCups: number[], startingCup: number) {\n  const indexOfStartingCup = orderedListOfCups.indexOf(startingCup);\n\n  const tail = orderedListOfCups.splice(0, indexOfStartingCup);\n\n  orderedListOfCups.push(...tail);\n}\n\nexport function removeNext(linkedListOfCups:number[], cup: number) {\n  const nextCup = linkedListOfCups[cup];\n  const nextNextCup = linkedListOfCups[nextCup];\n\n  linkedListOfCups[cup] = nextNextCup;\n\n  return nextCup;\n}\n\nexport function removeNextThree(linkedListOfCups:number[], cup: number): number[] {\n  return [\n    removeNext(linkedListOfCups, cup),\n    removeNext(linkedListOfCups, cup),\n    removeNext(linkedListOfCups, cup)\n  ]\n}\n\nexport function insertNext (linkedListOfCups:number[], cup: number, insertedCup: number) {\n  const nextCup = linkedListOfCups[cup];\n\n  linkedListOfCups[cup] = insertedCup;\n\n  linkedListOfCups[insertedCup] = nextCup;\n}\n\nexport function insertNextThree(linkedListOfCups:number[], cup: number, insertedCups: number[]) {\n  insertedCups.reverse().forEach(insertedCup => {\n    insertNext(linkedListOfCups, cup, insertedCup)\n  })\n}\n\nexport function playRoundLinkedArray(gameState: GameStateLinkedArray) {\n  const nextThree = removeNextThree(gameState.cups, gameState.currentCup); \/\/?\n\n  let destinationCup = gameState.currentCup;\n  do {\n    destinationCup -= 1;\n    if (destinationCup === 0) {\n      destinationCup = gameState.maxCup;\n    }\n  } while (nextThree.includes(destinationCup))\n\n  insertNextThree(gameState.cups, destinationCup, nextThree);\n\n  gameState.currentCup = gameState.cups[gameState.currentCup];\n}\n\nexport function playXRoundLinkedArray(gameState: GameStateLinkedArray, numberOfRounds: number) {\n  for (let i = 0; i < numberOfRounds; i++) {\n    playRoundLinkedArray(gameState);\n  }\n}\n\nexport function getStars(input: string, numberOfRounds: number): number {\n  const cups = input.split('').map(i => parseInt(i)); \/\/?\n  const linkedCups = convertToLinkedArray(cups); \/\/?.\n\n  const macCups = 1_000_000;\n  \n  const maxCupsFromFile = Math.max(...cups);\n  let lastCup = cups[cups.length - 1];\n  for (let i = maxCupsFromFile + 1; i <= macCups; i++) {\n    insertNext(linkedCups, lastCup, i);\n    lastCup = i;\n  }\n\n  const gameState = {\n    cups: linkedCups,\n    currentCup: cups[0],\n    maxCup: macCups\n  };\n\n  playXRoundLinkedArray(gameState, numberOfRounds);\n\n  const nextCup1 = gameState.cups[1];\n  const nextCup2 = gameState.cups[nextCup1];\n\n  return nextCup1 * nextCup2;\n}","avg_line_length":25.8636363636,"max_line_length":97,"alphanum_fraction":0.7148994337,"loc":142,"functions":16,"function_signatures":0,"function_parameters":27,"variable_declarations":40,"property_declarations":5,"function_usages":9,"trivial_types":0,"predefined_types":32,"type_definitions":2,"dynamism_heuristic":0,"loc_per_function":6.875,"estimated_tokens":1524,"fun_ann_density":0.0282152231,"var_ann_density":0.0262467192,"prop_ann_density":0.0032808399,"typedef_density":0.001312336,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.3636363636,"metric":0.325784,"content_without_annotations":"interface GameState {\n  cups,\n  currentCupIndex\n}\n\nexport function playRound(gameState) {\n  const localCups = [...gameState.cups];\n  \n  const currentIndex = gameState.currentCupIndex;\n\n  const tail = localCups.splice(0, currentIndex);\n  localCups.push(...tail);\n\n  const currentCup = localCups[0];\n\n  const nextThreeCups = localCups.splice(1, 3);\n\n  let destinationCup = currentCup - 1;\n  if (destinationCup === 0) {\n    destinationCup = Math.max(...gameState.cups);\n  }\n  while (nextThreeCups.includes(destinationCup)) {\n    destinationCup -= 1;\n    if (destinationCup === 0) {\n      destinationCup = Math.max(...gameState.cups);\n    }\n  }\n\n  const destinationIndex = localCups.indexOf(destinationCup) + 1;\n\n  localCups.splice(destinationIndex, 0, ...nextThreeCups);\n\n  const head = localCups.splice(localCups.length - currentIndex, currentIndex);\n  localCups.unshift(...head);\n\n  return {\n    cups: localCups,\n    currentCupIndex: (currentIndex + 1) % localCups.length\n  };\n}\n\nexport function playXRound(gameState, numberOfRounds) {\n  let currentGameState = gameState;\n  for (let i = 0; i < numberOfRounds; i++) {\n    currentGameState = playRound(currentGameState);\n  }\n\n  return currentGameState;\n}\n\nexport function getCupsLabeling(input, numberOfRounds) {\n  const cups = input.split('').map(i => parseInt(i)); \/\/?\n\n  const gameState = {\n    cups,\n    currentCupIndex: 0\n  }\n  \n  const result = playXRound(gameState, numberOfRounds);\n\n  const indexOf1 = result.cups.indexOf(1);\n  \n  const tail = result.cups.splice(0, indexOf1);\n  result.cups.push(...tail);\n\n  result.cups.shift()\n\n  return result.cups\n    .join('');\n}\n\n\n\n\n\nexport interface GameStateLinkedArray {\n  cups,\n  currentCup,\n  maxCup\n}\n\nexport function convertToLinkedArray(orderedListOfCups) {\n  const linkedArray = [-1];\n\n  for(let i = 0; i < orderedListOfCups.length; i++) {\n    const currentCup = orderedListOfCups[i];\n    const nextIndex = (i+1) % orderedListOfCups.length;\n    const nextCup = orderedListOfCups[nextIndex];\n    linkedArray[currentCup] = nextCup;\n  }\n\n  return linkedArray;\n}\n\nexport function convertToOrderedArray(linkedListOfCups) {\n  const orderedArray = [];\n\n  const firstItem = linkedListOfCups[1]; \/\/?\n\n  orderedArray.push(firstItem);\n\n  let previousIndex = linkedListOfCups.indexOf(firstItem);\n\n  while (previousIndex !== firstItem) {\n    orderedArray.unshift(previousIndex);\n    previousIndex = linkedListOfCups.indexOf(previousIndex);\n  }\n\n  return orderedArray;\n}\n\nexport function shiftOrderedArray(orderedListOfCups, startingCup) {\n  const indexOfStartingCup = orderedListOfCups.indexOf(startingCup);\n\n  const tail = orderedListOfCups.splice(0, indexOfStartingCup);\n\n  orderedListOfCups.push(...tail);\n}\n\nexport function removeNext(linkedListOfCups, cup) {\n  const nextCup = linkedListOfCups[cup];\n  const nextNextCup = linkedListOfCups[nextCup];\n\n  linkedListOfCups[cup] = nextNextCup;\n\n  return nextCup;\n}\n\nexport function removeNextThree(linkedListOfCups, cup) {\n  return [\n    removeNext(linkedListOfCups, cup),\n    removeNext(linkedListOfCups, cup),\n    removeNext(linkedListOfCups, cup)\n  ]\n}\n\nexport function insertNext (linkedListOfCups, cup, insertedCup) {\n  const nextCup = linkedListOfCups[cup];\n\n  linkedListOfCups[cup] = insertedCup;\n\n  linkedListOfCups[insertedCup] = nextCup;\n}\n\nexport function insertNextThree(linkedListOfCups, cup, insertedCups) {\n  insertedCups.reverse().forEach(insertedCup => {\n    insertNext(linkedListOfCups, cup, insertedCup)\n  })\n}\n\nexport function playRoundLinkedArray(gameState) {\n  const nextThree = removeNextThree(gameState.cups, gameState.currentCup); \/\/?\n\n  let destinationCup = gameState.currentCup;\n  do {\n    destinationCup -= 1;\n    if (destinationCup === 0) {\n      destinationCup = gameState.maxCup;\n    }\n  } while (nextThree.includes(destinationCup))\n\n  insertNextThree(gameState.cups, destinationCup, nextThree);\n\n  gameState.currentCup = gameState.cups[gameState.currentCup];\n}\n\nexport function playXRoundLinkedArray(gameState, numberOfRounds) {\n  for (let i = 0; i < numberOfRounds; i++) {\n    playRoundLinkedArray(gameState);\n  }\n}\n\nexport function getStars(input, numberOfRounds) {\n  const cups = input.split('').map(i => parseInt(i)); \/\/?\n  const linkedCups = convertToLinkedArray(cups); \/\/?.\n\n  const macCups = 1_000_000;\n  \n  const maxCupsFromFile = Math.max(...cups);\n  let lastCup = cups[cups.length - 1];\n  for (let i = maxCupsFromFile + 1; i <= macCups; i++) {\n    insertNext(linkedCups, lastCup, i);\n    lastCup = i;\n  }\n\n  const gameState = {\n    cups: linkedCups,\n    currentCup: cups[0],\n    maxCup: macCups\n  };\n\n  playXRoundLinkedArray(gameState, numberOfRounds);\n\n  const nextCup1 = gameState.cups[1];\n  const nextCup2 = gameState.cups[nextCup1];\n\n  return nextCup1 * nextCup2;\n}"}
{"hexsha":"6a6db4d3da5521347d2bbadd27ec0c2d62649284","size":2002,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"packages\/jest-reporters\/src\/wrapAnsiString.ts","max_stars_repo_name":"michalwarda\/jest","max_stars_repo_head_hexsha":"368eefd8637ff90f2eecc7238995776f586dcbbe","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"packages\/jest-reporters\/src\/wrapAnsiString.ts","max_issues_repo_name":"michalwarda\/jest","max_issues_repo_head_hexsha":"368eefd8637ff90f2eecc7238995776f586dcbbe","max_issues_repo_licenses":["MIT"],"max_issues_count":5.0,"max_issues_repo_issues_event_min_datetime":"2022-03-27T00:22:17.000Z","max_issues_repo_issues_event_max_datetime":"2022-03-29T00:22:20.000Z","max_forks_repo_path":"packages\/jest-reporters\/src\/wrapAnsiString.ts","max_forks_repo_name":"F3n67u\/jest","max_forks_repo_head_hexsha":"006d9f40742cf03117b4b527a8f98c2bf10e38d0","max_forks_repo_licenses":["MIT"],"max_forks_count":1.0,"max_forks_repo_forks_event_min_datetime":"2022-01-29T22:58:26.000Z","max_forks_repo_forks_event_max_datetime":"2022-01-29T22:58:26.000Z","content":"\/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\/\n\n\/\/ word-wrap a string that contains ANSI escape sequences.\n\/\/ ANSI escape sequences do not add to the string length.\nexport default function wrapAnsiString(\n  string: string,\n  terminalWidth: number,\n): string {\n  if (terminalWidth === 0) {\n    \/\/ if the terminal width is zero, don't bother word-wrapping\n    return string;\n  }\n\n  const ANSI_REGEXP = \/[\\u001b\\u009b]\\[\\d{1,2}m\/gu;\n  const tokens = [];\n  let lastIndex = 0;\n  let match;\n\n  while ((match = ANSI_REGEXP.exec(string))) {\n    const ansi = match[0];\n    const index = match['index'];\n    if (index != lastIndex) {\n      tokens.push(['string', string.slice(lastIndex, index)]);\n    }\n    tokens.push(['ansi', ansi]);\n    lastIndex = index + ansi.length;\n  }\n\n  if (lastIndex != string.length - 1) {\n    tokens.push(['string', string.slice(lastIndex, string.length)]);\n  }\n\n  let lastLineLength = 0;\n\n  return tokens\n    .reduce(\n      (lines, [kind, token]) => {\n        if (kind === 'string') {\n          if (lastLineLength + token.length > terminalWidth) {\n            while (token.length) {\n              const chunk = token.slice(0, terminalWidth - lastLineLength);\n              const remaining = token.slice(\n                terminalWidth - lastLineLength,\n                token.length,\n              );\n              lines[lines.length - 1] += chunk;\n              lastLineLength += chunk.length;\n              token = remaining;\n              if (token.length) {\n                lines.push('');\n                lastLineLength = 0;\n              }\n            }\n          } else {\n            lines[lines.length - 1] += token;\n            lastLineLength += token.length;\n          }\n        } else {\n          lines[lines.length - 1] += token;\n        }\n\n        return lines;\n      },\n      [''],\n    )\n    .join('\\n');\n}\n","avg_line_length":27.4246575342,"max_line_length":75,"alphanum_fraction":0.5529470529,"loc":56,"functions":2,"function_signatures":0,"function_parameters":4,"variable_declarations":9,"property_declarations":0,"function_usages":0,"trivial_types":0,"predefined_types":3,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":37.5,"estimated_tokens":509,"fun_ann_density":0.0117878193,"var_ann_density":0.0176817289,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.2,"metric":0.2552708115,"content_without_annotations":"\/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\/\n\n\/\/ word-wrap a string that contains ANSI escape sequences.\n\/\/ ANSI escape sequences do not add to the string length.\nexport default function wrapAnsiString(\n  string,\n  terminalWidth,\n) {\n  if (terminalWidth === 0) {\n    \/\/ if the terminal width is zero, don't bother word-wrapping\n    return string;\n  }\n\n  const ANSI_REGEXP = \/[\\u001b\\u009b]\\[\\d{1,2}m\/gu;\n  const tokens = [];\n  let lastIndex = 0;\n  let match;\n\n  while ((match = ANSI_REGEXP.exec(string))) {\n    const ansi = match[0];\n    const index = match['index'];\n    if (index != lastIndex) {\n      tokens.push(['string', string.slice(lastIndex, index)]);\n    }\n    tokens.push(['ansi', ansi]);\n    lastIndex = index + ansi.length;\n  }\n\n  if (lastIndex != string.length - 1) {\n    tokens.push(['string', string.slice(lastIndex, string.length)]);\n  }\n\n  let lastLineLength = 0;\n\n  return tokens\n    .reduce(\n      (lines, [kind, token]) => {\n        if (kind === 'string') {\n          if (lastLineLength + token.length > terminalWidth) {\n            while (token.length) {\n              const chunk = token.slice(0, terminalWidth - lastLineLength);\n              const remaining = token.slice(\n                terminalWidth - lastLineLength,\n                token.length,\n              );\n              lines[lines.length - 1] += chunk;\n              lastLineLength += chunk.length;\n              token = remaining;\n              if (token.length) {\n                lines.push('');\n                lastLineLength = 0;\n              }\n            }\n          } else {\n            lines[lines.length - 1] += token;\n            lastLineLength += token.length;\n          }\n        } else {\n          lines[lines.length - 1] += token;\n        }\n\n        return lines;\n      },\n      [''],\n    )\n    .join('\\n');\n}\n"}
{"hexsha":"c6f7caaa0590e6613ea1d397ac2df028f848091b","size":1584,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"packages\/components\/time-select\/src\/utils.ts","max_stars_repo_name":"yhuijune\/analyse-element-plus","max_stars_repo_head_hexsha":"efd6c2b2a7ccacf48bb847264bbda0156568a149","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"packages\/components\/time-select\/src\/utils.ts","max_issues_repo_name":"yhuijune\/analyse-element-plus","max_issues_repo_head_hexsha":"efd6c2b2a7ccacf48bb847264bbda0156568a149","max_issues_repo_licenses":["MIT"],"max_issues_count":3.0,"max_issues_repo_issues_event_min_datetime":"2022-03-13T20:43:36.000Z","max_issues_repo_issues_event_max_datetime":"2022-03-14T21:43:33.000Z","max_forks_repo_path":"packages\/components\/time-select\/src\/utils.ts","max_forks_repo_name":"yhuijune\/analyse-element-plus","max_forks_repo_head_hexsha":"efd6c2b2a7ccacf48bb847264bbda0156568a149","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"interface Time {\n  hours: number\n  minutes: number\n}\n\nexport const parseTime = (time: string): null | Time => {\n  const values = (time || '').split(':')\n  if (values.length >= 2) {\n    let hours = Number.parseInt(values[0], 10)\n    const minutes = Number.parseInt(values[1], 10)\n    const timeUpper = time.toUpperCase()\n    if (timeUpper.includes('AM') && hours === 12) {\n      hours = 0\n    } else if (timeUpper.includes('PM') && hours !== 12) {\n      hours += 12\n    }\n    return {\n      hours,\n      minutes,\n    }\n  }\n\n  return null\n}\n\nexport const compareTime = (time1: string, time2: string): number => {\n  const value1 = parseTime(time1)\n  if (!value1) return -1\n  const value2 = parseTime(time2)\n  if (!value2) return -1\n  const minutes1 = value1.minutes + value1.hours * 60\n  const minutes2 = value2.minutes + value2.hours * 60\n  if (minutes1 === minutes2) {\n    return 0\n  }\n  return minutes1 > minutes2 ? 1 : -1\n}\n\nexport const padTime = (time: number | string) => {\n  return `${time}`.padStart(2, '0')\n}\nexport const formatTime = (time: Time): string => {\n  return `${padTime(time.hours)}:${padTime(time.minutes)}`\n}\n\nexport const nextTime = (time: string, step: string): string => {\n  const timeValue = parseTime(time)\n  if (!timeValue) return ''\n\n  const stepValue = parseTime(step)\n  if (!stepValue) return ''\n\n  const next = {\n    hours: timeValue.hours,\n    minutes: timeValue.minutes,\n  }\n  next.minutes += stepValue.minutes\n  next.hours += stepValue.hours\n  next.hours += Math.floor(next.minutes \/ 60)\n  next.minutes = next.minutes % 60\n  return formatTime(next)\n}\n","avg_line_length":25.1428571429,"max_line_length":70,"alphanum_fraction":0.6319444444,"loc":55,"functions":5,"function_signatures":0,"function_parameters":7,"variable_declarations":16,"property_declarations":2,"function_usages":3,"trivial_types":0,"predefined_types":12,"type_definitions":1,"dynamism_heuristic":0,"loc_per_function":8.2,"estimated_tokens":489,"fun_ann_density":0.0245398773,"var_ann_density":0.0327198364,"prop_ann_density":0.0040899796,"typedef_density":0.0020449898,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.4,"metric":0.3379420313,"content_without_annotations":"interface Time {\n  hours\n  minutes\n}\n\nexport const parseTime = (time) => {\n  const values = (time || '').split(':')\n  if (values.length >= 2) {\n    let hours = Number.parseInt(values[0], 10)\n    const minutes = Number.parseInt(values[1], 10)\n    const timeUpper = time.toUpperCase()\n    if (timeUpper.includes('AM') && hours === 12) {\n      hours = 0\n    } else if (timeUpper.includes('PM') && hours !== 12) {\n      hours += 12\n    }\n    return {\n      hours,\n      minutes,\n    }\n  }\n\n  return null\n}\n\nexport const compareTime = (time1, time2) => {\n  const value1 = parseTime(time1)\n  if (!value1) return -1\n  const value2 = parseTime(time2)\n  if (!value2) return -1\n  const minutes1 = value1.minutes + value1.hours * 60\n  const minutes2 = value2.minutes + value2.hours * 60\n  if (minutes1 === minutes2) {\n    return 0\n  }\n  return minutes1 > minutes2 ? 1 : -1\n}\n\nexport const padTime = (time) => {\n  return `${time}`.padStart(2, '0')\n}\nexport const formatTime = (time) => {\n  return `${padTime(time.hours)}:${padTime(time.minutes)}`\n}\n\nexport const nextTime = (time, step) => {\n  const timeValue = parseTime(time)\n  if (!timeValue) return ''\n\n  const stepValue = parseTime(step)\n  if (!stepValue) return ''\n\n  const next = {\n    hours: timeValue.hours,\n    minutes: timeValue.minutes,\n  }\n  next.minutes += stepValue.minutes\n  next.hours += stepValue.hours\n  next.hours += Math.floor(next.minutes \/ 60)\n  next.minutes = next.minutes % 60\n  return formatTime(next)\n}\n"}
{"hexsha":"8421a8d472765fd2992d131fb5bbc260d133ef72","size":4360,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"packages\/graphlib\/lib\/data\/priority-queue.ts","max_stars_repo_name":"fluggo\/graphlib","max_stars_repo_head_hexsha":"4b603a04de1b9821ed4bc34383d22c7d66f15b4d","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-02-01T01:34:34.000Z","max_stars_repo_stars_event_max_datetime":"2022-02-01T01:34:34.000Z","max_issues_repo_path":"packages\/graphlib\/lib\/data\/priority-queue.ts","max_issues_repo_name":"fluggo\/graphlib","max_issues_repo_head_hexsha":"4b603a04de1b9821ed4bc34383d22c7d66f15b4d","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"packages\/graphlib\/lib\/data\/priority-queue.ts","max_forks_repo_name":"fluggo\/graphlib","max_forks_repo_head_hexsha":"4b603a04de1b9821ed4bc34383d22c7d66f15b4d","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"interface PQEntry<K> {\n  key: K;\n  priority: number;\n}\n\n\/**\n * A min-priority queue data structure. This algorithm is derived from Cormen,\n * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n * queue is that you can efficiently (in O(1) time) get the smallest key in\n * the queue. Adding and removing elements takes O(log n) time. A key can\n * have its priority decreased in O(log n) time.\n *\/\nexport class PriorityQueue<K> {\n  private readonly _arr: PQEntry<K>[];\n  private readonly _keyIndices: Map<K, number>;\n\n  constructor() {\n    this._arr = [];\n    this._keyIndices = new Map();\n  }\n\n  \/**\n   * Returns the number of elements in the queue. Takes `O(1)` time.\n   *\/\n  size(): number {\n    return this._arr.length;\n  }\n\n  \/**\n   * Returns the keys that are in the queue. Takes `O(n)` time.\n   *\/\n  keys(): K[] {\n    return this._arr.map(x => x.key);\n  }\n\n  \/**\n   * Returns `true` if **key** is in the queue and `false` if not.\n   *\/\n  has(key: K): boolean {\n    return this._keyIndices.has(key);\n  }\n\n  \/**\n   * Returns the priority for **key**. If **key** is not present in the queue\n   * then this function returns `undefined`. Takes `O(1)` time.\n   *\/\n  priority(key: K): number | undefined {\n    const index = this._keyIndices.get(key);\n    if(index !== undefined) {\n      return this._arr[index].priority;\n    }\n  }\n\n  \/**\n   * Returns the key for the minimum element in this queue. If the queue is\n   * empty this function throws an Error. Takes `O(1)` time.\n   *\/\n  min(): K {\n    if(this.size() === 0) {\n      throw new Error('Queue underflow');\n    }\n    return this._arr[0].key;\n  }\n\n  \/**\n   * Inserts a new key into the priority queue. If the key already exists in\n   * the queue this function does nothing and returns `false`; otherwise it will return `true`.\n   * Takes `O(n)` time.\n   *\n   * @param key the key to add\n   * @param priority the initial priority for the key\n   *\/\n  add(key: K, priority: number): boolean {\n    const keyIndices = this._keyIndices;\n    if(!keyIndices.has(key)) {\n      const arr = this._arr;\n      const index = arr.length;\n      keyIndices.set(key, index);\n      arr.push({key: key, priority: priority});\n      this._decrease(index);\n      return true;\n    }\n    return false;\n  }\n\n  \/**\n   * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n   *\/\n  removeMin(): K {\n    this._swap(0, this._arr.length - 1);\n    const min = this._arr.pop()!;\n    this._keyIndices.delete(min.key);\n    this._heapify(0);\n    return min.key;\n  }\n\n  \/**\n   * Decreases the priority for **key** to **priority**. If the new priority is\n   * greater than the previous priority, this function will throw an Error.\n   *\n   * @param key the key for which to raise priority\n   * @param priority the new priority for the key\n   *\/\n  decrease(key: K, priority: number): void {\n    const index = this._keyIndices.get(key);\n\n    if(index === undefined)\n      throw new RangeError('Key out of range');\n\n    if(priority > this._arr[index].priority) {\n      throw new Error('New priority is greater than current priority. ' +\n          `Key: ${String(key)} Old: ${this._arr[index].priority} New: ${priority}`);\n    }\n    this._arr[index].priority = priority;\n    this._decrease(index);\n  }\n\n  private _heapify(i: number): void {\n    const arr = this._arr;\n    const l = 2 * i;\n    const r = l + 1;\n    let largest = i;\n    if(l < arr.length) {\n      largest = arr[l].priority < arr[largest].priority ? l : largest;\n      if(r < arr.length) {\n        largest = arr[r].priority < arr[largest].priority ? r : largest;\n      }\n      if(largest !== i) {\n        this._swap(i, largest);\n        this._heapify(largest);\n      }\n    }\n  }\n\n  private _decrease(index: number): void {\n    const arr = this._arr;\n    const priority = arr[index].priority;\n    let parent: number;\n    while(index !== 0) {\n      \/\/ eslint-disable-next-line no-bitwise\n      parent = index >> 1;\n      if(arr[parent].priority < priority) {\n        break;\n      }\n      this._swap(index, parent);\n      index = parent;\n    }\n  }\n\n  private _swap(i: number, j: number): void {\n    const arr = this._arr;\n    const keyIndices = this._keyIndices;\n    const origArrI = arr[i];\n    const origArrJ = arr[j];\n    arr[i] = origArrJ;\n    arr[j] = origArrI;\n    keyIndices.set(origArrJ.key, i);\n    keyIndices.set(origArrI.key, j);\n  }\n}\n","avg_line_length":27.0807453416,"max_line_length":95,"alphanum_fraction":0.6082568807,"loc":102,"functions":13,"function_signatures":0,"function_parameters":11,"variable_declarations":17,"property_declarations":4,"function_usages":5,"trivial_types":0,"predefined_types":17,"type_definitions":2,"dynamism_heuristic":0,"loc_per_function":5.4615384615,"estimated_tokens":1248,"fun_ann_density":0.0192307692,"var_ann_density":0.0136217949,"prop_ann_density":0.0032051282,"typedef_density":0.0016025641,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.3777777778,"metric":0.262912904,"content_without_annotations":"interface PQEntry<K> {\n  key;\n  priority;\n}\n\n\/**\n * A min-priority queue data structure. This algorithm is derived from Cormen,\n * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n * queue is that you can efficiently (in O(1) time) get the smallest key in\n * the queue. Adding and removing elements takes O(log n) time. A key can\n * have its priority decreased in O(log n) time.\n *\/\nexport class PriorityQueue<K> {\n  private readonly _arr;\n  private readonly _keyIndices;\n\n  constructor() {\n    this._arr = [];\n    this._keyIndices = new Map();\n  }\n\n  \/**\n   * Returns the number of elements in the queue. Takes `O(1)` time.\n   *\/\n  size() {\n    return this._arr.length;\n  }\n\n  \/**\n   * Returns the keys that are in the queue. Takes `O(n)` time.\n   *\/\n  keys() {\n    return this._arr.map(x => x.key);\n  }\n\n  \/**\n   * Returns `true` if **key** is in the queue and `false` if not.\n   *\/\n  has(key) {\n    return this._keyIndices.has(key);\n  }\n\n  \/**\n   * Returns the priority for **key**. If **key** is not present in the queue\n   * then this function returns `undefined`. Takes `O(1)` time.\n   *\/\n  priority(key) {\n    const index = this._keyIndices.get(key);\n    if(index !== undefined) {\n      return this._arr[index].priority;\n    }\n  }\n\n  \/**\n   * Returns the key for the minimum element in this queue. If the queue is\n   * empty this function throws an Error. Takes `O(1)` time.\n   *\/\n  min() {\n    if(this.size() === 0) {\n      throw new Error('Queue underflow');\n    }\n    return this._arr[0].key;\n  }\n\n  \/**\n   * Inserts a new key into the priority queue. If the key already exists in\n   * the queue this function does nothing and returns `false`; otherwise it will return `true`.\n   * Takes `O(n)` time.\n   *\n   * @param key the key to add\n   * @param priority the initial priority for the key\n   *\/\n  add(key, priority) {\n    const keyIndices = this._keyIndices;\n    if(!keyIndices.has(key)) {\n      const arr = this._arr;\n      const index = arr.length;\n      keyIndices.set(key, index);\n      arr.push({key: key, priority: priority});\n      this._decrease(index);\n      return true;\n    }\n    return false;\n  }\n\n  \/**\n   * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n   *\/\n  removeMin() {\n    this._swap(0, this._arr.length - 1);\n    const min = this._arr.pop()!;\n    this._keyIndices.delete(min.key);\n    this._heapify(0);\n    return min.key;\n  }\n\n  \/**\n   * Decreases the priority for **key** to **priority**. If the new priority is\n   * greater than the previous priority, this function will throw an Error.\n   *\n   * @param key the key for which to raise priority\n   * @param priority the new priority for the key\n   *\/\n  decrease(key, priority) {\n    const index = this._keyIndices.get(key);\n\n    if(index === undefined)\n      throw new RangeError('Key out of range');\n\n    if(priority > this._arr[index].priority) {\n      throw new Error('New priority is greater than current priority. ' +\n          `Key: ${String(key)} Old: ${this._arr[index].priority} New: ${priority}`);\n    }\n    this._arr[index].priority = priority;\n    this._decrease(index);\n  }\n\n  private _heapify(i) {\n    const arr = this._arr;\n    const l = 2 * i;\n    const r = l + 1;\n    let largest = i;\n    if(l < arr.length) {\n      largest = arr[l].priority < arr[largest].priority ? l : largest;\n      if(r < arr.length) {\n        largest = arr[r].priority < arr[largest].priority ? r : largest;\n      }\n      if(largest !== i) {\n        this._swap(i, largest);\n        this._heapify(largest);\n      }\n    }\n  }\n\n  private _decrease(index) {\n    const arr = this._arr;\n    const priority = arr[index].priority;\n    let parent;\n    while(index !== 0) {\n      \/\/ eslint-disable-next-line no-bitwise\n      parent = index >> 1;\n      if(arr[parent].priority < priority) {\n        break;\n      }\n      this._swap(index, parent);\n      index = parent;\n    }\n  }\n\n  private _swap(i, j) {\n    const arr = this._arr;\n    const keyIndices = this._keyIndices;\n    const origArrI = arr[i];\n    const origArrJ = arr[j];\n    arr[i] = origArrJ;\n    arr[j] = origArrI;\n    keyIndices.set(origArrJ.key, i);\n    keyIndices.set(origArrI.key, j);\n  }\n}\n"}
{"hexsha":"44481f570658425682f18a6a5dc25f8f8fe067af","size":1067,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/Hooks\/Client\/userDataHandler.ts","max_stars_repo_name":"callmenikk\/JetChat","max_stars_repo_head_hexsha":"6f5ba02f6d112ed11e48f08c1a30a1a40a42cf6d","max_stars_repo_licenses":["CC0-1.0"],"max_stars_count":7.0,"max_stars_repo_stars_event_min_datetime":"2022-02-22T06:58:56.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-14T11:40:10.000Z","max_issues_repo_path":"src\/Hooks\/Client\/userDataHandler.ts","max_issues_repo_name":"callmenikk\/JetChat","max_issues_repo_head_hexsha":"6f5ba02f6d112ed11e48f08c1a30a1a40a42cf6d","max_issues_repo_licenses":["CC0-1.0"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/Hooks\/Client\/userDataHandler.ts","max_forks_repo_name":"callmenikk\/JetChat","max_forks_repo_head_hexsha":"6f5ba02f6d112ed11e48f08c1a30a1a40a42cf6d","max_forks_repo_licenses":["CC0-1.0"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"export type State = {\n\tusername: string,\n\tclient_id: string,\n\tcreatedAt: string,\n\tprofile_src: string,\n\tisLogined: boolean\n}\n\ntype Action = {\n\ttype: \"FILL_USER\" | \"CLEAR_ALL_THE_DATA\" | \"SPECIFIC_KEY_UPDATE\",\n\tpayload: {\n\t\tusername: string,\n\t\tclient_id: string,\n\t\tcreatedAt: string,\n\t\tprofile_src: string,\n\t\tisLogined: boolean,\n\t\tkey?: string ,\n\t\tvalue?: string\n\t}\n}\n\nconst defaultState: State = {\n\tusername: '',\n\tclient_id: '',\n\tcreatedAt: '',\n\tprofile_src: '',\n\tisLogined: false\n}\n\nexport const userDataHandler = (state: State = defaultState, action: Action): State => {\n\tswitch(action.type){\n\t\t\n\t\tcase \"FILL_USER\": {\n\t\t\tconst {username, client_id, createdAt, profile_src, isLogined} = action.payload\n\n\t\t\treturn {\n\t\t\t\tusername: username,\n\t\t\t\tclient_id: client_id,\n\t\t\t\tcreatedAt: createdAt,\n\t\t\t\tprofile_src: profile_src,\n\t\t\t\tisLogined: isLogined\n\t\t\t}\n\t\t}case \"CLEAR_ALL_THE_DATA\": {\n\t\t\treturn defaultState\n\t\t}\n\t\tcase \"SPECIFIC_KEY_UPDATE\": {\n\t\t\tconst {key, value} = action.payload\n\t\t\t\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[key!]: value\n\t\t\t}\n\t\t}\n\t\tdefault: return state\n\t}\n}","avg_line_length":19.0535714286,"max_line_length":88,"alphanum_fraction":0.6663542643,"loc":50,"functions":1,"function_signatures":0,"function_parameters":2,"variable_declarations":4,"property_declarations":7,"function_usages":0,"trivial_types":0,"predefined_types":12,"type_definitions":2,"dynamism_heuristic":0,"loc_per_function":22.0,"estimated_tokens":361,"fun_ann_density":0.0083102493,"var_ann_density":0.0110803324,"prop_ann_density":0.0193905817,"typedef_density":0.0055401662,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.8571428571,"metric":0.2335824923,"content_without_annotations":"export type State = {\n\tusername,\n\tclient_id,\n\tcreatedAt,\n\tprofile_src,\n\tisLogined\n}\n\ntype Action = {\n\ttype,\n\tpayload\n}\n\nconst defaultState = {\n\tusername: '',\n\tclient_id: '',\n\tcreatedAt: '',\n\tprofile_src: '',\n\tisLogined: false\n}\n\nexport const userDataHandler = (state = defaultState, action) => {\n\tswitch(action.type){\n\t\t\n\t\tcase \"FILL_USER\": {\n\t\t\tconst {username, client_id, createdAt, profile_src, isLogined} = action.payload\n\n\t\t\treturn {\n\t\t\t\tusername: username,\n\t\t\t\tclient_id: client_id,\n\t\t\t\tcreatedAt: createdAt,\n\t\t\t\tprofile_src: profile_src,\n\t\t\t\tisLogined: isLogined\n\t\t\t}\n\t\t}case \"CLEAR_ALL_THE_DATA\": {\n\t\t\treturn defaultState\n\t\t}\n\t\tcase \"SPECIFIC_KEY_UPDATE\": {\n\t\t\tconst {key, value} = action.payload\n\t\t\t\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[key!]: value\n\t\t\t}\n\t\t}\n\t\tdefault: return state\n\t}\n}"}
{"hexsha":"19d57bba34088220520f0540c5898a7714748a9a","size":2307,"ext":"tsx","lang":"TypeScript","max_stars_repo_path":"contracts\/deployedContracts.tsx","max_stars_repo_name":"SunblockFinance\/sunblock","max_stars_repo_head_hexsha":"c61bb1014e037121dde2b224c193edc9abab028d","max_stars_repo_licenses":["MIT"],"max_stars_count":3.0,"max_stars_repo_stars_event_min_datetime":"2022-03-04T11:34:31.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-04T13:06:43.000Z","max_issues_repo_path":"contracts\/deployedContracts.tsx","max_issues_repo_name":"SunblockFinance\/sunblock","max_issues_repo_head_hexsha":"c61bb1014e037121dde2b224c193edc9abab028d","max_issues_repo_licenses":["MIT"],"max_issues_count":29.0,"max_issues_repo_issues_event_min_datetime":"2022-02-17T12:46:13.000Z","max_issues_repo_issues_event_max_datetime":"2022-03-30T09:49:47.000Z","max_forks_repo_path":"contracts\/deployedContracts.tsx","max_forks_repo_name":"SunblockFinance\/sunblock","max_forks_repo_head_hexsha":"c61bb1014e037121dde2b224c193edc9abab028d","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/\/ Copyright 2022 Kenth Fagerlund.\n\n\/\/ SPDX-License-Identifier: MIT\nexport interface ContractDescriptor {\n    title: string\n    logo: string\n    description: string\n    url: string\n}\n\nexport const DESCRIPTOR_STRONGBLOCK:ContractDescriptor = {\n    title:\"Strongblock\",\n    logo:\"\/svg\/strong-logo.svg\",\n    description:\"StrongBlock is the first and only blockchain-agnostic protocol to reward nodes\",\n    url:'https:\/\/strongblock.com\/'\n}\n\nexport const DESCRIPTOR_YIELDNODE:ContractDescriptor = {\n    title:\"Yieldnodes\",\n    logo:\"\/svg\/yield-nodes-logo.svg\",\n    description:\"YieldNodes is a complex, multi-tiered Node rental program based on the new blockchain-based economy\",\n    url:'https:\/\/yieldnodes.com\/'\n}\n\nexport const DESCRIPTOR_THOR:ContractDescriptor = {\n    title:\"Thor\",\n    logo:\"\/svg\/thor.svg\",\n    description:\"Gain passive income by leveraging THOR's Financial multi-chain yield-farming protocol\",\n    url:'https:\/\/www.thor.financial\/'\n}\n\nexport const DESCRIPTOR_POLAR:ContractDescriptor = {\n    title:\"Polar\",\n    logo:\"\/svg\/polar.svg\",\n    description:\"Poloar nodes\",\n    url:'https:\/\/www.polar.financial\/'\n}\n\nexport const DESCRIPTOR_ANCHOR:ContractDescriptor = {\n    title:\"Anchor\",\n    logo:\"\/svg\/anchor.svg\",\n    description:\"Anchor\",\n    url:'https:\/\/www.anchor.financial\/'\n}\n\nexport const DESCRIPTOR_ETHERSTONES:ContractDescriptor = {\n    title:\"Etherstones\",\n    logo:\"\/etherstones.webp\",\n    description:\"YieldNodes is a complex, multi-tiered Node rental program based on the new blockchain-based economy\",\n    url:'https:\/\/etherstones.fi\/'\n}\n\nexport const DESCRIPTOR_PHOENIX:ContractDescriptor = {\n    title:\"Phoenix\",\n    logo:\"\/crypto-icons\/fire.png\",\n    description:\"Fire nodes\",\n    url:'https:\/\/thephoenix.finance\/app\/'\n}\n\nexport function NameToDescriptor(contractName:string):ContractDescriptor {\n    switch (contractName) {\n        case 'Strongblock':\n            return DESCRIPTOR_STRONGBLOCK\n        case 'Yieldnodes':\n            return DESCRIPTOR_YIELDNODE\n        case 'Polar':\n            return DESCRIPTOR_POLAR\n        case 'Thor':\n            return DESCRIPTOR_THOR\n        case 'Etherstones':\n            return DESCRIPTOR_ETHERSTONES\n        case 'Phoenix':\n            return DESCRIPTOR_PHOENIX\n        default:\n            return DESCRIPTOR_STRONGBLOCK\n    }\n}\n","avg_line_length":29.5769230769,"max_line_length":118,"alphanum_fraction":0.6931079324,"loc":66,"functions":1,"function_signatures":0,"function_parameters":1,"variable_declarations":7,"property_declarations":4,"function_usages":0,"trivial_types":0,"predefined_types":5,"type_definitions":1,"dynamism_heuristic":0,"loc_per_function":16.0,"estimated_tokens":602,"fun_ann_density":0.0033222591,"var_ann_density":0.011627907,"prop_ann_density":0.0066445183,"typedef_density":0.0016611296,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.3846153846,"metric":0.2180118569,"content_without_annotations":"\/\/ Copyright 2022 Kenth Fagerlund.\n\n\/\/ SPDX-License-Identifier: MIT\nexport interface ContractDescriptor {\n    title\n    logo\n    description\n    url\n}\n\nexport const DESCRIPTOR_STRONGBLOCK = {\n    title:\"Strongblock\",\n    logo:\"\/svg\/strong-logo.svg\",\n    description:\"StrongBlock is the first and only blockchain-agnostic protocol to reward nodes\",\n    url:'https:\/\/strongblock.com\/'\n}\n\nexport const DESCRIPTOR_YIELDNODE = {\n    title:\"Yieldnodes\",\n    logo:\"\/svg\/yield-nodes-logo.svg\",\n    description:\"YieldNodes is a complex, multi-tiered Node rental program based on the new blockchain-based economy\",\n    url:'https:\/\/yieldnodes.com\/'\n}\n\nexport const DESCRIPTOR_THOR = {\n    title:\"Thor\",\n    logo:\"\/svg\/thor.svg\",\n    description:\"Gain passive income by leveraging THOR's Financial multi-chain yield-farming protocol\",\n    url:'https:\/\/www.thor.financial\/'\n}\n\nexport const DESCRIPTOR_POLAR = {\n    title:\"Polar\",\n    logo:\"\/svg\/polar.svg\",\n    description:\"Poloar nodes\",\n    url:'https:\/\/www.polar.financial\/'\n}\n\nexport const DESCRIPTOR_ANCHOR = {\n    title:\"Anchor\",\n    logo:\"\/svg\/anchor.svg\",\n    description:\"Anchor\",\n    url:'https:\/\/www.anchor.financial\/'\n}\n\nexport const DESCRIPTOR_ETHERSTONES = {\n    title:\"Etherstones\",\n    logo:\"\/etherstones.webp\",\n    description:\"YieldNodes is a complex, multi-tiered Node rental program based on the new blockchain-based economy\",\n    url:'https:\/\/etherstones.fi\/'\n}\n\nexport const DESCRIPTOR_PHOENIX = {\n    title:\"Phoenix\",\n    logo:\"\/crypto-icons\/fire.png\",\n    description:\"Fire nodes\",\n    url:'https:\/\/thephoenix.finance\/app\/'\n}\n\nexport function NameToDescriptor(contractName) {\n    switch (contractName) {\n        case 'Strongblock':\n            return DESCRIPTOR_STRONGBLOCK\n        case 'Yieldnodes':\n            return DESCRIPTOR_YIELDNODE\n        case 'Polar':\n            return DESCRIPTOR_POLAR\n        case 'Thor':\n            return DESCRIPTOR_THOR\n        case 'Etherstones':\n            return DESCRIPTOR_ETHERSTONES\n        case 'Phoenix':\n            return DESCRIPTOR_PHOENIX\n        default:\n            return DESCRIPTOR_STRONGBLOCK\n    }\n}\n"}
{"hexsha":"75cc216858cda81da5f47cc98579e10eec11b4c8","size":2503,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/renderer\/pages\/main\/utils\/beats-detector.ts","max_stars_repo_name":"maotoumao\/desktop-pet","max_stars_repo_head_hexsha":"23fdfc9c11dea4254bc26b2a67863f9a56ba5d0d","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-01-22T18:41:47.000Z","max_stars_repo_stars_event_max_datetime":"2022-01-22T18:41:47.000Z","max_issues_repo_path":"src\/renderer\/pages\/main\/utils\/beats-detector.ts","max_issues_repo_name":"maotoumao\/desktop-pet","max_issues_repo_head_hexsha":"23fdfc9c11dea4254bc26b2a67863f9a56ba5d0d","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/renderer\/pages\/main\/utils\/beats-detector.ts","max_forks_repo_name":"maotoumao\/desktop-pet","max_forks_repo_head_hexsha":"23fdfc9c11dea4254bc26b2a67863f9a56ba5d0d","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/\/ @ts-nocheck\nlet counter = 0;\nconst beats = [];\nfunction emitBpmEvent(value) {\n  if (beats.length >= 5) {\n    beats.shift();\n  }\n  beats.push(value);\n  if (!counter) {\n    window.Events.emit(\n      'musicBpm',\n      beats.length\n        ? beats.reduce((prev, curr) => prev + curr) \/ beats.length\n        : 0\n    );\n  }\n\n  counter = (counter + 1) % 2;\n}\n\nasync function record() {\n  const audioSource: MediaStream = await navigator.mediaDevices.getUserMedia({\n    audio: {\n      mandatory: {\n        chromeMediaSource: 'desktop',\n      },\n    },\n    video: {\n      mandatory: {\n        chromeMediaSource: 'desktop',\n      },\n    },\n  });\n\n  (audioSource.getVideoTracks() ?? []).forEach((track) => {\n    audioSource.removeTrack(track);\n  });\n\n  const sampleRate = 5120;\n\n  const context = new AudioContext({\n    sampleRate,\n  });\n\n  const processor = context.createScriptProcessor(16384, 2, 2);\n\n  processor.onaudioprocess = (e) => {\n    const bufferData = e.inputBuffer.getChannelData(0);\n    const duration = e.inputBuffer.duration;\n\n    \/\/ \u5b9e\u6d4b \u8fd9\u4e2a\u91c7\u6837\u7387\u8db3\u591f\u4e86\u3002\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u778e\u641e\u5427\n    \/\/ \u91c7\u6837\u73874096, \u8fd9\u6bb5\u65f6\u95f4\u521a\u597d4s\uff0c\u771f\u7684\u4f1a\u670930bpm\u7684\u6b4c\u5417\n    \/\/ \u5bfb\u627epeaks\uff0c\u5148\u62ff\u4e00\u4e2a\u8f68\u9053\u770b\u5427\n    \/\/ \u5148\u6765\u4e2a\u653e\u5927\n    const max = Math.max(...bufferData);\n    if (max < 0.3) {\n      \/\/ \u542c\u4e0d\u89c1\n      emitBpmEvent(0);\n      return;\n    }\n    bufferData.forEach((k, index) => {\n      bufferData[index] = k \/ max;\n    });\n    const peaks = [];\n    bufferData.forEach((buf, index) => {\n      if (buf > 0.7) {\n        peaks.push(index);\n      }\n    });\n    let rhythms = [];\n    peaks.forEach((k, i) => i && rhythms.push(k - peaks[i - 1]));\n    rhythms = rhythms.filter((k) => k > sampleRate \/ 8);\n    if (!rhythms.length) {\n      emitBpmEvent(0);\n      return;\n    }\n    if (rhythms.length > 4) {\n      const avg =\n        (rhythms.reduce((prev, curr) => prev + curr) -\n          Math.max(...rhythms) -\n          Math.min(...rhythms)) \/\n        (rhythms.length - 2);\n      const beat = (60 \/ avg) * sampleRate;\n      emitBpmEvent(beat > 200 ? beat \/ 2 : beat, rhythms.length);\n    } else {\n      const avg = rhythms.reduce((prev, curr) => prev + curr) \/ rhythms.length;\n      const beat = (60 \/ avg) * sampleRate;\n      emitBpmEvent(beat > 200 ? beat \/ 2 : beat, rhythms.length);\n    }\n  };\n  \/\/ \u641e\u4e2a\u4f4e\u901a\u6ee4\u6ce2\u5668\n  const mediaNode = context.createMediaStreamSource(audioSource);\n  const filterNode = context.createBiquadFilter();\n  filterNode.type = 'lowpass';\n  mediaNode.connect(filterNode);\n  filterNode.connect(processor);\n  processor.connect(context.destination);\n}\n\nexport default record;\n","avg_line_length":24.7821782178,"max_line_length":79,"alphanum_fraction":0.5817019577,"loc":84,"functions":11,"function_signatures":0,"function_parameters":16,"variable_declarations":17,"property_declarations":0,"function_usages":1,"trivial_types":0,"predefined_types":0,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":11.1818181818,"estimated_tokens":839,"fun_ann_density":0.0321811681,"var_ann_density":0.0202622169,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.0,"metric":0.3118322157,"content_without_annotations":"\/\/ @ts-nocheck\nlet counter = 0;\nconst beats = [];\nfunction emitBpmEvent(value) {\n  if (beats.length >= 5) {\n    beats.shift();\n  }\n  beats.push(value);\n  if (!counter) {\n    window.Events.emit(\n      'musicBpm',\n      beats.length\n        ? beats.reduce((prev, curr) => prev + curr) \/ beats.length\n        : 0\n    );\n  }\n\n  counter = (counter + 1) % 2;\n}\n\nasync function record() {\n  const audioSource = await navigator.mediaDevices.getUserMedia({\n    audio: {\n      mandatory: {\n        chromeMediaSource: 'desktop',\n      },\n    },\n    video: {\n      mandatory: {\n        chromeMediaSource: 'desktop',\n      },\n    },\n  });\n\n  (audioSource.getVideoTracks() ?? []).forEach((track) => {\n    audioSource.removeTrack(track);\n  });\n\n  const sampleRate = 5120;\n\n  const context = new AudioContext({\n    sampleRate,\n  });\n\n  const processor = context.createScriptProcessor(16384, 2, 2);\n\n  processor.onaudioprocess = (e) => {\n    const bufferData = e.inputBuffer.getChannelData(0);\n    const duration = e.inputBuffer.duration;\n\n    \/\/ \u5b9e\u6d4b \u8fd9\u4e2a\u91c7\u6837\u7387\u8db3\u591f\u4e86\u3002\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u778e\u641e\u5427\n    \/\/ \u91c7\u6837\u73874096, \u8fd9\u6bb5\u65f6\u95f4\u521a\u597d4s\uff0c\u771f\u7684\u4f1a\u670930bpm\u7684\u6b4c\u5417\n    \/\/ \u5bfb\u627epeaks\uff0c\u5148\u62ff\u4e00\u4e2a\u8f68\u9053\u770b\u5427\n    \/\/ \u5148\u6765\u4e2a\u653e\u5927\n    const max = Math.max(...bufferData);\n    if (max < 0.3) {\n      \/\/ \u542c\u4e0d\u89c1\n      emitBpmEvent(0);\n      return;\n    }\n    bufferData.forEach((k, index) => {\n      bufferData[index] = k \/ max;\n    });\n    const peaks = [];\n    bufferData.forEach((buf, index) => {\n      if (buf > 0.7) {\n        peaks.push(index);\n      }\n    });\n    let rhythms = [];\n    peaks.forEach((k, i) => i && rhythms.push(k - peaks[i - 1]));\n    rhythms = rhythms.filter((k) => k > sampleRate \/ 8);\n    if (!rhythms.length) {\n      emitBpmEvent(0);\n      return;\n    }\n    if (rhythms.length > 4) {\n      const avg =\n        (rhythms.reduce((prev, curr) => prev + curr) -\n          Math.max(...rhythms) -\n          Math.min(...rhythms)) \/\n        (rhythms.length - 2);\n      const beat = (60 \/ avg) * sampleRate;\n      emitBpmEvent(beat > 200 ? beat \/ 2 : beat, rhythms.length);\n    } else {\n      const avg = rhythms.reduce((prev, curr) => prev + curr) \/ rhythms.length;\n      const beat = (60 \/ avg) * sampleRate;\n      emitBpmEvent(beat > 200 ? beat \/ 2 : beat, rhythms.length);\n    }\n  };\n  \/\/ \u641e\u4e2a\u4f4e\u901a\u6ee4\u6ce2\u5668\n  const mediaNode = context.createMediaStreamSource(audioSource);\n  const filterNode = context.createBiquadFilter();\n  filterNode.type = 'lowpass';\n  mediaNode.connect(filterNode);\n  filterNode.connect(processor);\n  processor.connect(context.destination);\n}\n\nexport default record;\n"}
{"hexsha":"b350ec9afb7525ac8312058890c66c9660eef021","size":1690,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/utils\/sort-inner-arrays.ts","max_stars_repo_name":"RexSkz\/json-diff-kit","max_stars_repo_head_hexsha":"339bac1947e69ba3a7bab2cc648a916814ee8d62","max_stars_repo_licenses":["MIT"],"max_stars_count":8.0,"max_stars_repo_stars_event_min_datetime":"2022-02-09T07:58:55.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-28T10:54:19.000Z","max_issues_repo_path":"src\/utils\/sort-inner-arrays.ts","max_issues_repo_name":"RexSkz\/json-diff-kit","max_issues_repo_head_hexsha":"339bac1947e69ba3a7bab2cc648a916814ee8d62","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/utils\/sort-inner-arrays.ts","max_forks_repo_name":"RexSkz\/json-diff-kit","max_forks_repo_head_hexsha":"339bac1947e69ba3a7bab2cc648a916814ee8d62","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/**\n * The compare function to correct the order for \"array\" or \"object\":\n * - The order for 2 values with different types are: boolean, number, string, null, array, object.\n * - The order for 2 values with the same type is according to the type:\n *   - For boolean, number, string: use the `<` sign.\n *   - For array and object: preserve the original order (or do we have a better idea?)\n *\/\n\nconst getOrderByType = (value: any) => {\n  if (typeof value === 'boolean') {\n    return 0;\n  }\n  if (typeof value === 'number') {\n    return 1;\n  }\n  if (typeof value === 'string') {\n    return 2;\n  }\n  if (value === null) {\n    return 3;\n  }\n  if (Array.isArray(value)) {\n    return 4;\n  }\n  if (typeof value === 'object') {\n    return 5;\n  }\n};\n\nconst cmp = (a: any, b: any) => {\n  const orderByTypeA = getOrderByType(a);\n  const orderByTypeB = getOrderByType(b);\n\n  if (orderByTypeA !== orderByTypeB) {\n    return orderByTypeA - orderByTypeB;\n  }\n\n  if (a === null && b === null || Array.isArray(a) && Array.isArray(b) || orderByTypeA === 5 && orderByTypeB === 5) {\n    return 0;\n  }\n\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'string':\n      return a.localeCompare(b);\n    case 'boolean':\n      return (+a) - (+b);\n  }\n};\n\nconst sortInnerArrays = (source: any) => {\n  if (!source || typeof source !== 'object') {\n    return source;\n  }\n\n  if (Array.isArray(source)) {\n    const result = [...source];\n    result.sort((a, b) => cmp(a, b));\n    return result.map(item => sortInnerArrays(item));\n  }\n\n  const result = { ...source };\n  for (const key in result) {\n    result[key] = sortInnerArrays(result[key]);\n  }\n  return result;\n};\n\nexport default sortInnerArrays;\n","avg_line_length":23.8028169014,"max_line_length":117,"alphanum_fraction":0.5934911243,"loc":54,"functions":5,"function_signatures":0,"function_parameters":7,"variable_declarations":7,"property_declarations":0,"function_usages":3,"trivial_types":4,"predefined_types":0,"type_definitions":0,"dynamism_heuristic":6,"loc_per_function":9.8,"estimated_tokens":509,"fun_ann_density":0.0235756385,"var_ann_density":0.0137524558,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0117878193,"trivial_density":0.2105263158,"predefined_density":0.0,"metric":0.2657923183,"content_without_annotations":"\/**\n * The compare function to correct the order for \"array\" or \"object\":\n * - The order for 2 values with different types are: boolean, number, string, null, array, object.\n * - The order for 2 values with the same type is according to the type:\n *   - For boolean, number, string: use the `<` sign.\n *   - For array and object: preserve the original order (or do we have a better idea?)\n *\/\n\nconst getOrderByType = (value) => {\n  if (typeof value === 'boolean') {\n    return 0;\n  }\n  if (typeof value === 'number') {\n    return 1;\n  }\n  if (typeof value === 'string') {\n    return 2;\n  }\n  if (value === null) {\n    return 3;\n  }\n  if (Array.isArray(value)) {\n    return 4;\n  }\n  if (typeof value === 'object') {\n    return 5;\n  }\n};\n\nconst cmp = (a, b) => {\n  const orderByTypeA = getOrderByType(a);\n  const orderByTypeB = getOrderByType(b);\n\n  if (orderByTypeA !== orderByTypeB) {\n    return orderByTypeA - orderByTypeB;\n  }\n\n  if (a === null && b === null || Array.isArray(a) && Array.isArray(b) || orderByTypeA === 5 && orderByTypeB === 5) {\n    return 0;\n  }\n\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'string':\n      return a.localeCompare(b);\n    case 'boolean':\n      return (+a) - (+b);\n  }\n};\n\nconst sortInnerArrays = (source) => {\n  if (!source || typeof source !== 'object') {\n    return source;\n  }\n\n  if (Array.isArray(source)) {\n    const result = [...source];\n    result.sort((a, b) => cmp(a, b));\n    return result.map(item => sortInnerArrays(item));\n  }\n\n  const result = { ...source };\n  for (const key in result) {\n    result[key] = sortInnerArrays(result[key]);\n  }\n  return result;\n};\n\nexport default sortInnerArrays;\n"}
{"hexsha":"66050b37a0775a6164dfd8cc595165bcd9391a46","size":1135,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/data\/constants.ts","max_stars_repo_name":"vs1998\/math-master","max_stars_repo_head_hexsha":"9ad2d2099478efdf850c86d338f7a3f0dd72c90b","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"src\/data\/constants.ts","max_issues_repo_name":"vs1998\/math-master","max_issues_repo_head_hexsha":"9ad2d2099478efdf850c86d338f7a3f0dd72c90b","max_issues_repo_licenses":["MIT"],"max_issues_count":3.0,"max_issues_repo_issues_event_min_datetime":"2022-02-13T12:24:01.000Z","max_issues_repo_issues_event_max_datetime":"2022-02-28T03:49:35.000Z","max_forks_repo_path":"src\/data\/constants.ts","max_forks_repo_name":"veit30\/mind-games","max_forks_repo_head_hexsha":"9ad2d2099478efdf850c86d338f7a3f0dd72c90b","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"export const DIFFICULTY = {\n  EASY: 0,\n  MEDIUM: 1,\n  HARD: 2,\n} as const;\n\nexport const OPERATOR = {\n  SUBTRACT: \"-\",\n  ADD: \"+\",\n  MULTIPLY: \"*\",\n  DEVIDE: \"\/\",\n  SMALLER: \"<\",\n  LARGER: \">\",\n  EQUAL: \"=\",\n} as const;\n\nexport const GAME_STATE = {\n  PENDING: 1,\n  DONE: 2,\n  UNDECIDED: 3,\n  ERROR: 4,\n} as const;\n\nexport const OPERATOR_COLLECTION = {\n  ADD: [OPERATOR.ADD],\n  SUBTRACT: [OPERATOR.SUBTRACT],\n  MULTIPLY: [OPERATOR.MULTIPLY],\n  DEVIDE: [OPERATOR.DEVIDE],\n  BASIC: [OPERATOR.ADD, OPERATOR.SUBTRACT],\n  AVERAGE: [OPERATOR.ADD, OPERATOR.SUBTRACT, OPERATOR.MULTIPLY],\n  FULL: [OPERATOR.ADD, OPERATOR.SUBTRACT, OPERATOR.MULTIPLY, OPERATOR.DEVIDE],\n};\n\nexport const colors = [\n  \"blue\",\n  \"red\",\n  \"orange\",\n  \"yellow\",\n  \"green\",\n  \"violet\",\n  \"white\",\n];\n\nexport const operatorMapper = (s: string | number): string => {\n  if (s === \"*\") {\n    return \"\u00d7\";\n  } else if (s === \"\/\") {\n    return \"\u00f7\";\n  } else {\n    return s + \"\";\n  }\n};\n\nexport const ICONS = {\n  PLAY: \"play\",\n  COLOR_SWITCH: \"color-switch\",\n  CHEVRON_LEFT: \"chevron-left\",\n  HELP: \"help\",\n  RESTART: \"restart\",\n  CLOSE: \"close\",\n  TRASH: \"trash\",\n} as const;\n","avg_line_length":18.0158730159,"max_line_length":78,"alphanum_fraction":0.5938325991,"loc":56,"functions":1,"function_signatures":0,"function_parameters":1,"variable_declarations":7,"property_declarations":0,"function_usages":0,"trivial_types":0,"predefined_types":3,"type_definitions":0,"dynamism_heuristic":4,"loc_per_function":7.0,"estimated_tokens":404,"fun_ann_density":0.004950495,"var_ann_density":0.0173267327,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0099009901,"trivial_density":0.0,"predefined_density":0.3333333333,"metric":0.2362970583,"content_without_annotations":"export const DIFFICULTY = {\n  EASY: 0,\n  MEDIUM: 1,\n  HARD: 2,\n} as const;\n\nexport const OPERATOR = {\n  SUBTRACT: \"-\",\n  ADD: \"+\",\n  MULTIPLY: \"*\",\n  DEVIDE: \"\/\",\n  SMALLER: \"<\",\n  LARGER: \">\",\n  EQUAL: \"=\",\n} as const;\n\nexport const GAME_STATE = {\n  PENDING: 1,\n  DONE: 2,\n  UNDECIDED: 3,\n  ERROR: 4,\n} as const;\n\nexport const OPERATOR_COLLECTION = {\n  ADD: [OPERATOR.ADD],\n  SUBTRACT: [OPERATOR.SUBTRACT],\n  MULTIPLY: [OPERATOR.MULTIPLY],\n  DEVIDE: [OPERATOR.DEVIDE],\n  BASIC: [OPERATOR.ADD, OPERATOR.SUBTRACT],\n  AVERAGE: [OPERATOR.ADD, OPERATOR.SUBTRACT, OPERATOR.MULTIPLY],\n  FULL: [OPERATOR.ADD, OPERATOR.SUBTRACT, OPERATOR.MULTIPLY, OPERATOR.DEVIDE],\n};\n\nexport const colors = [\n  \"blue\",\n  \"red\",\n  \"orange\",\n  \"yellow\",\n  \"green\",\n  \"violet\",\n  \"white\",\n];\n\nexport const operatorMapper = (s) => {\n  if (s === \"*\") {\n    return \"\u00d7\";\n  } else if (s === \"\/\") {\n    return \"\u00f7\";\n  } else {\n    return s + \"\";\n  }\n};\n\nexport const ICONS = {\n  PLAY: \"play\",\n  COLOR_SWITCH: \"color-switch\",\n  CHEVRON_LEFT: \"chevron-left\",\n  HELP: \"help\",\n  RESTART: \"restart\",\n  CLOSE: \"close\",\n  TRASH: \"trash\",\n} as const;\n"}
{"hexsha":"aaefbb78dd0623b290d8909d776a71929372ed56","size":2475,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"packages\/migrate\/src\/index.ts","max_stars_repo_name":"SerenityNotes\/serenity-tools","max_stars_repo_head_hexsha":"14a185d3e90ef587323c61aedb6b947a6c568f68","max_stars_repo_licenses":["MIT"],"max_stars_count":9.0,"max_stars_repo_stars_event_min_datetime":"2022-01-25T16:47:24.000Z","max_stars_repo_stars_event_max_datetime":"2022-02-28T22:23:44.000Z","max_issues_repo_path":"packages\/migrate\/src\/index.ts","max_issues_repo_name":"SerenityNotes\/serenity-tools","max_issues_repo_head_hexsha":"14a185d3e90ef587323c61aedb6b947a6c568f68","max_issues_repo_licenses":["MIT"],"max_issues_count":1.0,"max_issues_repo_issues_event_min_datetime":"2022-01-23T08:06:53.000Z","max_issues_repo_issues_event_max_datetime":"2022-01-23T08:06:53.000Z","max_forks_repo_path":"packages\/migrate\/src\/index.ts","max_forks_repo_name":"SerenityNotes\/serenity-tools","max_forks_repo_head_hexsha":"14a185d3e90ef587323c61aedb6b947a6c568f68","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"export type Migration = {\n  name: string;\n  statements: string[];\n};\n\nexport type MigrateParams = {\n  db: any; \/\/ db is not defined to avoid type issues with different libs\n  migrations: Migration[];\n};\n\nconst createMigrationsTable = `\nCREATE TABLE IF NOT EXISTS \"_migrations\" (\n  \"id\"                    INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  \"migration_name\"        TEXT NOT NULL,\n  \"created_at\"            DATETIME NOT NULL DEFAULT current_timestamp\n);\n`;\n\nconst insertMigration = `\nINSERT INTO \"_migrations\" (migration_name) VALUES (:migration_name);\n`;\n\nconst getLastMigration = `\nSELECT * FROM \"_migrations\" ORDER BY \"migration_name\" DESC LIMIT 1;\n`;\n\nfunction migrationComparator(a, b) {\n  if (a.name < b.name) {\n    return -1;\n  }\n  if (a.name > b.name) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function migrate({ db, migrations }: MigrateParams) {\n  return new Promise<undefined>((resolve, reject) => {\n    try {\n      migrations.sort(migrationComparator);\n\n      db.transaction(\n        (tx) => {\n          tx.executeSql(createMigrationsTable, []);\n          tx.executeSql(getLastMigration, [], (_txn, res) => {\n            if (res.rows.length === 0) {\n              \/\/ apply all migrations\n              migrations.forEach((migration) => {\n                migration.statements.forEach((statement) => {\n                  tx.executeSql(statement, []);\n                });\n                tx.executeSql(insertMigration, [migration.name]);\n              });\n            } else if (\n              migrations[migrations.length - 1].name ===\n              res.rows.item(0).migration_name\n            ) {\n              \/\/ apply no migration\n            } else {\n              \/\/ identify and apply remaining migrations\n              const migrationsToApply = [];\n              migrations.forEach((migration) => {\n                if (migration.name > res.rows.item(0).migration_name) {\n                  migrationsToApply.push(migration);\n                }\n              });\n\n              migrationsToApply.forEach((migration) => {\n                migration.statements.forEach((statement) => {\n                  tx.executeSql(statement, []);\n                });\n                tx.executeSql(insertMigration, [migration.name]);\n              });\n            }\n          });\n        },\n        (error) => {\n          reject(error);\n        },\n        () => {\n          resolve(undefined);\n        }\n      );\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n","avg_line_length":27.808988764,"max_line_length":72,"alphanum_fraction":0.5301010101,"loc":77,"functions":12,"function_signatures":0,"function_parameters":14,"variable_declarations":4,"property_declarations":4,"function_usages":0,"trivial_types":1,"predefined_types":2,"type_definitions":2,"dynamism_heuristic":0,"loc_per_function":13.5833333333,"estimated_tokens":563,"fun_ann_density":0.0461811723,"var_ann_density":0.0071047957,"prop_ann_density":0.0071047957,"typedef_density":0.0035523979,"dynamism_density":0.0,"trivial_density":0.0294117647,"predefined_density":0.0588235294,"metric":0.3065524242,"content_without_annotations":"export type Migration = {\n  name;\n  statements;\n};\n\nexport type MigrateParams = {\n  db; \/\/ db is not defined to avoid type issues with different libs\n  migrations;\n};\n\nconst createMigrationsTable = `\nCREATE TABLE IF NOT EXISTS \"_migrations\" (\n  \"id\"                    INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n  \"migration_name\"        TEXT NOT NULL,\n  \"created_at\"            DATETIME NOT NULL DEFAULT current_timestamp\n);\n`;\n\nconst insertMigration = `\nINSERT INTO \"_migrations\" (migration_name) VALUES (:migration_name);\n`;\n\nconst getLastMigration = `\nSELECT * FROM \"_migrations\" ORDER BY \"migration_name\" DESC LIMIT 1;\n`;\n\nfunction migrationComparator(a, b) {\n  if (a.name < b.name) {\n    return -1;\n  }\n  if (a.name > b.name) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function migrate({ db, migrations }) {\n  return new Promise<undefined>((resolve, reject) => {\n    try {\n      migrations.sort(migrationComparator);\n\n      db.transaction(\n        (tx) => {\n          tx.executeSql(createMigrationsTable, []);\n          tx.executeSql(getLastMigration, [], (_txn, res) => {\n            if (res.rows.length === 0) {\n              \/\/ apply all migrations\n              migrations.forEach((migration) => {\n                migration.statements.forEach((statement) => {\n                  tx.executeSql(statement, []);\n                });\n                tx.executeSql(insertMigration, [migration.name]);\n              });\n            } else if (\n              migrations[migrations.length - 1].name ===\n              res.rows.item(0).migration_name\n            ) {\n              \/\/ apply no migration\n            } else {\n              \/\/ identify and apply remaining migrations\n              const migrationsToApply = [];\n              migrations.forEach((migration) => {\n                if (migration.name > res.rows.item(0).migration_name) {\n                  migrationsToApply.push(migration);\n                }\n              });\n\n              migrationsToApply.forEach((migration) => {\n                migration.statements.forEach((statement) => {\n                  tx.executeSql(statement, []);\n                });\n                tx.executeSql(insertMigration, [migration.name]);\n              });\n            }\n          });\n        },\n        (error) => {\n          reject(error);\n        },\n        () => {\n          resolve(undefined);\n        }\n      );\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n"}
{"hexsha":"44a520e620f5168e4463fcd975d71bdcee8e3767","size":3288,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/utils\/parseKindleHighlights.ts","max_stars_repo_name":"theBenForce\/logseq-plugin-my-highlights","max_stars_repo_head_hexsha":"66500ad9e52f8d5a7d48ab161f34cf2c21283189","max_stars_repo_licenses":["MIT"],"max_stars_count":4.0,"max_stars_repo_stars_event_min_datetime":"2022-03-03T14:14:43.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-31T12:26:22.000Z","max_issues_repo_path":"src\/utils\/parseKindleHighlights.ts","max_issues_repo_name":"theBenForce\/logseq-plugin-my-highlights","max_issues_repo_head_hexsha":"66500ad9e52f8d5a7d48ab161f34cf2c21283189","max_issues_repo_licenses":["MIT"],"max_issues_count":6.0,"max_issues_repo_issues_event_min_datetime":"2022-03-03T12:22:49.000Z","max_issues_repo_issues_event_max_datetime":"2022-03-03T21:53:52.000Z","max_forks_repo_path":"src\/utils\/parseKindleHighlights.ts","max_forks_repo_name":"theBenForce\/logseq-plugin-my-highlights","max_forks_repo_head_hexsha":"66500ad9e52f8d5a7d48ab161f34cf2c21283189","max_forks_repo_licenses":["MIT"],"max_forks_count":1.0,"max_forks_repo_forks_event_min_datetime":"2022-03-06T14:11:50.000Z","max_forks_repo_forks_event_max_datetime":"2022-03-06T14:11:50.000Z","content":"\nexport type AnnotationType = 'Highlight' | 'Note' | 'Bookmark';\n\nexport interface KindleAnnotation {\n  timestamp: Date;\n  type: AnnotationType;\n  content?: string;\n  page?: number;\n  location: {\n    start: number;\n    end?: number;\n  }\n}\n\nexport interface KindleBook extends BookMetadata {\n  lastAnnotation: Date;\n  annotations: Array<KindleAnnotation>;\n}\n\ninterface BookMetadata {\n  title: string;\n  author?: string;\n}\n\nexport const parseTitleLine = (titleLine: string) => {\n  const title = titleLine.replace(\/\\([^)]+\\)$\/g, '').trim();\n  const authorMatches = \/\\((?<author>[^)]+)\\)$\/g.exec(titleLine);\n\n  const author = authorMatches?.groups?.[\"author\"]?.trim();\n\n  return { title, author };\n}\n\nexport const parseMetaLine = (metaLine: string): KindleAnnotation => {\n  const typeRx = \/^- Your\\s(?<type>Note|Highlight|Bookmark)\/;\n  const pageRx = \/page\\s+(?<page>\\d+)\/;\n  const locationRx = \/Location\\s+(?<start>\\d+)(-(?<end>\\d+))?\/;\n  const timestampRx = \/Added on\\s+(?<timestamp>.*)$\/;\n\n  const type = typeRx.exec(metaLine)?.groups?.['type'];\n\n  const pageVal = pageRx.exec(metaLine)?.groups?.['page'];\n  let page: number | undefined;\n\n  if (pageVal) {\n    page = parseInt(pageVal);\n  }\n\n  const locationVal = locationRx.exec(metaLine)?.groups;\n\n  if (!locationVal) {\n    throw new Error(`Could not find location: ${metaLine}`);\n  }\n\n  let start: number | undefined;\n  let end: number | undefined;\n\n  if (locationVal['start']) {\n    start = parseInt(locationVal['start']);\n  }\n\n  if (locationVal['end']) {\n    end = parseInt(locationVal['end']);\n  }\n\n  let timestamp = new Date();\n\n  const timestampVal = timestampRx.exec(metaLine)?.groups?.['timestamp'];\n\n  if (timestampVal) {\n    timestamp = new Date(Date.parse(timestampVal));\n  }\n\n  return {\n    type,\n    page,\n    timestamp,\n    location: {\n      start,\n      end\n    }\n  } as KindleAnnotation;\n}\n\nexport const parseClipping = (clipping: string): KindleAnnotation & BookMetadata => {\n  const lines = clipping.trim().split(\/\\n\/);\n  \n  if (lines.length < 2) {\n    throw new Error(`Could not parse clipping, not enough lines: ${clipping}`);\n  }\n\n  const title = parseTitleLine(lines.shift()!.trim());\n  const metadata = parseMetaLine(lines.shift()!.trim());\n\n  const content = lines.join('\\n').trim();\n\n  return {\n    ...title,\n    ...metadata,\n    content\n  };\n}\n\nexport const parseKindleHighlights = (content: string): Array<KindleBook> => {\n  const clippings = content.split(\/^==========$\/gm).filter(line => Boolean(line.trim())).map(parseClipping);\n  return clippings.reduce((result, clipping) => {\n    let book = result.find((b) => b.title === clipping.title && b.author === clipping.author);\n\n    if (!book) {\n      book = {\n        title: clipping.title,\n        author: clipping.author,\n        annotations: [],\n        lastAnnotation: clipping.timestamp\n      };\n      result.push(book);\n    }\n\n    if (book.lastAnnotation < clipping.timestamp) {\n      book.lastAnnotation = clipping.timestamp;\n    }\n\n    book.annotations.push({\n      content: clipping.content,\n      location: clipping.location,\n      timestamp: clipping.timestamp,\n      type: clipping.type,\n      page: clipping.page\n    });\n\n    return result;\n  }, [] as Array<KindleBook>)\n    \/\/ @ts-ignore\n    .sort((a, b) => b.lastAnnotation - a.lastAnnotation);\n}","avg_line_length":24.3555555556,"max_line_length":108,"alphanum_fraction":0.6301703163,"loc":104,"functions":8,"function_signatures":0,"function_parameters":10,"variable_declarations":25,"property_declarations":9,"function_usages":2,"trivial_types":0,"predefined_types":13,"type_definitions":4,"dynamism_heuristic":2,"loc_per_function":12.625,"estimated_tokens":898,"fun_ann_density":0.0200445434,"var_ann_density":0.0278396437,"prop_ann_density":0.0100222717,"typedef_density":0.004454343,"dynamism_density":0.0022271715,"trivial_density":0.0,"predefined_density":0.25,"metric":0.3149801554,"content_without_annotations":"\nexport type AnnotationType = 'Highlight' | 'Note' | 'Bookmark';\n\nexport interface KindleAnnotation {\n  timestamp;\n  type;\n  content?;\n  page?;\n  location\n}\n\nexport interface KindleBook extends BookMetadata {\n  lastAnnotation;\n  annotations;\n}\n\ninterface BookMetadata {\n  title;\n  author?;\n}\n\nexport const parseTitleLine = (titleLine) => {\n  const title = titleLine.replace(\/\\([^)]+\\)$\/g, '').trim();\n  const authorMatches = \/\\((?<author>[^)]+)\\)$\/g.exec(titleLine);\n\n  const author = authorMatches?.groups?.[\"author\"]?.trim();\n\n  return { title, author };\n}\n\nexport const parseMetaLine = (metaLine) => {\n  const typeRx = \/^- Your\\s(?<type>Note|Highlight|Bookmark)\/;\n  const pageRx = \/page\\s+(?<page>\\d+)\/;\n  const locationRx = \/Location\\s+(?<start>\\d+)(-(?<end>\\d+))?\/;\n  const timestampRx = \/Added on\\s+(?<timestamp>.*)$\/;\n\n  const type = typeRx.exec(metaLine)?.groups?.['type'];\n\n  const pageVal = pageRx.exec(metaLine)?.groups?.['page'];\n  let page;\n\n  if (pageVal) {\n    page = parseInt(pageVal);\n  }\n\n  const locationVal = locationRx.exec(metaLine)?.groups;\n\n  if (!locationVal) {\n    throw new Error(`Could not find location: ${metaLine}`);\n  }\n\n  let start;\n  let end;\n\n  if (locationVal['start']) {\n    start = parseInt(locationVal['start']);\n  }\n\n  if (locationVal['end']) {\n    end = parseInt(locationVal['end']);\n  }\n\n  let timestamp = new Date();\n\n  const timestampVal = timestampRx.exec(metaLine)?.groups?.['timestamp'];\n\n  if (timestampVal) {\n    timestamp = new Date(Date.parse(timestampVal));\n  }\n\n  return {\n    type,\n    page,\n    timestamp,\n    location: {\n      start,\n      end\n    }\n  } as KindleAnnotation;\n}\n\nexport const parseClipping = (clipping) => {\n  const lines = clipping.trim().split(\/\\n\/);\n  \n  if (lines.length < 2) {\n    throw new Error(`Could not parse clipping, not enough lines: ${clipping}`);\n  }\n\n  const title = parseTitleLine(lines.shift()!.trim());\n  const metadata = parseMetaLine(lines.shift()!.trim());\n\n  const content = lines.join('\\n').trim();\n\n  return {\n    ...title,\n    ...metadata,\n    content\n  };\n}\n\nexport const parseKindleHighlights = (content) => {\n  const clippings = content.split(\/^==========$\/gm).filter(line => Boolean(line.trim())).map(parseClipping);\n  return clippings.reduce((result, clipping) => {\n    let book = result.find((b) => b.title === clipping.title && b.author === clipping.author);\n\n    if (!book) {\n      book = {\n        title: clipping.title,\n        author: clipping.author,\n        annotations: [],\n        lastAnnotation: clipping.timestamp\n      };\n      result.push(book);\n    }\n\n    if (book.lastAnnotation < clipping.timestamp) {\n      book.lastAnnotation = clipping.timestamp;\n    }\n\n    book.annotations.push({\n      content: clipping.content,\n      location: clipping.location,\n      timestamp: clipping.timestamp,\n      type: clipping.type,\n      page: clipping.page\n    });\n\n    return result;\n  }, [] as Array<KindleBook>)\n    \/\/ @ts-ignore\n    .sort((a, b) => b.lastAnnotation - a.lastAnnotation);\n}"}
{"hexsha":"6098211daafdab1fe8de0c09c0ecd62b337844c8","size":10563,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"lib\/index.ts","max_stars_repo_name":"princess-rosella\/spu-md5","max_stars_repo_head_hexsha":"ddfae1ee439a5e7238e23a5f2c66f80d94aab651","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2021-12-31T03:11:45.000Z","max_stars_repo_stars_event_max_datetime":"2021-12-31T03:11:45.000Z","max_issues_repo_path":"lib\/index.ts","max_issues_repo_name":"princess-rosella\/spu-md5","max_issues_repo_head_hexsha":"ddfae1ee439a5e7238e23a5f2c66f80d94aab651","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"lib\/index.ts","max_forks_repo_name":"princess-rosella\/spu-md5","max_forks_repo_head_hexsha":"ddfae1ee439a5e7238e23a5f2c66f80d94aab651","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/*\n * Copyright (c) 2018 Princess Rosella. All rights reserved.\n *\n * @LICENSE_HEADER_START@\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @LICENSE_HEADER_END@\n *\/\n\nexport const BLOCK_SIZE   = 64;\nexport const BLOCK_LENGTH = 16;\n\nconst isLittleEndian = new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x78;\n\nconst rotl = function(n: number, b: number): number {\n    return (n << b) | (n >>> (32 - b));\n};\n\nconst swab32s = function(n: number): number {\n    return (rotl(n, 8) & 0x00FF00FF) | (rotl(n, 24) & 0xFF00FF00);\n};\n\nconst le32_to_cpu_uint32array = function(array: Uint32Array) {\n    if (isLittleEndian)\n        return;\n\n    for (let i = 0; i < array.length; i++)\n        array[i] = swab32s(array[i]);\n};\n\nconst cpu_to_le32_uint32array = function(array: Uint32Array) {\n    if (isLittleEndian)\n        return;\n\n    for (let i = 0; i < array.length; i++)\n        array[i] = swab32s(array[i]);\n};\n\nconst memcpy = function(dest: Uint8Array, destOffset: number, src: Uint8Array, srcOffset: number, length: number): void {\n    dest.set(src.subarray(srcOffset, srcOffset + length), destOffset);\n};\n\nconst bzero = function(dest: Uint8Array, offset: number, length: number): void {\n    while (length--)\n        dest[offset++] = 0;\n}\n\nconst FF = function(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\n    const n = a + (b & c | ~b & d) + (x >>> 0) + t;\n    return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst GG = function(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\n    const n = a + (b & d | c & ~d) + (x >>> 0) + t;\n    return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst HH = function(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\n    const n = a + (b ^ c ^ d) + (x >>> 0) + t;\n    return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst II = function(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\n    const n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\n    return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst transform = function(block: Uint32Array, hash: Uint32Array) {\n    const aa = hash[0];\n    const bb = hash[1];\n    const cc = hash[2];\n    const dd = hash[3];\n    let   a  = aa;\n    let   b  = bb;\n    let   c  = cc;\n    let   d  = dd;\n\n    a = FF(a, b, c, d, block[ 0],  7, -680876936);\n    d = FF(d, a, b, c, block[ 1], 12, -389564586);\n    c = FF(c, d, a, b, block[ 2], 17,  606105819);\n    b = FF(b, c, d, a, block[ 3], 22, -1044525330);\n    a = FF(a, b, c, d, block[ 4],  7, -176418897);\n    d = FF(d, a, b, c, block[ 5], 12,  1200080426);\n    c = FF(c, d, a, b, block[ 6], 17, -1473231341);\n    b = FF(b, c, d, a, block[ 7], 22, -45705983);\n    a = FF(a, b, c, d, block[ 8],  7,  1770035416);\n    d = FF(d, a, b, c, block[ 9], 12, -1958414417);\n    c = FF(c, d, a, b, block[10], 17, -42063);\n    b = FF(b, c, d, a, block[11], 22, -1990404162);\n    a = FF(a, b, c, d, block[12],  7,  1804603682);\n    d = FF(d, a, b, c, block[13], 12, -40341101);\n    c = FF(c, d, a, b, block[14], 17, -1502002290);\n    b = FF(b, c, d, a, block[15], 22,  1236535329);\n\n    a = GG(a, b, c, d, block[ 1]|0,  5, -165796510);\n    d = GG(d, a, b, c, block[ 6]|0,  9, -1069501632);\n    c = GG(c, d, a, b, block[11]|0, 14,  643717713);\n    b = GG(b, c, d, a, block[ 0]|0, 20, -373897302);\n    a = GG(a, b, c, d, block[ 5]|0,  5, -701558691);\n    d = GG(d, a, b, c, block[10]|0,  9,  38016083);\n    c = GG(c, d, a, b, block[15]|0, 14, -660478335);\n    b = GG(b, c, d, a, block[ 4]|0, 20, -405537848);\n    a = GG(a, b, c, d, block[ 9]|0,  5,  568446438);\n    d = GG(d, a, b, c, block[14]|0,  9, -1019803690);\n    c = GG(c, d, a, b, block[ 3]|0, 14, -187363961);\n    b = GG(b, c, d, a, block[ 8]|0, 20,  1163531501);\n    a = GG(a, b, c, d, block[13]|0,  5, -1444681467);\n    d = GG(d, a, b, c, block[ 2]|0,  9, -51403784);\n    c = GG(c, d, a, b, block[ 7]|0, 14,  1735328473);\n    b = GG(b, c, d, a, block[12]|0, 20, -1926607734);\n\n    a = HH(a, b, c, d, block[ 5]|0,  4, -378558);\n    d = HH(d, a, b, c, block[ 8]|0, 11, -2022574463);\n    c = HH(c, d, a, b, block[11]|0, 16,  1839030562);\n    b = HH(b, c, d, a, block[14]|0, 23, -35309556);\n    a = HH(a, b, c, d, block[ 1]|0,  4, -1530992060);\n    d = HH(d, a, b, c, block[ 4]|0, 11,  1272893353);\n    c = HH(c, d, a, b, block[ 7]|0, 16, -155497632);\n    b = HH(b, c, d, a, block[10]|0, 23, -1094730640);\n    a = HH(a, b, c, d, block[13]|0,  4,  681279174);\n    d = HH(d, a, b, c, block[ 0]|0, 11, -358537222);\n    c = HH(c, d, a, b, block[ 3]|0, 16, -722521979);\n    b = HH(b, c, d, a, block[ 6]|0, 23,  76029189);\n    a = HH(a, b, c, d, block[ 9]|0,  4, -640364487);\n    d = HH(d, a, b, c, block[12]|0, 11, -421815835);\n    c = HH(c, d, a, b, block[15]|0, 16,  530742520);\n    b = HH(b, c, d, a, block[ 2]|0, 23, -995338651);\n\n    a = II(a, b, c, d, block[ 0]|0,  6, -198630844);\n    d = II(d, a, b, c, block[ 7]|0, 10,  1126891415);\n    c = II(c, d, a, b, block[14]|0, 15, -1416354905);\n    b = II(b, c, d, a, block[ 5]|0, 21, -57434055);\n    a = II(a, b, c, d, block[12]|0,  6,  1700485571);\n    d = II(d, a, b, c, block[ 3]|0, 10, -1894986606);\n    c = II(c, d, a, b, block[10]|0, 15, -1051523);\n    b = II(b, c, d, a, block[ 1]|0, 21, -2054922799);\n    a = II(a, b, c, d, block[ 8]|0,  6,  1873313359);\n    d = II(d, a, b, c, block[15]|0, 10, -30611744);\n    c = II(c, d, a, b, block[ 6]|0, 15, -1560198380);\n    b = II(b, c, d, a, block[13]|0, 21,  1309151649);\n    a = II(a, b, c, d, block[ 4]|0,  6, -145523070);\n    d = II(d, a, b, c, block[11]|0, 10, -1120210379);\n    c = II(c, d, a, b, block[ 2]|0, 15,  718787259);\n    b = II(b, c, d, a, block[ 9]|0, 21, -343485551);\n\n    hash[0] = (a + aa) >>> 0;\n    hash[1] = (b + bb) >>> 0;\n    hash[2] = (c + cc) >>> 0;\n    hash[3] = (d + dd) >>> 0;\n};\n\n\/**\n * MD5 message-digest algorithm\n *\/\nexport class MD5 {\n    private hash  = new Uint32Array([1732584193, -271733879, -1732584194, 271733878]);\n    private block = new Uint32Array(16);\n    private block8: Uint8Array;\n    private byteCount = 0;\n\n    constructor() {\n        this.block8 = new Uint8Array(this.block.buffer, this.block.byteOffset, this.block.byteLength);\n    }\n\n    \/**\n     * Dynamic version of MD5.update that accepts different types to binary data as parameters.\n     * \n     * @param data Data to hash\n     * @see MD5.update\n     *\/\n    dynamicUpdate(data: Uint8Array | DataView | ArrayBuffer): void {\n        if (data instanceof DataView)\n            data = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n        else if (data instanceof ArrayBuffer)\n            data = new Uint8Array(data);\n\n        if (!(data instanceof Uint8Array))\n            throw new Error(`Expected a Uint8Array, a DataView or an ArrayBuffer. Received ${data.constructor.name}`);\n\n        return this.update(data);\n    }\n\n    \/**\n     * Process an array of bytes to hash.\n     * \n     * @param data Bytes to hash\n     *\/\n    update(data: Uint8Array): void {\n        const avail  = (BLOCK_SIZE - (this.byteCount & 0x3f))|0;\n        let   length = data.length;\n\n        this.byteCount += length;\n\n        if (avail > length) {\n            memcpy(this.block8, BLOCK_SIZE - avail, data, 0, length);\n            return;\n        }\n\n        memcpy(this.block8, BLOCK_SIZE - avail, data, 0, avail);\n        this.transformHelper();\n\n        let offset = avail;\n        length -= avail;\n\n        while (length >= BLOCK_SIZE) {\n            memcpy(this.block8, 0, data, offset, BLOCK_SIZE);\n            this.transformHelper();\n            offset += BLOCK_SIZE;\n            length -= BLOCK_SIZE;\n        }\n\n        memcpy(this.block8, 0, data, offset, length);\n    }\n\n    \/**\n     * Produce the hash as a sequence of 16 bytes.\n     *\/\n    toUint8Array(): Uint8Array {\n        const offset  = this.byteCount & 0x3f;\n        let   p       = offset;\n        let   padding = 56 - (offset + 1);\n\n        const block8  = this.block8.slice(0);\n        const block   = new Uint32Array(block8.buffer);\n        const hash    = this.hash.slice(0);\n\n        block8[p++] = 0x80;\n        if (padding < 0) {\n            bzero(block8, p, padding + 8);\n\n            if (!isLittleEndian)\n                le32_to_cpu_uint32array(block);\n\n            transform(block, hash);\n            p       = 0;\n            padding = 56;\n        }\n\n        bzero(block8, p, padding);\n        block[14] = this.byteCount << 3;\n        block[15] = this.byteCount >>> 29;\n\n        if (!isLittleEndian) {\n            le32_to_cpu_uint32array(block.subarray(0, BLOCK_LENGTH - 2));\n            transform(block, hash);\n            cpu_to_le32_uint32array(hash);\n        }\n        else {\n            transform(block, hash);\n        }\n        \n        return new Uint8Array(hash.buffer);\n    }\n\n    \/**\n     * Produce the hash as string in hexadecimal format.\n     *\/\n    toString(): string {\n        let   hex        = \"\";\n        const hash       = this.toUint8Array();\n        const hashLength = hash.byteLength;\n\n        for (let i = 0; i < hashLength; i++) {\n            hex += ((hash[i] >>> 4)  & 0xF).toString(16);\n            hex += ((hash[i] >>> 0)  & 0xF).toString(16);\n        }\n\n        return hex;\n    }\n\n    private transformHelper() {\n        if (!isLittleEndian)\n            le32_to_cpu_uint32array(this.block);\n\n        return transform(this.block, this.hash);\n    }\n\n    static process(data: Uint8Array | DataView | ArrayBuffer): string {\n        const md5 = new MD5();\n        md5.dynamicUpdate(data);\n        return md5.toString();\n    }\n}\n","avg_line_length":35.0930232558,"max_line_length":121,"alphanum_fraction":0.5476663827,"loc":209,"functions":18,"function_signatures":0,"function_parameters":46,"variable_declarations":42,"property_declarations":4,"function_usages":16,"trivial_types":0,"predefined_types":48,"type_definitions":1,"dynamism_heuristic":3,"loc_per_function":9.1111111111,"estimated_tokens":4421,"fun_ann_density":0.0144763628,"var_ann_density":0.0095001131,"prop_ann_density":0.0009047727,"typedef_density":0.0002261932,"dynamism_density":0.0006785795,"trivial_density":0.0,"predefined_density":0.4363636364,"metric":0.2387452822,"content_without_annotations":"\/*\n * Copyright (c) 2018 Princess Rosella. All rights reserved.\n *\n * @LICENSE_HEADER_START@\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @LICENSE_HEADER_END@\n *\/\n\nexport const BLOCK_SIZE   = 64;\nexport const BLOCK_LENGTH = 16;\n\nconst isLittleEndian = new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x78;\n\nconst rotl = function(n, b) {\n    return (n << b) | (n >>> (32 - b));\n};\n\nconst swab32s = function(n) {\n    return (rotl(n, 8) & 0x00FF00FF) | (rotl(n, 24) & 0xFF00FF00);\n};\n\nconst le32_to_cpu_uint32array = function(array) {\n    if (isLittleEndian)\n        return;\n\n    for (let i = 0; i < array.length; i++)\n        array[i] = swab32s(array[i]);\n};\n\nconst cpu_to_le32_uint32array = function(array) {\n    if (isLittleEndian)\n        return;\n\n    for (let i = 0; i < array.length; i++)\n        array[i] = swab32s(array[i]);\n};\n\nconst memcpy = function(dest, destOffset, src, srcOffset, length) {\n    dest.set(src.subarray(srcOffset, srcOffset + length), destOffset);\n};\n\nconst bzero = function(dest, offset, length) {\n    while (length--)\n        dest[offset++] = 0;\n}\n\nconst FF = function(a, b, c, d, x, s, t) {\n    const n = a + (b & c | ~b & d) + (x >>> 0) + t;\n    return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst GG = function(a, b, c, d, x, s, t) {\n    const n = a + (b & d | c & ~d) + (x >>> 0) + t;\n    return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst HH = function(a, b, c, d, x, s, t) {\n    const n = a + (b ^ c ^ d) + (x >>> 0) + t;\n    return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst II = function(a, b, c, d, x, s, t) {\n    const n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\n    return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst transform = function(block, hash) {\n    const aa = hash[0];\n    const bb = hash[1];\n    const cc = hash[2];\n    const dd = hash[3];\n    let   a  = aa;\n    let   b  = bb;\n    let   c  = cc;\n    let   d  = dd;\n\n    a = FF(a, b, c, d, block[ 0],  7, -680876936);\n    d = FF(d, a, b, c, block[ 1], 12, -389564586);\n    c = FF(c, d, a, b, block[ 2], 17,  606105819);\n    b = FF(b, c, d, a, block[ 3], 22, -1044525330);\n    a = FF(a, b, c, d, block[ 4],  7, -176418897);\n    d = FF(d, a, b, c, block[ 5], 12,  1200080426);\n    c = FF(c, d, a, b, block[ 6], 17, -1473231341);\n    b = FF(b, c, d, a, block[ 7], 22, -45705983);\n    a = FF(a, b, c, d, block[ 8],  7,  1770035416);\n    d = FF(d, a, b, c, block[ 9], 12, -1958414417);\n    c = FF(c, d, a, b, block[10], 17, -42063);\n    b = FF(b, c, d, a, block[11], 22, -1990404162);\n    a = FF(a, b, c, d, block[12],  7,  1804603682);\n    d = FF(d, a, b, c, block[13], 12, -40341101);\n    c = FF(c, d, a, b, block[14], 17, -1502002290);\n    b = FF(b, c, d, a, block[15], 22,  1236535329);\n\n    a = GG(a, b, c, d, block[ 1]|0,  5, -165796510);\n    d = GG(d, a, b, c, block[ 6]|0,  9, -1069501632);\n    c = GG(c, d, a, b, block[11]|0, 14,  643717713);\n    b = GG(b, c, d, a, block[ 0]|0, 20, -373897302);\n    a = GG(a, b, c, d, block[ 5]|0,  5, -701558691);\n    d = GG(d, a, b, c, block[10]|0,  9,  38016083);\n    c = GG(c, d, a, b, block[15]|0, 14, -660478335);\n    b = GG(b, c, d, a, block[ 4]|0, 20, -405537848);\n    a = GG(a, b, c, d, block[ 9]|0,  5,  568446438);\n    d = GG(d, a, b, c, block[14]|0,  9, -1019803690);\n    c = GG(c, d, a, b, block[ 3]|0, 14, -187363961);\n    b = GG(b, c, d, a, block[ 8]|0, 20,  1163531501);\n    a = GG(a, b, c, d, block[13]|0,  5, -1444681467);\n    d = GG(d, a, b, c, block[ 2]|0,  9, -51403784);\n    c = GG(c, d, a, b, block[ 7]|0, 14,  1735328473);\n    b = GG(b, c, d, a, block[12]|0, 20, -1926607734);\n\n    a = HH(a, b, c, d, block[ 5]|0,  4, -378558);\n    d = HH(d, a, b, c, block[ 8]|0, 11, -2022574463);\n    c = HH(c, d, a, b, block[11]|0, 16,  1839030562);\n    b = HH(b, c, d, a, block[14]|0, 23, -35309556);\n    a = HH(a, b, c, d, block[ 1]|0,  4, -1530992060);\n    d = HH(d, a, b, c, block[ 4]|0, 11,  1272893353);\n    c = HH(c, d, a, b, block[ 7]|0, 16, -155497632);\n    b = HH(b, c, d, a, block[10]|0, 23, -1094730640);\n    a = HH(a, b, c, d, block[13]|0,  4,  681279174);\n    d = HH(d, a, b, c, block[ 0]|0, 11, -358537222);\n    c = HH(c, d, a, b, block[ 3]|0, 16, -722521979);\n    b = HH(b, c, d, a, block[ 6]|0, 23,  76029189);\n    a = HH(a, b, c, d, block[ 9]|0,  4, -640364487);\n    d = HH(d, a, b, c, block[12]|0, 11, -421815835);\n    c = HH(c, d, a, b, block[15]|0, 16,  530742520);\n    b = HH(b, c, d, a, block[ 2]|0, 23, -995338651);\n\n    a = II(a, b, c, d, block[ 0]|0,  6, -198630844);\n    d = II(d, a, b, c, block[ 7]|0, 10,  1126891415);\n    c = II(c, d, a, b, block[14]|0, 15, -1416354905);\n    b = II(b, c, d, a, block[ 5]|0, 21, -57434055);\n    a = II(a, b, c, d, block[12]|0,  6,  1700485571);\n    d = II(d, a, b, c, block[ 3]|0, 10, -1894986606);\n    c = II(c, d, a, b, block[10]|0, 15, -1051523);\n    b = II(b, c, d, a, block[ 1]|0, 21, -2054922799);\n    a = II(a, b, c, d, block[ 8]|0,  6,  1873313359);\n    d = II(d, a, b, c, block[15]|0, 10, -30611744);\n    c = II(c, d, a, b, block[ 6]|0, 15, -1560198380);\n    b = II(b, c, d, a, block[13]|0, 21,  1309151649);\n    a = II(a, b, c, d, block[ 4]|0,  6, -145523070);\n    d = II(d, a, b, c, block[11]|0, 10, -1120210379);\n    c = II(c, d, a, b, block[ 2]|0, 15,  718787259);\n    b = II(b, c, d, a, block[ 9]|0, 21, -343485551);\n\n    hash[0] = (a + aa) >>> 0;\n    hash[1] = (b + bb) >>> 0;\n    hash[2] = (c + cc) >>> 0;\n    hash[3] = (d + dd) >>> 0;\n};\n\n\/**\n * MD5 message-digest algorithm\n *\/\nexport class MD5 {\n    private hash  = new Uint32Array([1732584193, -271733879, -1732584194, 271733878]);\n    private block = new Uint32Array(16);\n    private block8;\n    private byteCount = 0;\n\n    constructor() {\n        this.block8 = new Uint8Array(this.block.buffer, this.block.byteOffset, this.block.byteLength);\n    }\n\n    \/**\n     * Dynamic version of MD5.update that accepts different types to binary data as parameters.\n     * \n     * @param data Data to hash\n     * @see MD5.update\n     *\/\n    dynamicUpdate(data) {\n        if (data instanceof DataView)\n            data = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n        else if (data instanceof ArrayBuffer)\n            data = new Uint8Array(data);\n\n        if (!(data instanceof Uint8Array))\n            throw new Error(`Expected a Uint8Array, a DataView or an ArrayBuffer. Received ${data.constructor.name}`);\n\n        return this.update(data);\n    }\n\n    \/**\n     * Process an array of bytes to hash.\n     * \n     * @param data Bytes to hash\n     *\/\n    update(data) {\n        const avail  = (BLOCK_SIZE - (this.byteCount & 0x3f))|0;\n        let   length = data.length;\n\n        this.byteCount += length;\n\n        if (avail > length) {\n            memcpy(this.block8, BLOCK_SIZE - avail, data, 0, length);\n            return;\n        }\n\n        memcpy(this.block8, BLOCK_SIZE - avail, data, 0, avail);\n        this.transformHelper();\n\n        let offset = avail;\n        length -= avail;\n\n        while (length >= BLOCK_SIZE) {\n            memcpy(this.block8, 0, data, offset, BLOCK_SIZE);\n            this.transformHelper();\n            offset += BLOCK_SIZE;\n            length -= BLOCK_SIZE;\n        }\n\n        memcpy(this.block8, 0, data, offset, length);\n    }\n\n    \/**\n     * Produce the hash as a sequence of 16 bytes.\n     *\/\n    toUint8Array() {\n        const offset  = this.byteCount & 0x3f;\n        let   p       = offset;\n        let   padding = 56 - (offset + 1);\n\n        const block8  = this.block8.slice(0);\n        const block   = new Uint32Array(block8.buffer);\n        const hash    = this.hash.slice(0);\n\n        block8[p++] = 0x80;\n        if (padding < 0) {\n            bzero(block8, p, padding + 8);\n\n            if (!isLittleEndian)\n                le32_to_cpu_uint32array(block);\n\n            transform(block, hash);\n            p       = 0;\n            padding = 56;\n        }\n\n        bzero(block8, p, padding);\n        block[14] = this.byteCount << 3;\n        block[15] = this.byteCount >>> 29;\n\n        if (!isLittleEndian) {\n            le32_to_cpu_uint32array(block.subarray(0, BLOCK_LENGTH - 2));\n            transform(block, hash);\n            cpu_to_le32_uint32array(hash);\n        }\n        else {\n            transform(block, hash);\n        }\n        \n        return new Uint8Array(hash.buffer);\n    }\n\n    \/**\n     * Produce the hash as string in hexadecimal format.\n     *\/\n    toString() {\n        let   hex        = \"\";\n        const hash       = this.toUint8Array();\n        const hashLength = hash.byteLength;\n\n        for (let i = 0; i < hashLength; i++) {\n            hex += ((hash[i] >>> 4)  & 0xF).toString(16);\n            hex += ((hash[i] >>> 0)  & 0xF).toString(16);\n        }\n\n        return hex;\n    }\n\n    private transformHelper() {\n        if (!isLittleEndian)\n            le32_to_cpu_uint32array(this.block);\n\n        return transform(this.block, this.hash);\n    }\n\n    static process(data) {\n        const md5 = new MD5();\n        md5.dynamicUpdate(data);\n        return md5.toString();\n    }\n}\n"}
{"hexsha":"67c92204927aafe048bd5e567c068990724074a8","size":4166,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"app\/src\/services\/JSUniverse.ts","max_stars_repo_name":"rob893\/algo-visualizer","max_stars_repo_head_hexsha":"143315e1d0158bf32933ec58724a7b7e44c1bcfa","max_stars_repo_licenses":["MIT"],"max_stars_count":3.0,"max_stars_repo_stars_event_min_datetime":"2022-01-29T20:51:18.000Z","max_stars_repo_stars_event_max_datetime":"2022-02-14T00:02:13.000Z","max_issues_repo_path":"app\/src\/services\/JSUniverse.ts","max_issues_repo_name":"rob893\/algo-visualizer","max_issues_repo_head_hexsha":"143315e1d0158bf32933ec58724a7b7e44c1bcfa","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"app\/src\/services\/JSUniverse.ts","max_forks_repo_name":"rob893\/algo-visualizer","max_forks_repo_head_hexsha":"143315e1d0158bf32933ec58724a7b7e44c1bcfa","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"interface JSNode {\n  x: number;\n  y: number;\n  weight: number;\n  passable: boolean;\n}\n\ninterface PathResult {\n  path: JSNode[];\n  processed: JSNode[];\n}\n\n\/\/ For use to compare performance with web assembly only.\n\/\/ Not used for more than comparing at this time.\nexport class JSUniverse {\n  public readonly width: number;\n\n  public readonly height: number;\n\n  private readonly nodes: JSNode[][] = [];\n\n  public constructor(width: number, height: number) {\n    for (let y = 0; y < height; y++) {\n      this.nodes.push([]);\n      for (let x = 0; x < width; x++) {\n        this.nodes[y].push({\n          x,\n          y,\n          weight: 0,\n          passable: true\n        });\n      }\n    }\n\n    this.width = width;\n    this.height = height;\n  }\n\n  public bfs(startX: number, startY: number, endX: number, endY: number): PathResult {\n    const result: PathResult = {\n      path: [],\n      processed: []\n    };\n\n    const frontier: JSNode[] = [];\n\n    const startNode = this.nodes[startY][startX];\n    const endNode = this.nodes[endY][endX];\n\n    const visited = new Set<JSNode>();\n    const cameFrom = new Map<JSNode, JSNode>();\n\n    visited.add(startNode);\n    frontier.unshift(startNode);\n\n    while (frontier.length > 0) {\n      const current = frontier.pop();\n\n      if (!current) {\n        throw new Error('Invalid');\n      }\n\n      result.processed.push(current);\n\n      if (current === endNode) {\n        return this.constructPath(result, cameFrom, endNode);\n      }\n\n      for (const neighbor of this.getNeighbors(current.x, current.y)) {\n        if (!visited.has(neighbor)) {\n          visited.add(neighbor);\n          cameFrom.set(neighbor, current);\n          frontier.unshift(neighbor);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  public dijkstra(startX: number, startY: number, endX: number, endY: number): PathResult {\n    const result: PathResult = {\n      path: [],\n      processed: []\n    };\n\n    const frontier = this.nodes.flat();\n\n    const startNode = this.nodes[startY][startX];\n    const endNode = this.nodes[endY][endX];\n\n    const times = new Map<JSNode, number>();\n    const cameFrom = new Map<JSNode, JSNode>();\n\n    times.set(startNode, 0);\n\n    while (frontier.length > 0) {\n      const index = this.getClosestNode(frontier, times);\n      const current = frontier[index];\n      frontier.splice(index, 1);\n\n      result.processed.push(current);\n\n      if (current === endNode) {\n        return this.constructPath(result, cameFrom, endNode);\n      }\n\n      for (const neighbor of this.getNeighbors(current.x, current.y)) {\n        const prevTime = times.get(current) ?? Number.MAX_SAFE_INTEGER;\n        const newTime = prevTime + neighbor.weight + 1;\n\n        if (newTime < (times.get(neighbor) ?? Number.MAX_SAFE_INTEGER)) {\n          times.set(neighbor, newTime);\n          cameFrom.set(neighbor, current);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  private getClosestNode(nodes: JSNode[], times: Map<JSNode, number>): number {\n    let currClosetsIndex = 0;\n\n    for (let i = 0; i < nodes.length; i++) {\n      if (\n        (times.get(nodes[currClosetsIndex]) ?? Number.MAX_SAFE_INTEGER) >\n        (times.get(nodes[i]) ?? Number.MAX_SAFE_INTEGER)\n      ) {\n        currClosetsIndex = i;\n      }\n    }\n\n    return currClosetsIndex;\n  }\n\n  private getNeighbors(x: number, y: number): JSNode[] {\n    const res: JSNode[] = [];\n\n    if (y > 0 && this.nodes[y - 1][x].passable) {\n      res.push(this.nodes[y - 1][x]);\n    }\n\n    if (y < this.height - 1 && this.nodes[y + 1][x].passable) {\n      res.push(this.nodes[y + 1][x]);\n    }\n\n    if (x > 0 && this.nodes[y][x - 1].passable) {\n      res.push(this.nodes[y][x - 1]);\n    }\n\n    if (x < this.width - 1 && this.nodes[y][x + 1].passable) {\n      res.push(this.nodes[y][x + 1]);\n    }\n\n    return res;\n  }\n\n  private constructPath(result: PathResult, cameFrom: Map<JSNode, JSNode>, endNode: JSNode): PathResult {\n    let current = endNode;\n    result.path.push(current);\n\n    let next = cameFrom.get(current);\n\n    while (next) {\n      current = next;\n      result.path.push(current);\n      next = cameFrom.get(current);\n    }\n\n    result.path.reverse();\n\n    return result;\n  }\n}\n","avg_line_length":23.6704545455,"max_line_length":105,"alphanum_fraction":0.584493519,"loc":131,"functions":6,"function_signatures":0,"function_parameters":17,"variable_declarations":24,"property_declarations":9,"function_usages":3,"trivial_types":0,"predefined_types":21,"type_definitions":3,"dynamism_heuristic":0,"loc_per_function":17.3333333333,"estimated_tokens":1204,"fun_ann_density":0.01910299,"var_ann_density":0.0199335548,"prop_ann_density":0.0074750831,"typedef_density":0.0024916944,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.375,"metric":0.2842241164,"content_without_annotations":"interface JSNode {\n  x;\n  y;\n  weight;\n  passable;\n}\n\ninterface PathResult {\n  path;\n  processed;\n}\n\n\/\/ For use to compare performance with web assembly only.\n\/\/ Not used for more than comparing at this time.\nexport class JSUniverse {\n  public readonly width;\n\n  public readonly height;\n\n  private readonly nodes = [];\n\n  public constructor(width, height) {\n    for (let y = 0; y < height; y++) {\n      this.nodes.push([]);\n      for (let x = 0; x < width; x++) {\n        this.nodes[y].push({\n          x,\n          y,\n          weight: 0,\n          passable: true\n        });\n      }\n    }\n\n    this.width = width;\n    this.height = height;\n  }\n\n  public bfs(startX, startY, endX, endY) {\n    const result = {\n      path: [],\n      processed: []\n    };\n\n    const frontier = [];\n\n    const startNode = this.nodes[startY][startX];\n    const endNode = this.nodes[endY][endX];\n\n    const visited = new Set<JSNode>();\n    const cameFrom = new Map<JSNode, JSNode>();\n\n    visited.add(startNode);\n    frontier.unshift(startNode);\n\n    while (frontier.length > 0) {\n      const current = frontier.pop();\n\n      if (!current) {\n        throw new Error('Invalid');\n      }\n\n      result.processed.push(current);\n\n      if (current === endNode) {\n        return this.constructPath(result, cameFrom, endNode);\n      }\n\n      for (const neighbor of this.getNeighbors(current.x, current.y)) {\n        if (!visited.has(neighbor)) {\n          visited.add(neighbor);\n          cameFrom.set(neighbor, current);\n          frontier.unshift(neighbor);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  public dijkstra(startX, startY, endX, endY) {\n    const result = {\n      path: [],\n      processed: []\n    };\n\n    const frontier = this.nodes.flat();\n\n    const startNode = this.nodes[startY][startX];\n    const endNode = this.nodes[endY][endX];\n\n    const times = new Map<JSNode, number>();\n    const cameFrom = new Map<JSNode, JSNode>();\n\n    times.set(startNode, 0);\n\n    while (frontier.length > 0) {\n      const index = this.getClosestNode(frontier, times);\n      const current = frontier[index];\n      frontier.splice(index, 1);\n\n      result.processed.push(current);\n\n      if (current === endNode) {\n        return this.constructPath(result, cameFrom, endNode);\n      }\n\n      for (const neighbor of this.getNeighbors(current.x, current.y)) {\n        const prevTime = times.get(current) ?? Number.MAX_SAFE_INTEGER;\n        const newTime = prevTime + neighbor.weight + 1;\n\n        if (newTime < (times.get(neighbor) ?? Number.MAX_SAFE_INTEGER)) {\n          times.set(neighbor, newTime);\n          cameFrom.set(neighbor, current);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  private getClosestNode(nodes, times) {\n    let currClosetsIndex = 0;\n\n    for (let i = 0; i < nodes.length; i++) {\n      if (\n        (times.get(nodes[currClosetsIndex]) ?? Number.MAX_SAFE_INTEGER) >\n        (times.get(nodes[i]) ?? Number.MAX_SAFE_INTEGER)\n      ) {\n        currClosetsIndex = i;\n      }\n    }\n\n    return currClosetsIndex;\n  }\n\n  private getNeighbors(x, y) {\n    const res = [];\n\n    if (y > 0 && this.nodes[y - 1][x].passable) {\n      res.push(this.nodes[y - 1][x]);\n    }\n\n    if (y < this.height - 1 && this.nodes[y + 1][x].passable) {\n      res.push(this.nodes[y + 1][x]);\n    }\n\n    if (x > 0 && this.nodes[y][x - 1].passable) {\n      res.push(this.nodes[y][x - 1]);\n    }\n\n    if (x < this.width - 1 && this.nodes[y][x + 1].passable) {\n      res.push(this.nodes[y][x + 1]);\n    }\n\n    return res;\n  }\n\n  private constructPath(result, cameFrom, endNode) {\n    let current = endNode;\n    result.path.push(current);\n\n    let next = cameFrom.get(current);\n\n    while (next) {\n      current = next;\n      result.path.push(current);\n      next = cameFrom.get(current);\n    }\n\n    result.path.reverse();\n\n    return result;\n  }\n}\n"}
{"hexsha":"ca95641b386ab877b6192cfe0a801386bd5872da","size":3124,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/index.ts","max_stars_repo_name":"murugaratham\/nricvalidator","max_stars_repo_head_hexsha":"deb92034dcb7440a62f3ca7140d70477dddad7fd","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"src\/index.ts","max_issues_repo_name":"murugaratham\/nricvalidator","max_issues_repo_head_hexsha":"deb92034dcb7440a62f3ca7140d70477dddad7fd","max_issues_repo_licenses":["MIT"],"max_issues_count":1.0,"max_issues_repo_issues_event_min_datetime":"2022-03-30T11:14:33.000Z","max_issues_repo_issues_event_max_datetime":"2022-03-30T11:14:33.000Z","max_forks_repo_path":"src\/index.ts","max_forks_repo_name":"murugaratham\/nricvalidator","max_forks_repo_head_hexsha":"deb92034dcb7440a62f3ca7140d70477dddad7fd","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/\/why? look @ http:\/\/www.ngiam.net\/NRIC\/NRIC_numbers.pdf deeper.\nconst offsetMap = new Map([\n  [\"T\", 4],\n  [\"G\", 4],\n  [\"M\", 3],\n]);\n\n\/**\n *\n * @param idToCheck {string} identification number to check\n * @returns {boolean} validation results\n *\/\nexport const validate = (idToCheck: string): boolean => {\n  \/\/short circuit evaulation\n  if (idToCheck.length !== 9) {\n    return false;\n  }\n\n  const { valid } = tryGetChecksum(idToCheck); \/\/ sum them up\n  return valid;\n};\n\nexport const generate = (partialSeedId?: string) => {\n  const legalStartingCharacters = [\"S\", \"T\", \"F\", \"G\", \"M\"];\n  if (partialSeedId) {\n    const hasLegalStartingCharacter = legalStartingCharacters.some((legalStartingCharacter) =>\n      partialSeedId.charAt(0).toUpperCase().startsWith(legalStartingCharacter),\n    );\n    if (!hasLegalStartingCharacter) {\n      throw new Error(\"Invalid start character\");\n    } else {\n      const containsNumbersOnlyAfterFirst = !isNaN(Number(partialSeedId.substring(1, partialSeedId.length)));\n      if (!containsNumbersOnlyAfterFirst) {\n        throw new Error(\"Invalid seed id\");\n      }\n    }\n  }\n  const startChar =\n    (partialSeedId && partialSeedId.charAt(0)) || legalStartingCharacters[Math.floor(Math.random() * 4)];\n  let generatedId: string[] = (partialSeedId && partialSeedId.substring(1, partialSeedId.length).split(\"\")) || [];\n  while (generatedId.length !== 7) {\n    generatedId.push(Math.floor(Math.random() * 10) + \"\");\n  }\n\n  const { checksum } = tryGetChecksum(startChar + generatedId.join(\"\"));\n\n  return `${startChar}${generatedId.join(\"\")}${checksum}`.toUpperCase();\n};\n\/**\n *\n * @param idDigits {string[]} identification number to check\n * @returns weight\n *\/\nconst getWeights = (idDigits: string[]): number => {\n  let weights = [2, 7, 6, 5, 4, 3, 2]; \/\/ read: http:\/\/www.ngiam.net\/NRIC\/NRIC_numbers.pdf\n  return idDigits\n    .map((value, idx) => parseInt(value, 10) * weights[idx]) \/\/ multiply each digit with their respective weights\n    .reduce((prev: number, idDigit: number) => prev + idDigit);\n};\nconst tryGetChecksum = (idDigits: string): { checksum?: string; valid: boolean } => {\n  \/\/ checksum tables\n  const ST = [\"J\", \"Z\", \"I\", \"H\", \"G\", \"F\", \"E\", \"D\", \"C\", \"B\", \"A\"];\n  const FG = [\"X\", \"W\", \"U\", \"T\", \"R\", \"Q\", \"P\", \"N\", \"M\", \"L\", \"K\"];\n  const M = [\"X\", \"W\", \"U\", \"T\", \"R\", \"Q\", \"P\", \"N\", \"J\", \"L\", \"K\"];\n\n  const id = idDigits.split(\"\");\n  let [startChar, ...idArray] = id;\n  const endChar = idArray.length === 8 ? idArray.pop()!.toUpperCase() : \"\";\n  \/\/add offset by century prefix if required\n  const weight = (offsetMap.get(startChar.toUpperCase()) || 0) + getWeights(idArray);\n  const remainder = weight % 11;\n\n  startChar = startChar.toUpperCase();\n  if (startChar === \"S\" || startChar === \"T\") {\n    return { checksum: ST[remainder], valid: ST[remainder] === endChar };\n  } else if (startChar === \"F\" || startChar === \"G\") {\n    return { checksum: FG[remainder], valid: FG[remainder] === endChar };\n  } else if (startChar === \"M\") {\n    return { checksum: M[remainder], valid: M[remainder] === endChar };\n  } else {\n    return { checksum: undefined, valid: false };\n  }\n};\n","avg_line_length":37.1904761905,"max_line_length":114,"alphanum_fraction":0.6232394366,"loc":62,"functions":7,"function_signatures":0,"function_parameters":9,"variable_declarations":21,"property_declarations":0,"function_usages":2,"trivial_types":0,"predefined_types":11,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":7.4285714286,"estimated_tokens":948,"fun_ann_density":0.0168776371,"var_ann_density":0.0221518987,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.2972972973,"metric":0.2820397159,"content_without_annotations":"\/\/why? look @ http:\/\/www.ngiam.net\/NRIC\/NRIC_numbers.pdf deeper.\nconst offsetMap = new Map([\n  [\"T\", 4],\n  [\"G\", 4],\n  [\"M\", 3],\n]);\n\n\/**\n *\n * @param idToCheck {string} identification number to check\n * @returns {boolean} validation results\n *\/\nexport const validate = (idToCheck) => {\n  \/\/short circuit evaulation\n  if (idToCheck.length !== 9) {\n    return false;\n  }\n\n  const { valid } = tryGetChecksum(idToCheck); \/\/ sum them up\n  return valid;\n};\n\nexport const generate = (partialSeedId?) => {\n  const legalStartingCharacters = [\"S\", \"T\", \"F\", \"G\", \"M\"];\n  if (partialSeedId) {\n    const hasLegalStartingCharacter = legalStartingCharacters.some((legalStartingCharacter) =>\n      partialSeedId.charAt(0).toUpperCase().startsWith(legalStartingCharacter),\n    );\n    if (!hasLegalStartingCharacter) {\n      throw new Error(\"Invalid start character\");\n    } else {\n      const containsNumbersOnlyAfterFirst = !isNaN(Number(partialSeedId.substring(1, partialSeedId.length)));\n      if (!containsNumbersOnlyAfterFirst) {\n        throw new Error(\"Invalid seed id\");\n      }\n    }\n  }\n  const startChar =\n    (partialSeedId && partialSeedId.charAt(0)) || legalStartingCharacters[Math.floor(Math.random() * 4)];\n  let generatedId = (partialSeedId && partialSeedId.substring(1, partialSeedId.length).split(\"\")) || [];\n  while (generatedId.length !== 7) {\n    generatedId.push(Math.floor(Math.random() * 10) + \"\");\n  }\n\n  const { checksum } = tryGetChecksum(startChar + generatedId.join(\"\"));\n\n  return `${startChar}${generatedId.join(\"\")}${checksum}`.toUpperCase();\n};\n\/**\n *\n * @param idDigits {string[]} identification number to check\n * @returns weight\n *\/\nconst getWeights = (idDigits) => {\n  let weights = [2, 7, 6, 5, 4, 3, 2]; \/\/ read: http:\/\/www.ngiam.net\/NRIC\/NRIC_numbers.pdf\n  return idDigits\n    .map((value, idx) => parseInt(value, 10) * weights[idx]) \/\/ multiply each digit with their respective weights\n    .reduce((prev, idDigit) => prev + idDigit);\n};\nconst tryGetChecksum = (idDigits) => {\n  \/\/ checksum tables\n  const ST = [\"J\", \"Z\", \"I\", \"H\", \"G\", \"F\", \"E\", \"D\", \"C\", \"B\", \"A\"];\n  const FG = [\"X\", \"W\", \"U\", \"T\", \"R\", \"Q\", \"P\", \"N\", \"M\", \"L\", \"K\"];\n  const M = [\"X\", \"W\", \"U\", \"T\", \"R\", \"Q\", \"P\", \"N\", \"J\", \"L\", \"K\"];\n\n  const id = idDigits.split(\"\");\n  let [startChar, ...idArray] = id;\n  const endChar = idArray.length === 8 ? idArray.pop()!.toUpperCase() : \"\";\n  \/\/add offset by century prefix if required\n  const weight = (offsetMap.get(startChar.toUpperCase()) || 0) + getWeights(idArray);\n  const remainder = weight % 11;\n\n  startChar = startChar.toUpperCase();\n  if (startChar === \"S\" || startChar === \"T\") {\n    return { checksum: ST[remainder], valid: ST[remainder] === endChar };\n  } else if (startChar === \"F\" || startChar === \"G\") {\n    return { checksum: FG[remainder], valid: FG[remainder] === endChar };\n  } else if (startChar === \"M\") {\n    return { checksum: M[remainder], valid: M[remainder] === endChar };\n  } else {\n    return { checksum: undefined, valid: false };\n  }\n};\n"}
{"hexsha":"be6ce21d863494461463ab50a0cb4150d8233268","size":5299,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/reactivity\/effect.ts","max_stars_repo_name":"KesionX\/ue3","max_stars_repo_head_hexsha":"4c252a3ac55d3ac28d5101b5d0bec4ffe233dfbb","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-03-09T14:36:03.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-09T14:36:03.000Z","max_issues_repo_path":"src\/reactivity\/effect.ts","max_issues_repo_name":"KesionX\/mini-vue","max_issues_repo_head_hexsha":"4c252a3ac55d3ac28d5101b5d0bec4ffe233dfbb","max_issues_repo_licenses":["MIT"],"max_issues_count":1.0,"max_issues_repo_issues_event_min_datetime":"2022-03-21T17:21:51.000Z","max_issues_repo_issues_event_max_datetime":"2022-03-22T02:23:56.000Z","max_forks_repo_path":"src\/reactivity\/effect.ts","max_forks_repo_name":"KesionX\/mini-vue","max_forks_repo_head_hexsha":"4c252a3ac55d3ac28d5101b5d0bec4ffe233dfbb","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"export type EffectOptions = {\n    scheduler?: (fn: Function) => void;\n    lazy?: boolean;\n};\nexport type EffectFunction<T> = {\n    (): T;\n    deps: Set<Function>[];\n    options?: EffectOptions;\n};\nexport type TriggerType = \"ADD\" | \"SET\" | \"DELETE\";\nexport type TriggrtFunction = (\n    target: Record<string, any>,\n    key: PropertyKey,\n    ITERATE_KEY?: symbol,\n    MAP_KEY_ITERATE_KEY?: symbol,\n    type?: TriggerType,\n    newVal?: any\n) => void;\n\nlet activeEffect: undefined | EffectFunction<any>;\nconst bucket = new WeakMap<any, Map<PropertyKey, Set<EffectFunction<any>>>>();\nconst effectStack: EffectFunction<any>[] = [];\n\nexport function effect<T>(fn: () => T, options?: EffectOptions) {\n    const effectFn: EffectFunction<T> = () => {\n        \/\/ \u6e05\u9664\u4e4b\u524d\u7684effect\n        cleanup(effectFn);\n        activeEffect = effectFn;\n        \/\/ \u538b\u5165\u6808\u4e2d\n        effectStack.push(effectFn);\n        const res = fn();\n        effectStack.pop();\n        activeEffect = effectStack[effectStack.length - 1];\n        return res;\n    };\n    effectFn.deps = [] as Set<Function>[];\n    effectFn.options = options;\n    if (!options?.lazy) {\n        effectFn();\n    }\n    return effectFn;\n}\n\n\/**\n * \u6e05\u9664\u4e4b\u524d\u7684\u7ed1\u5b9a\uff0c\u7528\u4e8e\u5237\u65b0\u7ed1\u5b9aeffect\n * \u53ef\u89e3\u51b3\u5206\u652f\u5207\u6362\u95ee\u9898\u3001\u6bd4\u5982\u4e09\u5143\n * @param effectFn\n *\/\nfunction cleanup<T>(effectFn: EffectFunction<T>) {\n    for (let index = 0; index < effectFn.deps.length; index++) {\n        const deps = effectFn.deps[index];\n        deps.delete(effectFn);\n    }\n    effectFn.deps.length = 0;\n}\n\nexport function track(target: Record<string, any>, key: PropertyKey) {\n    if (!activeEffect) return;\n    \/\/ data or props\n    let depsMap = bucket.get(target);\n    if (!depsMap) {\n        bucket.set(target, (depsMap = new Map()));\n    }\n    \/\/ \u5c5e\u6027\u503c\u5bf9\u5e94\u7684set\uff0cset\u91cc\u53ef\u80fd\u5b58\u5728\u591a\u4e2aeffect\u51fd\u6570\n    let deps: Set<EffectFunction<any>> | undefined = depsMap.get(key);\n    if (!deps) {\n        depsMap.set(key, (deps = new Set()));\n    }\n    \/\/ \u5c5e\u6027\u5bf9\u5e94\u7684effect\u51fd\u6570\u3001effect\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u3001\u540c\u4e2a\u5219\u8986\u76d6\n    deps.add(activeEffect);\n    \/\/ \u5c06\u5f53\u524deffect\u6dfb\u52a0\u4f9d\u8d56\u7684effect\n    activeEffect.deps.push(deps);\n}\n\nexport function trigger(\n    target: Record<string, any>,\n    key: PropertyKey,\n    ITERATE_KEY?: symbol,\n    MAP_KEY_ITERATE_KEY?: symbol,\n    type?: TriggerType,\n    newVal?: any\n) {\n    const depsMap = bucket.get(target);\n    if (!depsMap) return;\n    \/\/ \u83b7\u53d6\u5bf9\u5e94\u503c\u7684\u6240\u6709 effects\n    const effects: Set<EffectFunction<any>> | undefined = depsMap.get(key);\n\n    \/\/ \u53d6\u5f97\u4e0eITERATE_KEY\u5173\u8054\u7684\u526f\u4f5c\u7528\u51fd\u6570\n    let iterateEffects: Set<EffectFunction<any>> | undefined;\n    if (ITERATE_KEY) {\n        iterateEffects = depsMap.get(ITERATE_KEY);\n    }\n\n    let mapKeyIterateEffects: Set<EffectFunction<any>> | undefined;\n    if (MAP_KEY_ITERATE_KEY) {\n        mapKeyIterateEffects = depsMap.get(MAP_KEY_ITERATE_KEY);\n    }\n\n    \/\/ \u5206\u652f--\u9632\u6b62\u65e0\u9650\u5faa\u73af\n    const effectsToRun = new Set<EffectFunction<any>>();\n\n    effects &&\n        effects.forEach(effectFn => {\n            if (activeEffect !== effectFn) {\n                effectsToRun.add(effectFn);\n            }\n        });\n\n    \/\/ set\n    if (\n        target instanceof Set &&\n        (type === \"SET\" || type === \"ADD\" || type === \"DELETE\")\n    ) {\n        ITERATE_KEY &&\n            (iterateEffects = depsMap.get(ITERATE_KEY)) &&\n            iterateEffects.forEach(effectFn => {\n                if (activeEffect !== effectFn) {\n                    effectsToRun.add(effectFn);\n                }\n            });\n    }\n\n    \/\/ map\n    if (\n        target instanceof Map &&\n        (type === \"SET\" || type === \"ADD\" || type === \"DELETE\")\n    ) {\n        ITERATE_KEY &&\n            (iterateEffects = depsMap.get(ITERATE_KEY)) &&\n            iterateEffects.forEach(effectFn => {\n                if (activeEffect !== effectFn) {\n                    effectsToRun.add(effectFn);\n                }\n            });\n    }\n\n    if (\n        target instanceof Map &&\n        (type === \"ADD\" || type === \"DELETE\")\n    ) {\n        MAP_KEY_ITERATE_KEY &&\n            (mapKeyIterateEffects = depsMap.get(MAP_KEY_ITERATE_KEY)) &&\n            mapKeyIterateEffects.forEach(effectFn => {\n                if (activeEffect !== effectFn) {\n                    effectsToRun.add(effectFn);\n                }\n            });\n    }\n\n    \/\/ array\n    if (type === \"ADD\" && Array.isArray(target)) {\n        const lengthEffects = depsMap.get(\"length\");\n        lengthEffects &&\n            lengthEffects.forEach(effectFn => {\n                if (activeEffect !== effectFn) {\n                    effectsToRun.add(effectFn);\n                }\n            });\n    }\n    if (Array.isArray(target) && key === \"length\") {\n        depsMap.forEach((effects, key) => {\n            if ((key as number) >= (newVal as number)) {\n                effects.forEach(effectFn => {\n                    if (activeEffect !== effectFn) {\n                        effectsToRun.add(effectFn);\n                    }\n                });\n            }\n        });\n    }\n\n    \/\/ object\n    (type === \"ADD\" || type === \"DELETE\") &&\n        iterateEffects &&\n        iterateEffects.forEach(effectFn => {\n            if (activeEffect !== effectFn) {\n                effectsToRun.add(effectFn);\n            }\n        });\n\n    effectsToRun.forEach(effectFn => {\n        \/\/ \u8c03\u5ea6\u5668\u6267\u884c\n        if (effectFn?.options?.scheduler) {\n            effectFn?.options.scheduler(effectFn);\n        } else {\n            effectFn();\n        }\n    });\n}\n","avg_line_length":27.8894736842,"max_line_length":78,"alphanum_fraction":0.5421777694,"loc":155,"functions":14,"function_signatures":0,"function_parameters":21,"variable_declarations":15,"property_declarations":4,"function_usages":2,"trivial_types":17,"predefined_types":12,"type_definitions":4,"dynamism_heuristic":6,"loc_per_function":11.3571428571,"estimated_tokens":1417,"fun_ann_density":0.0247000706,"var_ann_density":0.0105857445,"prop_ann_density":0.0028228652,"typedef_density":0.0028228652,"dynamism_density":0.0042342978,"trivial_density":0.3148148148,"predefined_density":0.2222222222,"metric":0.2615786579,"content_without_annotations":"export type EffectOptions = {\n    scheduler?;\n    lazy?;\n};\nexport type EffectFunction<T> = {\n    ();\n    deps;\n    options?;\n};\nexport type TriggerType = \"ADD\" | \"SET\" | \"DELETE\";\nexport type TriggrtFunction = (\n    target,\n    key,\n    ITERATE_KEY?,\n    MAP_KEY_ITERATE_KEY?,\n    type?,\n    newVal?\n) => void;\n\nlet activeEffect;\nconst bucket = new WeakMap<any, Map<PropertyKey, Set<EffectFunction<any>>>>();\nconst effectStack = [];\n\nexport function effect<T>(fn, options?) {\n    const effectFn = () => {\n        \/\/ \u6e05\u9664\u4e4b\u524d\u7684effect\n        cleanup(effectFn);\n        activeEffect = effectFn;\n        \/\/ \u538b\u5165\u6808\u4e2d\n        effectStack.push(effectFn);\n        const res = fn();\n        effectStack.pop();\n        activeEffect = effectStack[effectStack.length - 1];\n        return res;\n    };\n    effectFn.deps = [] as Set<Function>[];\n    effectFn.options = options;\n    if (!options?.lazy) {\n        effectFn();\n    }\n    return effectFn;\n}\n\n\/**\n * \u6e05\u9664\u4e4b\u524d\u7684\u7ed1\u5b9a\uff0c\u7528\u4e8e\u5237\u65b0\u7ed1\u5b9aeffect\n * \u53ef\u89e3\u51b3\u5206\u652f\u5207\u6362\u95ee\u9898\u3001\u6bd4\u5982\u4e09\u5143\n * @param effectFn\n *\/\nfunction cleanup<T>(effectFn) {\n    for (let index = 0; index < effectFn.deps.length; index++) {\n        const deps = effectFn.deps[index];\n        deps.delete(effectFn);\n    }\n    effectFn.deps.length = 0;\n}\n\nexport function track(target, key) {\n    if (!activeEffect) return;\n    \/\/ data or props\n    let depsMap = bucket.get(target);\n    if (!depsMap) {\n        bucket.set(target, (depsMap = new Map()));\n    }\n    \/\/ \u5c5e\u6027\u503c\u5bf9\u5e94\u7684set\uff0cset\u91cc\u53ef\u80fd\u5b58\u5728\u591a\u4e2aeffect\u51fd\u6570\n    let deps = depsMap.get(key);\n    if (!deps) {\n        depsMap.set(key, (deps = new Set()));\n    }\n    \/\/ \u5c5e\u6027\u5bf9\u5e94\u7684effect\u51fd\u6570\u3001effect\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u3001\u540c\u4e2a\u5219\u8986\u76d6\n    deps.add(activeEffect);\n    \/\/ \u5c06\u5f53\u524deffect\u6dfb\u52a0\u4f9d\u8d56\u7684effect\n    activeEffect.deps.push(deps);\n}\n\nexport function trigger(\n    target,\n    key,\n    ITERATE_KEY?,\n    MAP_KEY_ITERATE_KEY?,\n    type?,\n    newVal?\n) {\n    const depsMap = bucket.get(target);\n    if (!depsMap) return;\n    \/\/ \u83b7\u53d6\u5bf9\u5e94\u503c\u7684\u6240\u6709 effects\n    const effects = depsMap.get(key);\n\n    \/\/ \u53d6\u5f97\u4e0eITERATE_KEY\u5173\u8054\u7684\u526f\u4f5c\u7528\u51fd\u6570\n    let iterateEffects;\n    if (ITERATE_KEY) {\n        iterateEffects = depsMap.get(ITERATE_KEY);\n    }\n\n    let mapKeyIterateEffects;\n    if (MAP_KEY_ITERATE_KEY) {\n        mapKeyIterateEffects = depsMap.get(MAP_KEY_ITERATE_KEY);\n    }\n\n    \/\/ \u5206\u652f--\u9632\u6b62\u65e0\u9650\u5faa\u73af\n    const effectsToRun = new Set<EffectFunction<any>>();\n\n    effects &&\n        effects.forEach(effectFn => {\n            if (activeEffect !== effectFn) {\n                effectsToRun.add(effectFn);\n            }\n        });\n\n    \/\/ set\n    if (\n        target instanceof Set &&\n        (type === \"SET\" || type === \"ADD\" || type === \"DELETE\")\n    ) {\n        ITERATE_KEY &&\n            (iterateEffects = depsMap.get(ITERATE_KEY)) &&\n            iterateEffects.forEach(effectFn => {\n                if (activeEffect !== effectFn) {\n                    effectsToRun.add(effectFn);\n                }\n            });\n    }\n\n    \/\/ map\n    if (\n        target instanceof Map &&\n        (type === \"SET\" || type === \"ADD\" || type === \"DELETE\")\n    ) {\n        ITERATE_KEY &&\n            (iterateEffects = depsMap.get(ITERATE_KEY)) &&\n            iterateEffects.forEach(effectFn => {\n                if (activeEffect !== effectFn) {\n                    effectsToRun.add(effectFn);\n                }\n            });\n    }\n\n    if (\n        target instanceof Map &&\n        (type === \"ADD\" || type === \"DELETE\")\n    ) {\n        MAP_KEY_ITERATE_KEY &&\n            (mapKeyIterateEffects = depsMap.get(MAP_KEY_ITERATE_KEY)) &&\n            mapKeyIterateEffects.forEach(effectFn => {\n                if (activeEffect !== effectFn) {\n                    effectsToRun.add(effectFn);\n                }\n            });\n    }\n\n    \/\/ array\n    if (type === \"ADD\" && Array.isArray(target)) {\n        const lengthEffects = depsMap.get(\"length\");\n        lengthEffects &&\n            lengthEffects.forEach(effectFn => {\n                if (activeEffect !== effectFn) {\n                    effectsToRun.add(effectFn);\n                }\n            });\n    }\n    if (Array.isArray(target) && key === \"length\") {\n        depsMap.forEach((effects, key) => {\n            if ((key as number) >= (newVal as number)) {\n                effects.forEach(effectFn => {\n                    if (activeEffect !== effectFn) {\n                        effectsToRun.add(effectFn);\n                    }\n                });\n            }\n        });\n    }\n\n    \/\/ object\n    (type === \"ADD\" || type === \"DELETE\") &&\n        iterateEffects &&\n        iterateEffects.forEach(effectFn => {\n            if (activeEffect !== effectFn) {\n                effectsToRun.add(effectFn);\n            }\n        });\n\n    effectsToRun.forEach(effectFn => {\n        \/\/ \u8c03\u5ea6\u5668\u6267\u884c\n        if (effectFn?.options?.scheduler) {\n            effectFn?.options.scheduler(effectFn);\n        } else {\n            effectFn();\n        }\n    });\n}\n"}
{"hexsha":"061ff6d38d7937dfc5d58418015175ee872e76fe","size":2507,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"server\/src\/apiModules\/user\/user.parameters.ts","max_stars_repo_name":"saqwxz\/raspberry-iot-rola-dht22","max_stars_repo_head_hexsha":"b35980067ccdb91b59cd6319d8441ac8cbb0f817","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-02-24T07:35:21.000Z","max_stars_repo_stars_event_max_datetime":"2022-02-24T07:35:21.000Z","max_issues_repo_path":"server\/src\/apiModules\/user\/user.parameters.ts","max_issues_repo_name":"saqwxz\/raspberry-iot-rola-dht22","max_issues_repo_head_hexsha":"b35980067ccdb91b59cd6319d8441ac8cbb0f817","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"server\/src\/apiModules\/user\/user.parameters.ts","max_forks_repo_name":"saqwxz\/raspberry-iot-rola-dht22","max_forks_repo_head_hexsha":"b35980067ccdb91b59cd6319d8441ac8cbb0f817","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\nexport type CreateOneUserRequest = {\n    bodyAuthLevel: number,\n    bodyEmail: string,\n    bodyPassword: string,\n    bodyPhone: string,\n    bodyUserStatus: number,\n    bodyUsername: string,\n}\n\nexport const CreateOneUserRequestConvert = (\n    body: any,\n    query: any,\n    path: any,\n) => {\n  return {\n    bodyAuthLevel: parseInt(body.authLevel),\n    bodyEmail: body.email,\n    bodyPassword: body.password,\n    bodyPhone: body.phone,\n    bodyUserStatus: parseInt(body.userStatus),\n    bodyUsername: body.username,\n  };\n};\nexport type LoginUserRequest = {\n    bodyEmail: string,\n    bodyPassword: string,\n}\n\nexport const LoginUserRequestConvert = (\n    body: any,\n    query: any,\n    path: any,\n) => {\n  return {\n    bodyEmail: body.email,\n    bodyPassword: body.password,\n  };\n};\nexport type LogoutUserRequest = {\n}\n\nexport const LogoutUserRequestConvert = (\n    body: any,\n    query: any,\n    path: any,\n) => {\n  return {\n  };\n};\nexport type DeleteOneUserRequest = {\n    pathId: number\n}\n\nexport const DeleteOneUserRequestConvert = (\n    body: any,\n    query: any,\n    path: any,\n) => {\n  return {\n    pathId: parseInt(path.id),\n  };\n};\nexport type ReadOneUserRequest = {\n    pathId: number\n}\n\nexport const ReadOneUserRequestConvert = (\n    body: any,\n    query: any,\n    path: any,\n) => {\n  return {\n    pathId: parseInt(path.id),\n  };\n};\nexport type UpdateOneUserRequest = {\n    pathId: number\n    bodyAuthLevel: number,\n    bodyEmail: string,\n    bodyPassword: string,\n    bodyPhone: string,\n    bodyUserStatus: number,\n    bodyUsername: string,\n}\n\nexport const UpdateOneUserRequestConvert = (\n    body: any,\n    query: any,\n    path: any,\n) => {\n  return {\n    pathId: parseInt(path.id),\n    bodyAuthLevel: parseInt(body.authLevel),\n    bodyEmail: body.email,\n    bodyPassword: body.password,\n    bodyPhone: body.phone,\n    bodyUserStatus: parseInt(body.userStatus),\n    bodyUsername: body.username,\n  };\n};\nexport type CreateManyUsersRequest = {\n    bodyAuthLevel: number,\n    bodyEmail: string,\n    bodyPassword: string,\n    bodyPhone: string,\n    bodyUserStatus: number,\n    bodyUsername: string,\n}\n\nexport const CreateManyUsersRequestConvert = (\n    body: any,\n    query: any,\n    path: any,\n) => {\n  const arrayBody = body.map((e: any) => {\n    return {\n      bodyAuthLevel: parseInt(e.authLevel),\n      bodyEmail: e.email,\n      bodyPassword: e.password,\n      bodyPhone: e.phone,\n      bodyUserStatus: parseInt(e.userStatus),\n      bodyUsername: e.username,\n    };\n  });\n  return arrayBody;\n};\n","avg_line_length":19.5859375,"max_line_length":46,"alphanum_fraction":0.6493817312,"loc":119,"functions":8,"function_signatures":0,"function_parameters":22,"variable_declarations":8,"property_declarations":23,"function_usages":0,"trivial_types":22,"predefined_types":23,"type_definitions":7,"dynamism_heuristic":0,"loc_per_function":6.0,"estimated_tokens":692,"fun_ann_density":0.0433526012,"var_ann_density":0.0115606936,"prop_ann_density":0.0332369942,"typedef_density":0.0101156069,"dynamism_density":0.0,"trivial_density":0.3606557377,"predefined_density":0.3770491803,"metric":0.3193745528,"content_without_annotations":"\nexport type CreateOneUserRequest = {\n    bodyAuthLevel,\n    bodyEmail,\n    bodyPassword,\n    bodyPhone,\n    bodyUserStatus,\n    bodyUsername,\n}\n\nexport const CreateOneUserRequestConvert = (\n    body,\n    query,\n    path,\n) => {\n  return {\n    bodyAuthLevel: parseInt(body.authLevel),\n    bodyEmail: body.email,\n    bodyPassword: body.password,\n    bodyPhone: body.phone,\n    bodyUserStatus: parseInt(body.userStatus),\n    bodyUsername: body.username,\n  };\n};\nexport type LoginUserRequest = {\n    bodyEmail,\n    bodyPassword,\n}\n\nexport const LoginUserRequestConvert = (\n    body,\n    query,\n    path,\n) => {\n  return {\n    bodyEmail: body.email,\n    bodyPassword: body.password,\n  };\n};\nexport type LogoutUserRequest = {\n}\n\nexport const LogoutUserRequestConvert = (\n    body,\n    query,\n    path,\n) => {\n  return {\n  };\n};\nexport type DeleteOneUserRequest = {\n    pathId\n}\n\nexport const DeleteOneUserRequestConvert = (\n    body,\n    query,\n    path,\n) => {\n  return {\n    pathId: parseInt(path.id),\n  };\n};\nexport type ReadOneUserRequest = {\n    pathId\n}\n\nexport const ReadOneUserRequestConvert = (\n    body,\n    query,\n    path,\n) => {\n  return {\n    pathId: parseInt(path.id),\n  };\n};\nexport type UpdateOneUserRequest = {\n    pathId\n    bodyAuthLevel,\n    bodyEmail,\n    bodyPassword,\n    bodyPhone,\n    bodyUserStatus,\n    bodyUsername,\n}\n\nexport const UpdateOneUserRequestConvert = (\n    body,\n    query,\n    path,\n) => {\n  return {\n    pathId: parseInt(path.id),\n    bodyAuthLevel: parseInt(body.authLevel),\n    bodyEmail: body.email,\n    bodyPassword: body.password,\n    bodyPhone: body.phone,\n    bodyUserStatus: parseInt(body.userStatus),\n    bodyUsername: body.username,\n  };\n};\nexport type CreateManyUsersRequest = {\n    bodyAuthLevel,\n    bodyEmail,\n    bodyPassword,\n    bodyPhone,\n    bodyUserStatus,\n    bodyUsername,\n}\n\nexport const CreateManyUsersRequestConvert = (\n    body,\n    query,\n    path,\n) => {\n  const arrayBody = body.map((e) => {\n    return {\n      bodyAuthLevel: parseInt(e.authLevel),\n      bodyEmail: e.email,\n      bodyPassword: e.password,\n      bodyPhone: e.phone,\n      bodyUserStatus: parseInt(e.userStatus),\n      bodyUsername: e.username,\n    };\n  });\n  return arrayBody;\n};\n"}
{"hexsha":"f6127d3ca25913df8797295ddc538560f5ecbd34","size":2850,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/views\/minHeap\/minHeap.ts","max_stars_repo_name":"awefeng\/fe-demo","max_stars_repo_head_hexsha":"05cc4106d3380e2dda5c327f4828145ba1bb6747","max_stars_repo_licenses":["MIT"],"max_stars_count":3.0,"max_stars_repo_stars_event_min_datetime":"2022-03-04T05:55:34.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-28T09:09:46.000Z","max_issues_repo_path":"src\/views\/minHeap\/minHeap.ts","max_issues_repo_name":"awefeng\/fe-demo","max_issues_repo_head_hexsha":"05cc4106d3380e2dda5c327f4828145ba1bb6747","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/views\/minHeap\/minHeap.ts","max_forks_repo_name":"awefeng\/fe-demo","max_forks_repo_head_hexsha":"05cc4106d3380e2dda5c327f4828145ba1bb6747","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \u4efb\u52a1\u5b58\u653e\u7684\u6570\u636e\u7ed3\u6784\n * \u7c7b\u4f3c\u5c0f\u9876\u5806 \u5c06heap\u4e2d\u6700\u5c0f\u7684\u8282\u70b9\u653e\u5728\u7b2c\u4e00\u4e2a\n * @flow strict\n *\/\n\nexport type Heap = Array<Node>\nexport type Node = {\n  id: number\n  sortIndex: number\n}\n\n\/**\n * push\u4e00\u4e2a\u4efb\u52a1\n * \u5148\u5c06\u4efb\u52a1\u653e\u5728\u961f\u5217\u672b\u5c3e\n * \u7136\u540e\u8fdb\u884c\u4e8c\u5206\u904d\u5386\uff0c\u5c06\u6700\u5c0f\u7684\u4efb\u52a1\u653e\u5728\u7b2c\u4e00\u4e2a\n *\/\nexport function push(heap: Heap, node: Node): void {\n  const index = heap.length\n\n  heap.push(node)\n  siftUp(heap, node, index)\n}\n\n\/\/ \u67e5\u770b\u5c0f\u9876\u5806\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\nexport function peek(heap: Heap): Node | null {\n  return heap.length === 0 ? null : heap[0]\n}\n\n\/\/ \u63a8\u51fa\u7b2c\u4e00\u4e2a\u4efb\u52a1\nexport function pop(heap: Heap): Node | null {\n  if (heap.length === 0) {\n    return null\n  }\n\n  const first = heap[0]\n  const last = heap.pop() as Node\n\n  if (last !== first) {\n    heap[0] = last\n    siftDown(heap, last, 0)\n  }\n\n  return first\n}\n\n\/**\n * \u4e0a\u6d6e\u5143\u7d20\n * \u786e\u4fdd\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u59cb\u7ec8\u662fsortIndex\u6700\u5c0f\u7684\n *\n * \u4e4b\u6240\u4ee5\u4e0d\u5c06\u5165\u961f\u7684node\u76f4\u63a5\u548chead[0]\u8fdb\u884c\u6bd4\u8f83\n * \u662f\u56e0\u4e3a\u60f3\u8981\u5c06\u5165\u961f\u7684node\u653e\u5728\u4e00\u4e2a\u6bd4\u8f83\u5408\u9002\u7684\u4f4d\u7f6e\uff0c\u907f\u514d\u540e\u7eedsiftdown\u64cd\u4f5c\u8fdb\u884c\u66f4\u591a\u7684\u904d\u5386\n *\/\nfunction siftUp(heap: Heap, node: Node, i: number) {\n  let index = i\n\n  while (index > 0) {\n    \/\/ \u83b7\u53d6\u961f\u5217\u4e2d0\u5230index\u7684\u4e8c\u5206\u4f4d\u7f6e\n    const parentIndex = (index - 1) >>> 1\n    const parent = heap[parentIndex]\n\n    \/**\n     * \u5982\u679c\u4e2d\u95f4\u4f4d\u7f6e\u7684node\u548c\u9700\u8981\u5165\u961f\u7684node compare\u7ed3\u679c\u4e3a\u6b63\n     * \u5219\u8868\u660e\u9700\u8981\u5165\u961f\u7684node\u9700\u8981\u7ee7\u7eed\u5f80\u524d\u79fb\u52a8\n     * index\u4e3a2\u6216\u80051\u7684\u65f6\u5019 parentIndex\u4f1a\u4e3a0\n     * \u8fd9\u6837\u5c31\u6bd4\u8f83\u4e86\u9700\u8981\u5165\u961f\u7684node\u548chead[0]\n     *\/\n    if (compare(parent, node) > 0) {\n      \/\/ The parent is larger. Swap positions.\n      heap[parentIndex] = node\n      heap[index] = parent\n      index = parentIndex\n    } else {\n      \/\/ The parent is smaller. Exit.\n      return\n    }\n  }\n}\n\n\/**\n * \u901a\u8fc7\u5c0f\u9876\u5806\u5bfb\u627e\u961f\u5217\u4e2d\u6700\u5c0f\u7684\u6700\u5c0f\u7684\n * \u786e\u4fdd\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u59cb\u7ec8\u662fsortIndex\u6700\u5c0f\u7684\n *\/\nfunction siftDown(heap: Heap, node: Node, i: number) {\n  let index = i\n\n  debugger\n  const length = heap.length\n  const halfLength = length >>> 1\n\n  while (index < halfLength) {\n    const leftIndex = (index + 1) * 2 - 1\n    const left = heap[leftIndex]\n    const rightIndex = leftIndex + 1\n    const right = heap[rightIndex]\n\n    \/\/ If the left or right node is smaller, swap with the smaller of those.\n    if (compare(left, node) < 0) {\n      \/\/ \u5148\u627e\u5230\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u7684\n      if (rightIndex < length && compare(right, left) < 0) {\n        heap[index] = right\n        heap[rightIndex] = node\n        index = rightIndex\n      } else {\n        \/\/ \u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u7684\u627e\u5230\u4ee5\u540e \u518d\u6765\u6bd4\u8f83\u5de6\u5b50\u6811\n        heap[index] = left\n        heap[leftIndex] = node\n        index = leftIndex\n      }\n    } else if (rightIndex < length && compare(right, node) < 0) {\n      heap[index] = right\n      heap[rightIndex] = node\n      index = rightIndex\n    } else {\n      \/\/ Neither child is smaller. Exit.\n      return\n    }\n  }\n}\n\n\/\/ \u6bd4\u8f83\u4e24\u4e2a\u8282\u70b9: sortIndex\u4f18\u5148 sortIndex\u76f8\u540c\u7684\u60c5\u51b5\u518d\u6bd4\u8f83id\nfunction compare(a: Node, b: Node) {\n  \/\/ Compare sort index first, then task id.\n  const diff = a.sortIndex - b.sortIndex\n\n  return diff !== 0 ? diff : a.id - b.id\n}\n","avg_line_length":21.4285714286,"max_line_length":76,"alphanum_fraction":0.6224561404,"loc":72,"functions":6,"function_signatures":0,"function_parameters":12,"variable_declarations":14,"property_declarations":2,"function_usages":5,"trivial_types":0,"predefined_types":5,"type_definitions":2,"dynamism_heuristic":1,"loc_per_function":9.1666666667,"estimated_tokens":996,"fun_ann_density":0.0180722892,"var_ann_density":0.0140562249,"prop_ann_density":0.0020080321,"typedef_density":0.0020080321,"dynamism_density":0.0010040161,"trivial_density":0.0,"predefined_density":0.1470588235,"metric":0.2624370344,"content_without_annotations":"\/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \u4efb\u52a1\u5b58\u653e\u7684\u6570\u636e\u7ed3\u6784\n * \u7c7b\u4f3c\u5c0f\u9876\u5806 \u5c06heap\u4e2d\u6700\u5c0f\u7684\u8282\u70b9\u653e\u5728\u7b2c\u4e00\u4e2a\n * @flow strict\n *\/\n\nexport type Heap = Array<Node>\nexport type Node = {\n  id\n  sortIndex\n}\n\n\/**\n * push\u4e00\u4e2a\u4efb\u52a1\n * \u5148\u5c06\u4efb\u52a1\u653e\u5728\u961f\u5217\u672b\u5c3e\n * \u7136\u540e\u8fdb\u884c\u4e8c\u5206\u904d\u5386\uff0c\u5c06\u6700\u5c0f\u7684\u4efb\u52a1\u653e\u5728\u7b2c\u4e00\u4e2a\n *\/\nexport function push(heap, node) {\n  const index = heap.length\n\n  heap.push(node)\n  siftUp(heap, node, index)\n}\n\n\/\/ \u67e5\u770b\u5c0f\u9876\u5806\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\nexport function peek(heap) {\n  return heap.length === 0 ? null : heap[0]\n}\n\n\/\/ \u63a8\u51fa\u7b2c\u4e00\u4e2a\u4efb\u52a1\nexport function pop(heap) {\n  if (heap.length === 0) {\n    return null\n  }\n\n  const first = heap[0]\n  const last = heap.pop() as Node\n\n  if (last !== first) {\n    heap[0] = last\n    siftDown(heap, last, 0)\n  }\n\n  return first\n}\n\n\/**\n * \u4e0a\u6d6e\u5143\u7d20\n * \u786e\u4fdd\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u59cb\u7ec8\u662fsortIndex\u6700\u5c0f\u7684\n *\n * \u4e4b\u6240\u4ee5\u4e0d\u5c06\u5165\u961f\u7684node\u76f4\u63a5\u548chead[0]\u8fdb\u884c\u6bd4\u8f83\n * \u662f\u56e0\u4e3a\u60f3\u8981\u5c06\u5165\u961f\u7684node\u653e\u5728\u4e00\u4e2a\u6bd4\u8f83\u5408\u9002\u7684\u4f4d\u7f6e\uff0c\u907f\u514d\u540e\u7eedsiftdown\u64cd\u4f5c\u8fdb\u884c\u66f4\u591a\u7684\u904d\u5386\n *\/\nfunction siftUp(heap, node, i) {\n  let index = i\n\n  while (index > 0) {\n    \/\/ \u83b7\u53d6\u961f\u5217\u4e2d0\u5230index\u7684\u4e8c\u5206\u4f4d\u7f6e\n    const parentIndex = (index - 1) >>> 1\n    const parent = heap[parentIndex]\n\n    \/**\n     * \u5982\u679c\u4e2d\u95f4\u4f4d\u7f6e\u7684node\u548c\u9700\u8981\u5165\u961f\u7684node compare\u7ed3\u679c\u4e3a\u6b63\n     * \u5219\u8868\u660e\u9700\u8981\u5165\u961f\u7684node\u9700\u8981\u7ee7\u7eed\u5f80\u524d\u79fb\u52a8\n     * index\u4e3a2\u6216\u80051\u7684\u65f6\u5019 parentIndex\u4f1a\u4e3a0\n     * \u8fd9\u6837\u5c31\u6bd4\u8f83\u4e86\u9700\u8981\u5165\u961f\u7684node\u548chead[0]\n     *\/\n    if (compare(parent, node) > 0) {\n      \/\/ The parent is larger. Swap positions.\n      heap[parentIndex] = node\n      heap[index] = parent\n      index = parentIndex\n    } else {\n      \/\/ The parent is smaller. Exit.\n      return\n    }\n  }\n}\n\n\/**\n * \u901a\u8fc7\u5c0f\u9876\u5806\u5bfb\u627e\u961f\u5217\u4e2d\u6700\u5c0f\u7684\u6700\u5c0f\u7684\n * \u786e\u4fdd\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u59cb\u7ec8\u662fsortIndex\u6700\u5c0f\u7684\n *\/\nfunction siftDown(heap, node, i) {\n  let index = i\n\n  debugger\n  const length = heap.length\n  const halfLength = length >>> 1\n\n  while (index < halfLength) {\n    const leftIndex = (index + 1) * 2 - 1\n    const left = heap[leftIndex]\n    const rightIndex = leftIndex + 1\n    const right = heap[rightIndex]\n\n    \/\/ If the left or right node is smaller, swap with the smaller of those.\n    if (compare(left, node) < 0) {\n      \/\/ \u5148\u627e\u5230\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u7684\n      if (rightIndex < length && compare(right, left) < 0) {\n        heap[index] = right\n        heap[rightIndex] = node\n        index = rightIndex\n      } else {\n        \/\/ \u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u7684\u627e\u5230\u4ee5\u540e \u518d\u6765\u6bd4\u8f83\u5de6\u5b50\u6811\n        heap[index] = left\n        heap[leftIndex] = node\n        index = leftIndex\n      }\n    } else if (rightIndex < length && compare(right, node) < 0) {\n      heap[index] = right\n      heap[rightIndex] = node\n      index = rightIndex\n    } else {\n      \/\/ Neither child is smaller. Exit.\n      return\n    }\n  }\n}\n\n\/\/ \u6bd4\u8f83\u4e24\u4e2a\u8282\u70b9: sortIndex\u4f18\u5148 sortIndex\u76f8\u540c\u7684\u60c5\u51b5\u518d\u6bd4\u8f83id\nfunction compare(a, b) {\n  \/\/ Compare sort index first, then task id.\n  const diff = a.sortIndex - b.sortIndex\n\n  return diff !== 0 ? diff : a.id - b.id\n}\n"}
{"hexsha":"93e4c92cb6fa4c1a76b92200a9db5527df477966","size":8442,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"packages\/mona-commands\/mona-build\/src\/utils\/md5.ts","max_stars_repo_name":"xwchris\/mona","max_stars_repo_head_hexsha":"2933e5ab7a64c8be8e7fdf5f212cd6f9b00be57e","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"packages\/mona-commands\/mona-build\/src\/utils\/md5.ts","max_issues_repo_name":"xwchris\/mona","max_issues_repo_head_hexsha":"2933e5ab7a64c8be8e7fdf5f212cd6f9b00be57e","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"packages\/mona-commands\/mona-build\/src\/utils\/md5.ts","max_forks_repo_name":"xwchris\/mona","max_forks_repo_head_hexsha":"2933e5ab7a64c8be8e7fdf5f212cd6f9b00be57e","max_forks_repo_licenses":["MIT"],"max_forks_count":1.0,"max_forks_repo_forks_event_min_datetime":"2022-01-05T03:43:01.000Z","max_forks_repo_forks_event_max_datetime":"2022-01-05T03:43:01.000Z","content":"\n\/**\n * Add integers, wrapping at 2^32.\n * This uses 16-bit operations internally to work around bugs in interpreters.\n *\n * @param {number} x First integer\n * @param {number} y Second integer\n * @returns {number} Sum\n *\/\nfunction safeAdd(x: number, y: number) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xffff);\n}\n\n\/**\n * Bitwise rotate a 32-bit number to the left.\n *\n * @param {number} num 32-bit number\n * @param {number} cnt Rotation count\n * @returns {number} Rotated number\n *\/\nfunction bitRotateLeft(num: number, cnt: number) {\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\n\/**\n * Basic operation the algorithm uses.\n *\n * @param {number} q q\n * @param {number} a a\n * @param {number} b b\n * @param {number} x x\n * @param {number} s s\n * @param {number} t t\n * @returns {number} Result\n *\/\nfunction md5cmn(q: number, a: any, b: any, x: any, s: any, t: any) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\/**\n * Basic operation the algorithm uses.\n *\n * @param {number} a a\n * @param {number} b b\n * @param {number} c c\n * @param {number} d d\n * @param {number} x x\n * @param {number} s s\n * @param {number} t t\n * @returns {number} Result\n *\/\nfunction md5ff(a: number, b: number, c: number, d: number, x: any, s: number, t: number) {\n  return md5cmn((b & c) | (~b & d), a, b, x, s, t);\n}\n\/**\n * Basic operation the algorithm uses.\n *\n * @param {number} a a\n * @param {number} b b\n * @param {number} c c\n * @param {number} d d\n * @param {number} x x\n * @param {number} s s\n * @param {number} t t\n * @returns {number} Result\n *\/\nfunction md5gg(a: number, b: number, c: number, d: number, x: any, s: number, t: number) {\n  return md5cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\n\/**\n * Basic operation the algorithm uses.\n *\n * @param {number} a a\n * @param {number} b b\n * @param {number} c c\n * @param {number} d d\n * @param {number} x x\n * @param {number} s s\n * @param {number} t t\n * @returns {number} Result\n *\/\nfunction md5hh(a: number, b: number, c: number, d: number, x: any, s: number, t: number) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\/**\n * Basic operation the algorithm uses.\n *\n * @param {number} a a\n * @param {number} b b\n * @param {number} c c\n * @param {number} d d\n * @param {number} x x\n * @param {number} s s\n * @param {number} t t\n * @returns {number} Result\n *\/\nfunction md5ii(a: number, b: number, c: number, d: number, x: any, s: number, t: number) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n\/**\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n *\n * @param {Array} x Array of little-endian words\n * @param {number} len Bit length\n * @returns {Array<number>} MD5 Array\n *\/\nfunction binlMD5(x: any, len: number) {\n  \/* append padding *\/\n  x[len >> 5] |= 0x80 << len % 32;\n  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n  let i, olda, oldb, oldc, oldd;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (i = 0; i < x.length; i += 16) {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n  return [a, b, c, d];\n}\n\n\/**\n * Convert an array of little-endian words to a string\n *\n * @param {Array<number>} input MD5 Array\n * @returns {string} MD5 string\n *\/\nfunction binl2rstr(input: string | any[]) {\n  let i;\n  let output = '';\n  const length32 = input.length * 32;\n  for (i = 0; i < length32; i += 8) {\n    output += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff);\n  }\n  return output;\n}\n\n\/**\n * Convert a raw string to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n *\n * @param {string} input Raw input string\n * @returns {Array<number>} Array of little-endian words\n *\/\nfunction rstr2binl(input: string) {\n  let i;\n  const output: any[] = [];\n  output[(input.length >> 2) - 1] = undefined;\n  for (i = 0; i < output.length; i += 1) {\n    output[i] = 0;\n  }\n  const length8 = input.length * 8;\n  for (i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input.charCodeAt(i \/ 8) & 0xff) << i % 32;\n  }\n  return output;\n}\n\n\/**\n * Calculate the MD5 of a raw string\n *\n * @param {string} s Input string\n * @returns {string} Raw MD5 string\n *\/\nfunction rstrMD5(s: string) {\n  return binl2rstr(binlMD5(rstr2binl(s), s.length * 8));\n}\n\nfunction str2rstrUTF8(input: string | number | boolean) {\n  return unescape(encodeURIComponent(input));\n}\n\nfunction rawMD5(s: string) {\n  return rstrMD5(str2rstrUTF8(s));\n}\n\nfunction rstr2hex(input: string) {\n  const hexTab = '0123456789abcdef';\n  let output = '';\n  let x, i;\n  for (i = 0; i < input.length; i += 1) {\n    x = input.charCodeAt(i);\n    output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);\n  }\n  return output;\n}\n\n\/**\n * Encodes input string as Hex encoded string\n *\n * @param {string} s Input string\n * @returns {string} Hex encoded string\n *\/\nexport function hexMD5(s: string) {\n  return rstr2hex(rawMD5(s));\n}\n","avg_line_length":30.476534296,"max_line_length":90,"alphanum_fraction":0.5418147358,"loc":151,"functions":15,"function_signatures":0,"function_parameters":47,"variable_declarations":21,"property_declarations":0,"function_usages":14,"trivial_types":12,"predefined_types":39,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":8.0666666667,"estimated_tokens":4316,"fun_ann_density":0.0143651529,"var_ann_density":0.0048656163,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.1445783133,"predefined_density":0.4698795181,"metric":0.2202174535,"content_without_annotations":"\n\/**\n * Add integers, wrapping at 2^32.\n * This uses 16-bit operations internally to work around bugs in interpreters.\n *\n * @param {number} x First integer\n * @param {number} y Second integer\n * @returns {number} Sum\n *\/\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xffff);\n}\n\n\/**\n * Bitwise rotate a 32-bit number to the left.\n *\n * @param {number} num 32-bit number\n * @param {number} cnt Rotation count\n * @returns {number} Rotated number\n *\/\nfunction bitRotateLeft(num, cnt) {\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\n\/**\n * Basic operation the algorithm uses.\n *\n * @param {number} q q\n * @param {number} a a\n * @param {number} b b\n * @param {number} x x\n * @param {number} s s\n * @param {number} t t\n * @returns {number} Result\n *\/\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\/**\n * Basic operation the algorithm uses.\n *\n * @param {number} a a\n * @param {number} b b\n * @param {number} c c\n * @param {number} d d\n * @param {number} x x\n * @param {number} s s\n * @param {number} t t\n * @returns {number} Result\n *\/\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn((b & c) | (~b & d), a, b, x, s, t);\n}\n\/**\n * Basic operation the algorithm uses.\n *\n * @param {number} a a\n * @param {number} b b\n * @param {number} c c\n * @param {number} d d\n * @param {number} x x\n * @param {number} s s\n * @param {number} t t\n * @returns {number} Result\n *\/\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\n\/**\n * Basic operation the algorithm uses.\n *\n * @param {number} a a\n * @param {number} b b\n * @param {number} c c\n * @param {number} d d\n * @param {number} x x\n * @param {number} s s\n * @param {number} t t\n * @returns {number} Result\n *\/\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\/**\n * Basic operation the algorithm uses.\n *\n * @param {number} a a\n * @param {number} b b\n * @param {number} c c\n * @param {number} d d\n * @param {number} x x\n * @param {number} s s\n * @param {number} t t\n * @returns {number} Result\n *\/\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n\/**\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n *\n * @param {Array} x Array of little-endian words\n * @param {number} len Bit length\n * @returns {Array<number>} MD5 Array\n *\/\nfunction binlMD5(x, len) {\n  \/* append padding *\/\n  x[len >> 5] |= 0x80 << len % 32;\n  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n  let i, olda, oldb, oldc, oldd;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (i = 0; i < x.length; i += 16) {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n  return [a, b, c, d];\n}\n\n\/**\n * Convert an array of little-endian words to a string\n *\n * @param {Array<number>} input MD5 Array\n * @returns {string} MD5 string\n *\/\nfunction binl2rstr(input) {\n  let i;\n  let output = '';\n  const length32 = input.length * 32;\n  for (i = 0; i < length32; i += 8) {\n    output += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff);\n  }\n  return output;\n}\n\n\/**\n * Convert a raw string to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n *\n * @param {string} input Raw input string\n * @returns {Array<number>} Array of little-endian words\n *\/\nfunction rstr2binl(input) {\n  let i;\n  const output = [];\n  output[(input.length >> 2) - 1] = undefined;\n  for (i = 0; i < output.length; i += 1) {\n    output[i] = 0;\n  }\n  const length8 = input.length * 8;\n  for (i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input.charCodeAt(i \/ 8) & 0xff) << i % 32;\n  }\n  return output;\n}\n\n\/**\n * Calculate the MD5 of a raw string\n *\n * @param {string} s Input string\n * @returns {string} Raw MD5 string\n *\/\nfunction rstrMD5(s) {\n  return binl2rstr(binlMD5(rstr2binl(s), s.length * 8));\n}\n\nfunction str2rstrUTF8(input) {\n  return unescape(encodeURIComponent(input));\n}\n\nfunction rawMD5(s) {\n  return rstrMD5(str2rstrUTF8(s));\n}\n\nfunction rstr2hex(input) {\n  const hexTab = '0123456789abcdef';\n  let output = '';\n  let x, i;\n  for (i = 0; i < input.length; i += 1) {\n    x = input.charCodeAt(i);\n    output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);\n  }\n  return output;\n}\n\n\/**\n * Encodes input string as Hex encoded string\n *\n * @param {string} s Input string\n * @returns {string} Hex encoded string\n *\/\nexport function hexMD5(s) {\n  return rstr2hex(rawMD5(s));\n}\n"}
{"hexsha":"8b4ef4c0e38eb2eda855d4ccf784520014bf67eb","size":3651,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/math\/polyk.ts","max_stars_repo_name":"pmndrs\/p2-es","max_stars_repo_head_hexsha":"ddd39c5ef8b5edf945b90adc4b37b48e4d0b3ac5","max_stars_repo_licenses":["MIT"],"max_stars_count":33.0,"max_stars_repo_stars_event_min_datetime":"2022-01-01T19:59:57.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-16T05:36:49.000Z","max_issues_repo_path":"src\/math\/polyk.ts","max_issues_repo_name":"pmndrs\/p2-es","max_issues_repo_head_hexsha":"ddd39c5ef8b5edf945b90adc4b37b48e4d0b3ac5","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/math\/polyk.ts","max_forks_repo_name":"pmndrs\/p2-es","max_forks_repo_head_hexsha":"ddd39c5ef8b5edf945b90adc4b37b48e4d0b3ac5","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/*\n    PolyK library\n    url: http:\/\/polyk.ivank.net\n    Released under MIT licence.\n\n    Copyright (c) 2012 Ivan Kuckir\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without\n    restriction, including without limitation the rights to use,\n    copy, modify, merge, publish, distribute, sublicense, and\/or sell\n    copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following\n    conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n*\/\n\nexport function getArea(p: number[]): number {\n    if (p.length < 6) return 0\n    const l = p.length - 2\n    let sum = 0\n    for (let i = 0; i < l; i += 2) sum += (p[i + 2] - p[i]) * (p[i + 1] + p[i + 3])\n    sum += (p[0] - p[l]) * (p[l + 1] + p[1])\n    return -sum * 0.5\n}\n\nexport function triangulate(p: number[]): number[] {\n    const n = p.length >> 1\n    if (n < 3) return []\n    const tgs = []\n    const avl = []\n    for (let i = 0; i < n; i++) avl.push(i)\n\n    let i = 0\n    let al = n\n    while (al > 3) {\n        const i0 = avl[(i + 0) % al]\n        const i1 = avl[(i + 1) % al]\n        const i2 = avl[(i + 2) % al]\n\n        const ax = p[2 * i0],\n            ay = p[2 * i0 + 1]\n        const bx = p[2 * i1],\n            by = p[2 * i1 + 1]\n        const cx = p[2 * i2],\n            cy = p[2 * i2 + 1]\n\n        let earFound = false\n        if (convex(ax, ay, bx, by, cx, cy)) {\n            earFound = true\n            for (let j = 0; j < al; j++) {\n                const vi = avl[j]\n                if (vi == i0 || vi == i1 || vi == i2) continue\n                if (pointInTriangle(p[2 * vi], p[2 * vi + 1], ax, ay, bx, by, cx, cy)) {\n                    earFound = false\n                    break\n                }\n            }\n        }\n        if (earFound) {\n            tgs.push(i0, i1, i2)\n            avl.splice((i + 1) % al, 1)\n            al--\n            i = 0\n        } else if (i++ > 3 * al) break \/\/ no convex angles :(\n    }\n    tgs.push(avl[0], avl[1], avl[2])\n    return tgs\n}\n\nfunction pointInTriangle(\n    px: number,\n    py: number,\n    ax: number,\n    ay: number,\n    bx: number,\n    by: number,\n    cx: number,\n    cy: number\n): boolean {\n    const v0x = cx - ax\n    const v0y = cy - ay\n    const v1x = bx - ax\n    const v1y = by - ay\n    const v2x = px - ax\n    const v2y = py - ay\n\n    const dot00 = v0x * v0x + v0y * v0y\n    const dot01 = v0x * v1x + v0y * v1y\n    const dot02 = v0x * v2x + v0y * v2y\n    const dot11 = v1x * v1x + v1y * v1y\n    const dot12 = v1x * v2x + v1y * v2y\n\n    const invDenom = 1 \/ (dot00 * dot11 - dot01 * dot01)\n    const u = (dot11 * dot02 - dot01 * dot12) * invDenom\n    const v = (dot00 * dot12 - dot01 * dot02) * invDenom\n\n    \/\/ Check if point is in triangle\n    return u >= 0 && v >= 0 && u + v < 1\n}\n\nfunction convex(ax: number, ay: number, bx: number, by: number, cx: number, cy: number): boolean {\n    return (ay - by) * (cx - bx) + (bx - ax) * (cy - by) >= 0\n}\n","avg_line_length":31.2051282051,"max_line_length":98,"alphanum_fraction":0.5456039441,"loc":77,"functions":4,"function_signatures":0,"function_parameters":16,"variable_declarations":35,"property_declarations":0,"function_usages":2,"trivial_types":0,"predefined_types":20,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":15.0,"estimated_tokens":1184,"fun_ann_density":0.0168918919,"var_ann_density":0.0295608108,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.3636363636,"metric":0.3062366286,"content_without_annotations":"\/*\n    PolyK library\n    url: http:\/\/polyk.ivank.net\n    Released under MIT licence.\n\n    Copyright (c) 2012 Ivan Kuckir\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without\n    restriction, including without limitation the rights to use,\n    copy, modify, merge, publish, distribute, sublicense, and\/or sell\n    copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following\n    conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n*\/\n\nexport function getArea(p) {\n    if (p.length < 6) return 0\n    const l = p.length - 2\n    let sum = 0\n    for (let i = 0; i < l; i += 2) sum += (p[i + 2] - p[i]) * (p[i + 1] + p[i + 3])\n    sum += (p[0] - p[l]) * (p[l + 1] + p[1])\n    return -sum * 0.5\n}\n\nexport function triangulate(p) {\n    const n = p.length >> 1\n    if (n < 3) return []\n    const tgs = []\n    const avl = []\n    for (let i = 0; i < n; i++) avl.push(i)\n\n    let i = 0\n    let al = n\n    while (al > 3) {\n        const i0 = avl[(i + 0) % al]\n        const i1 = avl[(i + 1) % al]\n        const i2 = avl[(i + 2) % al]\n\n        const ax = p[2 * i0],\n            ay = p[2 * i0 + 1]\n        const bx = p[2 * i1],\n            by = p[2 * i1 + 1]\n        const cx = p[2 * i2],\n            cy = p[2 * i2 + 1]\n\n        let earFound = false\n        if (convex(ax, ay, bx, by, cx, cy)) {\n            earFound = true\n            for (let j = 0; j < al; j++) {\n                const vi = avl[j]\n                if (vi == i0 || vi == i1 || vi == i2) continue\n                if (pointInTriangle(p[2 * vi], p[2 * vi + 1], ax, ay, bx, by, cx, cy)) {\n                    earFound = false\n                    break\n                }\n            }\n        }\n        if (earFound) {\n            tgs.push(i0, i1, i2)\n            avl.splice((i + 1) % al, 1)\n            al--\n            i = 0\n        } else if (i++ > 3 * al) break \/\/ no convex angles :(\n    }\n    tgs.push(avl[0], avl[1], avl[2])\n    return tgs\n}\n\nfunction pointInTriangle(\n    px,\n    py,\n    ax,\n    ay,\n    bx,\n    by,\n    cx,\n    cy\n) {\n    const v0x = cx - ax\n    const v0y = cy - ay\n    const v1x = bx - ax\n    const v1y = by - ay\n    const v2x = px - ax\n    const v2y = py - ay\n\n    const dot00 = v0x * v0x + v0y * v0y\n    const dot01 = v0x * v1x + v0y * v1y\n    const dot02 = v0x * v2x + v0y * v2y\n    const dot11 = v1x * v1x + v1y * v1y\n    const dot12 = v1x * v2x + v1y * v2y\n\n    const invDenom = 1 \/ (dot00 * dot11 - dot01 * dot01)\n    const u = (dot11 * dot02 - dot01 * dot12) * invDenom\n    const v = (dot00 * dot12 - dot01 * dot02) * invDenom\n\n    \/\/ Check if point is in triangle\n    return u >= 0 && v >= 0 && u + v < 1\n}\n\nfunction convex(ax, ay, bx, by, cx, cy) {\n    return (ay - by) * (cx - bx) + (bx - ax) * (cy - by) >= 0\n}\n"}
{"hexsha":"6b2e48994d25dfb77d9f951487af828409217c22","size":2523,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/workflows\/generator-based.ts","max_stars_repo_name":"artemeknyazev\/ts-experiments","max_stars_repo_head_hexsha":"76f09b108bbfe81283d8e93691250859fd1ca00e","max_stars_repo_licenses":["MIT"],"max_stars_count":2.0,"max_stars_repo_stars_event_min_datetime":"2022-01-01T22:08:39.000Z","max_stars_repo_stars_event_max_datetime":"2022-01-31T17:22:24.000Z","max_issues_repo_path":"src\/workflows\/generator-based.ts","max_issues_repo_name":"artemeknyazev\/ts-experiments","max_issues_repo_head_hexsha":"76f09b108bbfe81283d8e93691250859fd1ca00e","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/workflows\/generator-based.ts","max_forks_repo_name":"artemeknyazev\/ts-experiments","max_forks_repo_head_hexsha":"76f09b108bbfe81283d8e93691250859fd1ca00e","max_forks_repo_licenses":["MIT"],"max_forks_count":1.0,"max_forks_repo_forks_event_min_datetime":"2022-01-01T22:08:42.000Z","max_forks_repo_forks_event_max_datetime":"2022-01-01T22:08:42.000Z","content":"\/* Types *\/\n\ntype Tx<T> = () => Promise<T>;\ntype Cx = () => Promise<unknown>;\n\nexport class ReadOnly<T> {\n  constructor(public tx: Tx<T>) {}\n}\n\nexport class Mutating<T> {\n  constructor(public tx: Tx<T>, public cx: Cx) {}\n}\n\nexport class Pivot<T> {\n  constructor(public tx: Tx<T>) {}\n}\n\ntype Step<T> = ReadOnly<T> | Mutating<T> | Pivot<T>;\n\nexport type Workflow = Generator<Step<any>, void, any>;\n\n\/* Constructors *\/\n\nexport const readOnly = <T>(tx: Tx<T>): ReadOnly<T> => new ReadOnly<T>(tx);\n\nexport const mutating = <T>(tx: Tx<T>, cx: Cx): Mutating<T> =>\n  new Mutating<T>(tx, cx);\n\nexport const pivot = <T>(tx: Tx<T>): Pivot<T> => new Pivot<T>(tx);\n\n\/* Workflow executor *\/\n\nexport async function run(workflow: Workflow): Promise<void> {\n  \/\/ a list of compensating functions\n  let cxs: Cx[] = [];\n  \/\/ a number of pivot operations happened during the workflow\n  let nPivots: number = 0;\n  \/\/ should the workflow be unrolled\n  let unrollReason: unknown;\n\n  let next: IteratorResult<Step<unknown>>;\n  let res: unknown;\n\n  try {\n    next = workflow.next();\n  } catch (e) {\n    unrollReason = e;\n  }\n\n  while (!unrollReason && !next!.done) {\n    const flow = next!.value;\n\n    try {\n      \/\/ execute async operation\n      res = await flow.tx();\n    } catch (e1) {\n      \/\/ async exception caught\n      try {\n        \/\/ try rethrowing into workflow -- this acquires a next workflow step;\n        \/\/ compensating operation is not added, because the atomic forward\n        \/\/ operation didn't succeed, so nothing to compensate\n        next = workflow.throw(e1);\n        continue;\n      } catch (e2) {\n        \/\/ rethrowing didn't succeed, unroll\n        unrollReason = e2;\n        break;\n      }\n    }\n\n    \/\/ async operation succeeds, register its aftereffects\n    if (flow instanceof Mutating) {\n      cxs.push(flow.cx);\n    } else if (flow instanceof Pivot) {\n      nPivots++;\n    }\n\n    \/\/ try acquiring next workflow step\n    try {\n      next = workflow.next(res);\n      continue;\n    } catch (e) {\n      \/\/ caught a sync exception that is not caught inside workflow, unroll\n      unrollReason = e;\n      break;\n    }\n  }\n\n  \/\/ unroll if error happened\n  if (unrollReason) {\n    \/\/ workflow is not revertible if there were completed pivot operations\n    if (nPivots) {\n      throw unrollReason;\n    }\n\n    for (const cx of cxs.reverse()) {\n      \/\/ compensating function error means the state is unknown\n      \/\/ this can only be handled by a caller, so no try-catch\n      await cx();\n    }\n    throw unrollReason;\n  }\n}\n","avg_line_length":24.2596153846,"max_line_length":78,"alphanum_fraction":0.6123662307,"loc":64,"functions":7,"function_signatures":0,"function_parameters":9,"variable_declarations":9,"property_declarations":0,"function_usages":0,"trivial_types":2,"predefined_types":7,"type_definitions":7,"dynamism_heuristic":2,"loc_per_function":6.8571428571,"estimated_tokens":719,"fun_ann_density":0.0222531293,"var_ann_density":0.0125173853,"prop_ann_density":0.0,"typedef_density":0.0097357441,"dynamism_density":0.0027816412,"trivial_density":0.08,"predefined_density":0.28,"metric":0.2766673231,"content_without_annotations":"\/* Types *\/\n\ntype Tx<T> = () => Promise<T>;\ntype Cx = () => Promise<unknown>;\n\nexport class ReadOnly<T> {\n  constructor(public tx) {}\n}\n\nexport class Mutating<T> {\n  constructor(public tx, public cx) {}\n}\n\nexport class Pivot<T> {\n  constructor(public tx) {}\n}\n\ntype Step<T> = ReadOnly<T> | Mutating<T> | Pivot<T>;\n\nexport type Workflow = Generator<Step<any>, void, any>;\n\n\/* Constructors *\/\n\nexport const readOnly = <T>(tx) => new ReadOnly<T>(tx);\n\nexport const mutating = <T>(tx, cx) =>\n  new Mutating<T>(tx, cx);\n\nexport const pivot = <T>(tx) => new Pivot<T>(tx);\n\n\/* Workflow executor *\/\n\nexport async function run(workflow) {\n  \/\/ a list of compensating functions\n  let cxs = [];\n  \/\/ a number of pivot operations happened during the workflow\n  let nPivots = 0;\n  \/\/ should the workflow be unrolled\n  let unrollReason;\n\n  let next;\n  let res;\n\n  try {\n    next = workflow.next();\n  } catch (e) {\n    unrollReason = e;\n  }\n\n  while (!unrollReason && !next!.done) {\n    const flow = next!.value;\n\n    try {\n      \/\/ execute async operation\n      res = await flow.tx();\n    } catch (e1) {\n      \/\/ async exception caught\n      try {\n        \/\/ try rethrowing into workflow -- this acquires a next workflow step;\n        \/\/ compensating operation is not added, because the atomic forward\n        \/\/ operation didn't succeed, so nothing to compensate\n        next = workflow.throw(e1);\n        continue;\n      } catch (e2) {\n        \/\/ rethrowing didn't succeed, unroll\n        unrollReason = e2;\n        break;\n      }\n    }\n\n    \/\/ async operation succeeds, register its aftereffects\n    if (flow instanceof Mutating) {\n      cxs.push(flow.cx);\n    } else if (flow instanceof Pivot) {\n      nPivots++;\n    }\n\n    \/\/ try acquiring next workflow step\n    try {\n      next = workflow.next(res);\n      continue;\n    } catch (e) {\n      \/\/ caught a sync exception that is not caught inside workflow, unroll\n      unrollReason = e;\n      break;\n    }\n  }\n\n  \/\/ unroll if error happened\n  if (unrollReason) {\n    \/\/ workflow is not revertible if there were completed pivot operations\n    if (nPivots) {\n      throw unrollReason;\n    }\n\n    for (const cx of cxs.reverse()) {\n      \/\/ compensating function error means the state is unknown\n      \/\/ this can only be handled by a caller, so no try-catch\n      await cx();\n    }\n    throw unrollReason;\n  }\n}\n"}
{"hexsha":"965e83a1049aa861ae1352eb63a9125c0484c287","size":7581,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"sdk\/communication\/communication-common\/src\/identifierModels.ts","max_stars_repo_name":"WeiJun428\/azure-sdk-for-js","max_stars_repo_head_hexsha":"e825fade0eafebf20a5128ef8466acc0d2bcc496","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-01-12T08:35:43.000Z","max_stars_repo_stars_event_max_datetime":"2022-01-12T08:35:43.000Z","max_issues_repo_path":"sdk\/communication\/communication-common\/src\/identifierModels.ts","max_issues_repo_name":"WeiJun428\/azure-sdk-for-js","max_issues_repo_head_hexsha":"e825fade0eafebf20a5128ef8466acc0d2bcc496","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"sdk\/communication\/communication-common\/src\/identifierModels.ts","max_forks_repo_name":"WeiJun428\/azure-sdk-for-js","max_forks_repo_head_hexsha":"e825fade0eafebf20a5128ef8466acc0d2bcc496","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/\/ Copyright (c) Microsoft Corporation.\n\/\/ Licensed under the MIT license.\n\n\/**\n * Identifies a communication participant.\n *\/\nexport type CommunicationIdentifier =\n  | CommunicationUserIdentifier\n  | PhoneNumberIdentifier\n  | MicrosoftTeamsUserIdentifier\n  | UnknownIdentifier;\n\n\/**\n * An Azure Communication user.\n *\/\nexport interface CommunicationUserIdentifier {\n  \/**\n   * Id of the CommunicationUser as returned from the Communication Service.\n   *\/\n  communicationUserId: string;\n}\n\n\/**\n * A phone number.\n *\/\nexport interface PhoneNumberIdentifier {\n  \/**\n   * Optional raw id of the phone number.\n   *\/\n  rawId?: string;\n  \/**\n   * The phone number in E.164 format.\n   *\/\n  phoneNumber: string;\n}\n\n\/**\n * A Microsoft Teams user.\n *\/\nexport interface MicrosoftTeamsUserIdentifier {\n  \/**\n   * Optional raw id of the Microsoft Teams user.\n   *\/\n  rawId?: string;\n\n  \/**\n   * Id of the Microsoft Teams user. If the user isn't anonymous, the id is the AAD object id of the user.\n   *\/\n  microsoftTeamsUserId: string;\n\n  \/**\n   * True if the user is anonymous, for example when joining a meeting with a share link. If missing, the user is not anonymous.\n   *\/\n  isAnonymous?: boolean;\n\n  \/**\n   * The cloud that the Microsoft Teams user belongs to. If missing, the cloud is \"public\".\n   *\/\n  cloud?: \"public\" | \"dod\" | \"gcch\";\n}\n\n\/**\n * An unknown identifier that doesn't fit any of the other identifier types.\n *\/\nexport interface UnknownIdentifier {\n  \/**\n   * Id of the UnknownIdentifier.\n   *\/\n  id: string;\n}\n\n\/**\n * Tests an Identifier to determine whether it implements CommunicationUserIdentifier.\n *\n * @param identifier - The assumed CommunicationUserIdentifier to be tested.\n *\/\nexport const isCommunicationUserIdentifier = (\n  identifier: CommunicationIdentifier\n): identifier is CommunicationUserIdentifier => {\n  return typeof (identifier as any).communicationUserId === \"string\";\n};\n\n\/**\n * Tests an Identifier to determine whether it implements PhoneNumberIdentifier.\n *\n * @param identifier - The assumed PhoneNumberIdentifier to be tested.\n *\/\nexport const isPhoneNumberIdentifier = (\n  identifier: CommunicationIdentifier\n): identifier is PhoneNumberIdentifier => {\n  return typeof (identifier as any).phoneNumber === \"string\";\n};\n\n\/**\n * Tests an Identifier to determine whether it implements MicrosoftTeamsUserIdentifier.\n *\n * @param identifier - The assumed available to be tested.\n *\/\nexport const isMicrosoftTeamsUserIdentifier = (\n  identifier: CommunicationIdentifier\n): identifier is MicrosoftTeamsUserIdentifier => {\n  return typeof (identifier as any).microsoftTeamsUserId === \"string\";\n};\n\n\/**\n * Tests an Identifier to determine whether it implements UnknownIdentifier.\n *\n * @param identifier - The assumed UnknownIdentifier to be tested.\n *\/\nexport const isUnknownIdentifier = (\n  identifier: CommunicationIdentifier\n): identifier is UnknownIdentifier => {\n  return typeof (identifier as any).id === \"string\";\n};\n\n\/**\n * The CommunicationIdentifierKind is a discriminated union that adds a property `kind` to an Identifier.\n *\/\nexport type CommunicationIdentifierKind =\n  | CommunicationUserKind\n  | PhoneNumberKind\n  | MicrosoftTeamsUserKind\n  | UnknownIdentifierKind;\n\n\/**\n * IdentifierKind for a CommunicationUserIdentifier.\n *\/\nexport interface CommunicationUserKind extends CommunicationUserIdentifier {\n  \/**\n   * The identifier kind.\n   *\/\n  kind: \"communicationUser\";\n}\n\n\/**\n * IdentifierKind for a PhoneNumberIdentifier.\n *\/\nexport interface PhoneNumberKind extends PhoneNumberIdentifier {\n  \/**\n   * The identifier kind.\n   *\/\n  kind: \"phoneNumber\";\n}\n\n\/**\n * IdentifierKind for a MicrosoftTeamsUserIdentifier.\n *\/\nexport interface MicrosoftTeamsUserKind extends MicrosoftTeamsUserIdentifier {\n  \/**\n   * The identifier kind.\n   *\/\n  kind: \"microsoftTeamsUser\";\n}\n\n\/**\n * IdentifierKind for UnknownIdentifier.\n *\/\nexport interface UnknownIdentifierKind extends UnknownIdentifier {\n  \/**\n   * The identifier kind.\n   *\/\n  kind: \"unknown\";\n}\n\n\/**\n * Returns the CommunicationIdentifierKind for a given CommunicationIdentifier. Returns undefined if the kind couldn't be inferred.\n *\n * @param identifier - The identifier whose kind is to be inferred.\n *\/\nexport const getIdentifierKind = (\n  identifier: CommunicationIdentifier\n): CommunicationIdentifierKind => {\n  if (isCommunicationUserIdentifier(identifier)) {\n    return { ...identifier, kind: \"communicationUser\" };\n  }\n  if (isPhoneNumberIdentifier(identifier)) {\n    return { ...identifier, kind: \"phoneNumber\" };\n  }\n  if (isMicrosoftTeamsUserIdentifier(identifier)) {\n    return { ...identifier, kind: \"microsoftTeamsUser\" };\n  }\n  return { ...identifier, kind: \"unknown\" };\n};\n\n\/**\n * Returns the rawId for a given CommunicationIdentifier. You can use the rawId for encoding the identifier and then use it as a key in a database.\n *\n * @param identifier - The identifier to be translated to its rawId.\n *\/\nexport const getIdentifierRawId = (identifier: CommunicationIdentifier): string => {\n  const identifierKind = getIdentifierKind(identifier);\n  switch (identifierKind.kind) {\n    case \"communicationUser\":\n      return identifierKind.communicationUserId;\n    case \"microsoftTeamsUser\": {\n      const { microsoftTeamsUserId, rawId, cloud, isAnonymous } = identifierKind;\n      if (rawId) return rawId;\n      if (isAnonymous) return `8:teamsvisitor:${microsoftTeamsUserId}`;\n      switch (cloud) {\n        case \"dod\":\n          return `8:dod:${microsoftTeamsUserId}`;\n        case \"gcch\":\n          return `8:gcch:${microsoftTeamsUserId}`;\n        case \"public\":\n          return `8:orgid:${microsoftTeamsUserId}`;\n      }\n      return `8:orgid:${microsoftTeamsUserId}`;\n    }\n    case \"phoneNumber\": {\n      const { phoneNumber, rawId } = identifierKind;\n      if (rawId) return rawId;\n      \/\/ strip the leading +. We just assume correct E.164 format here because validation should only happen server-side, not client-side.\n      return `4:${phoneNumber.replace(\/^\\+\/, \"\")}`;\n    }\n    case \"unknown\": {\n      return identifierKind.id;\n    }\n  }\n};\n\n\/**\n * Creates a CommunicationIdentifierKind from a given rawId. When storing rawIds use this function to restore the identifier that was encoded in the rawId.\n *\n * @param rawId - The rawId to be translated to its identifier representation.\n *\/\nexport const createIdentifierFromRawId = (rawId: string): CommunicationIdentifierKind => {\n  if (rawId.startsWith(\"4:\")) {\n    return { kind: \"phoneNumber\", phoneNumber: `+${rawId.substring(\"4:\".length)}` };\n  }\n\n  const segments = rawId.split(\":\");\n  if (segments.length < 3) return { kind: \"unknown\", id: rawId };\n\n  const prefix = `${segments[0]}:${segments[1]}:`;\n  const suffix = rawId.substring(prefix.length);\n\n  switch (prefix) {\n    case \"8:teamsvisitor:\":\n      return { kind: \"microsoftTeamsUser\", microsoftTeamsUserId: suffix, isAnonymous: true };\n    case \"8:orgid:\":\n      return {\n        kind: \"microsoftTeamsUser\",\n        microsoftTeamsUserId: suffix,\n        isAnonymous: false,\n        cloud: \"public\",\n      };\n    case \"8:dod:\":\n      return {\n        kind: \"microsoftTeamsUser\",\n        microsoftTeamsUserId: suffix,\n        isAnonymous: false,\n        cloud: \"dod\",\n      };\n    case \"8:gcch:\":\n      return {\n        kind: \"microsoftTeamsUser\",\n        microsoftTeamsUserId: suffix,\n        isAnonymous: false,\n        cloud: \"gcch\",\n      };\n    case \"8:acs:\":\n    case \"8:spool:\":\n    case \"8:dod-acs:\":\n    case \"8:gcch-acs:\":\n      return { kind: \"communicationUser\", communicationUserId: rawId };\n  }\n  return { kind: \"unknown\", id: rawId };\n};\n","avg_line_length":28.1821561338,"max_line_length":155,"alphanum_fraction":0.6925207756,"loc":141,"functions":7,"function_signatures":0,"function_parameters":7,"variable_declarations":13,"property_declarations":12,"function_usages":4,"trivial_types":4,"predefined_types":9,"type_definitions":10,"dynamism_heuristic":8,"loc_per_function":11.2857142857,"estimated_tokens":1800,"fun_ann_density":0.0077777778,"var_ann_density":0.0072222222,"prop_ann_density":0.0066666667,"typedef_density":0.0055555556,"dynamism_density":0.0044444444,"trivial_density":0.1025641026,"predefined_density":0.2307692308,"metric":0.2192267583,"content_without_annotations":"\/\/ Copyright (c) Microsoft Corporation.\n\/\/ Licensed under the MIT license.\n\n\/**\n * Identifies a communication participant.\n *\/\nexport type CommunicationIdentifier =\n  | CommunicationUserIdentifier\n  | PhoneNumberIdentifier\n  | MicrosoftTeamsUserIdentifier\n  | UnknownIdentifier;\n\n\/**\n * An Azure Communication user.\n *\/\nexport interface CommunicationUserIdentifier {\n  \/**\n   * Id of the CommunicationUser as returned from the Communication Service.\n   *\/\n  communicationUserId;\n}\n\n\/**\n * A phone number.\n *\/\nexport interface PhoneNumberIdentifier {\n  \/**\n   * Optional raw id of the phone number.\n   *\/\n  rawId?;\n  \/**\n   * The phone number in E.164 format.\n   *\/\n  phoneNumber;\n}\n\n\/**\n * A Microsoft Teams user.\n *\/\nexport interface MicrosoftTeamsUserIdentifier {\n  \/**\n   * Optional raw id of the Microsoft Teams user.\n   *\/\n  rawId?;\n\n  \/**\n   * Id of the Microsoft Teams user. If the user isn't anonymous, the id is the AAD object id of the user.\n   *\/\n  microsoftTeamsUserId;\n\n  \/**\n   * True if the user is anonymous, for example when joining a meeting with a share link. If missing, the user is not anonymous.\n   *\/\n  isAnonymous?;\n\n  \/**\n   * The cloud that the Microsoft Teams user belongs to. If missing, the cloud is \"public\".\n   *\/\n  cloud?;\n}\n\n\/**\n * An unknown identifier that doesn't fit any of the other identifier types.\n *\/\nexport interface UnknownIdentifier {\n  \/**\n   * Id of the UnknownIdentifier.\n   *\/\n  id;\n}\n\n\/**\n * Tests an Identifier to determine whether it implements CommunicationUserIdentifier.\n *\n * @param identifier - The assumed CommunicationUserIdentifier to be tested.\n *\/\nexport const isCommunicationUserIdentifier = (\n  identifier\n): identifier is CommunicationUserIdentifier => {\n  return typeof (identifier as any).communicationUserId === \"string\";\n};\n\n\/**\n * Tests an Identifier to determine whether it implements PhoneNumberIdentifier.\n *\n * @param identifier - The assumed PhoneNumberIdentifier to be tested.\n *\/\nexport const isPhoneNumberIdentifier = (\n  identifier\n): identifier is PhoneNumberIdentifier => {\n  return typeof (identifier as any).phoneNumber === \"string\";\n};\n\n\/**\n * Tests an Identifier to determine whether it implements MicrosoftTeamsUserIdentifier.\n *\n * @param identifier - The assumed available to be tested.\n *\/\nexport const isMicrosoftTeamsUserIdentifier = (\n  identifier\n): identifier is MicrosoftTeamsUserIdentifier => {\n  return typeof (identifier as any).microsoftTeamsUserId === \"string\";\n};\n\n\/**\n * Tests an Identifier to determine whether it implements UnknownIdentifier.\n *\n * @param identifier - The assumed UnknownIdentifier to be tested.\n *\/\nexport const isUnknownIdentifier = (\n  identifier\n): identifier is UnknownIdentifier => {\n  return typeof (identifier as any).id === \"string\";\n};\n\n\/**\n * The CommunicationIdentifierKind is a discriminated union that adds a property `kind` to an Identifier.\n *\/\nexport type CommunicationIdentifierKind =\n  | CommunicationUserKind\n  | PhoneNumberKind\n  | MicrosoftTeamsUserKind\n  | UnknownIdentifierKind;\n\n\/**\n * IdentifierKind for a CommunicationUserIdentifier.\n *\/\nexport interface CommunicationUserKind extends CommunicationUserIdentifier {\n  \/**\n   * The identifier kind.\n   *\/\n  kind;\n}\n\n\/**\n * IdentifierKind for a PhoneNumberIdentifier.\n *\/\nexport interface PhoneNumberKind extends PhoneNumberIdentifier {\n  \/**\n   * The identifier kind.\n   *\/\n  kind;\n}\n\n\/**\n * IdentifierKind for a MicrosoftTeamsUserIdentifier.\n *\/\nexport interface MicrosoftTeamsUserKind extends MicrosoftTeamsUserIdentifier {\n  \/**\n   * The identifier kind.\n   *\/\n  kind;\n}\n\n\/**\n * IdentifierKind for UnknownIdentifier.\n *\/\nexport interface UnknownIdentifierKind extends UnknownIdentifier {\n  \/**\n   * The identifier kind.\n   *\/\n  kind;\n}\n\n\/**\n * Returns the CommunicationIdentifierKind for a given CommunicationIdentifier. Returns undefined if the kind couldn't be inferred.\n *\n * @param identifier - The identifier whose kind is to be inferred.\n *\/\nexport const getIdentifierKind = (\n  identifier\n) => {\n  if (isCommunicationUserIdentifier(identifier)) {\n    return { ...identifier, kind: \"communicationUser\" };\n  }\n  if (isPhoneNumberIdentifier(identifier)) {\n    return { ...identifier, kind: \"phoneNumber\" };\n  }\n  if (isMicrosoftTeamsUserIdentifier(identifier)) {\n    return { ...identifier, kind: \"microsoftTeamsUser\" };\n  }\n  return { ...identifier, kind: \"unknown\" };\n};\n\n\/**\n * Returns the rawId for a given CommunicationIdentifier. You can use the rawId for encoding the identifier and then use it as a key in a database.\n *\n * @param identifier - The identifier to be translated to its rawId.\n *\/\nexport const getIdentifierRawId = (identifier) => {\n  const identifierKind = getIdentifierKind(identifier);\n  switch (identifierKind.kind) {\n    case \"communicationUser\":\n      return identifierKind.communicationUserId;\n    case \"microsoftTeamsUser\": {\n      const { microsoftTeamsUserId, rawId, cloud, isAnonymous } = identifierKind;\n      if (rawId) return rawId;\n      if (isAnonymous) return `8:teamsvisitor:${microsoftTeamsUserId}`;\n      switch (cloud) {\n        case \"dod\":\n          return `8:dod:${microsoftTeamsUserId}`;\n        case \"gcch\":\n          return `8:gcch:${microsoftTeamsUserId}`;\n        case \"public\":\n          return `8:orgid:${microsoftTeamsUserId}`;\n      }\n      return `8:orgid:${microsoftTeamsUserId}`;\n    }\n    case \"phoneNumber\": {\n      const { phoneNumber, rawId } = identifierKind;\n      if (rawId) return rawId;\n      \/\/ strip the leading +. We just assume correct E.164 format here because validation should only happen server-side, not client-side.\n      return `4:${phoneNumber.replace(\/^\\+\/, \"\")}`;\n    }\n    case \"unknown\": {\n      return identifierKind.id;\n    }\n  }\n};\n\n\/**\n * Creates a CommunicationIdentifierKind from a given rawId. When storing rawIds use this function to restore the identifier that was encoded in the rawId.\n *\n * @param rawId - The rawId to be translated to its identifier representation.\n *\/\nexport const createIdentifierFromRawId = (rawId) => {\n  if (rawId.startsWith(\"4:\")) {\n    return { kind: \"phoneNumber\", phoneNumber: `+${rawId.substring(\"4:\".length)}` };\n  }\n\n  const segments = rawId.split(\":\");\n  if (segments.length < 3) return { kind: \"unknown\", id: rawId };\n\n  const prefix = `${segments[0]}:${segments[1]}:`;\n  const suffix = rawId.substring(prefix.length);\n\n  switch (prefix) {\n    case \"8:teamsvisitor:\":\n      return { kind: \"microsoftTeamsUser\", microsoftTeamsUserId: suffix, isAnonymous: true };\n    case \"8:orgid:\":\n      return {\n        kind: \"microsoftTeamsUser\",\n        microsoftTeamsUserId: suffix,\n        isAnonymous: false,\n        cloud: \"public\",\n      };\n    case \"8:dod:\":\n      return {\n        kind: \"microsoftTeamsUser\",\n        microsoftTeamsUserId: suffix,\n        isAnonymous: false,\n        cloud: \"dod\",\n      };\n    case \"8:gcch:\":\n      return {\n        kind: \"microsoftTeamsUser\",\n        microsoftTeamsUserId: suffix,\n        isAnonymous: false,\n        cloud: \"gcch\",\n      };\n    case \"8:acs:\":\n    case \"8:spool:\":\n    case \"8:dod-acs:\":\n    case \"8:gcch-acs:\":\n      return { kind: \"communicationUser\", communicationUserId: rawId };\n  }\n  return { kind: \"unknown\", id: rawId };\n};\n"}
{"hexsha":"e4d03cef3dbc28ce63d18957fd4779a2f080af09","size":2424,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/FileParser.ts","max_stars_repo_name":"alegemaate\/allegrots","max_stars_repo_head_hexsha":"b041e90198d56453afc34ec4c90b2d277d316ca1","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"src\/FileParser.ts","max_issues_repo_name":"alegemaate\/allegrots","max_issues_repo_head_hexsha":"b041e90198d56453afc34ec4c90b2d277d316ca1","max_issues_repo_licenses":["MIT"],"max_issues_count":2.0,"max_issues_repo_issues_event_min_datetime":"2022-01-15T07:26:47.000Z","max_issues_repo_issues_event_max_datetime":"2022-03-31T23:01:09.000Z","max_forks_repo_path":"src\/FileParser.ts","max_forks_repo_name":"alegemaate\/allegrots","max_forks_repo_head_hexsha":"b041e90198d56453afc34ec4c90b2d277d316ca1","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/**\n * File Parser\n *\/\nexport class FileParser {\n  \/\/ Data for parsing\n  private readonly data: DataView;\n\n  \/\/ File pointer\n  private pointer: number;\n\n  \/**\n   * Constructor\n   *\n   * @param dataView - Data to use for parsing\n   *\/\n  public constructor(dataView: DataView) {\n    this.data = dataView;\n    this.pointer = 0;\n  }\n\n  \/**\n   * Move Pointer\n   *\n   * @param bytes - How many bytes to move by\n   *\/\n  public movePointer(bytes: number): number {\n    \/\/ Move the pointer negative and positive direction\n    this.pointer += bytes;\n    return this.pointer;\n  }\n\n  \/**\n   * Read an integer from buffer\n   *\n   * @param bytes - Number of bytes to read\n   *\/\n  public readInt(bytes: number): number {\n    \/\/ Get integer from next bytes group (big-endian)\n    const clamp_bytes = Math.min(bytes, this.data.byteLength - this.pointer);\n\n    \/\/ EOF\n    if (clamp_bytes < 1) {\n      return -1;\n    }\n    let value = 0;\n    if (clamp_bytes > 1) {\n      for (let i = 1; i <= clamp_bytes - 1; i += 1) {\n        value += this.data.getUint8(this.pointer) * 256 ** (clamp_bytes - i);\n        this.pointer += 1;\n      }\n    }\n    value += this.data.getUint8(this.pointer);\n\n    this.pointer += 1;\n    return value;\n  }\n\n  \/**\n   * Read a string from buffer\n   *\n   * @param bytes - Number of bytes to read\n   *\/\n  public readStr(bytes: number): string {\n    \/\/ Read as ASCII chars, the followoing bytes\n    let text = \"\";\n    for (let char = 1; char <= bytes; char += 1)\n      text += String.fromCharCode(this.readInt(1));\n    return text;\n  }\n\n  \/**\n   * Read a variable length value\n   *\n   * @param bytes - Number of bytes to read\n   *\/\n  public readIntVLV(): number {\n    \/\/ Read a variable length value\n    let value = 0;\n    if (this.pointer >= this.data.byteLength) {\n      \/\/ EOF\n      return -1;\n    } else if (this.data.getUint8(this.pointer) < 128) {\n      \/\/ ...value in a single byte\n      value = this.readInt(1);\n    } else {\n      \/\/ ...value in multiple bytes\n      const FirstBytes: number[] = [];\n      while (this.data.getUint8(this.pointer) >= 128) {\n        FirstBytes.push(this.readInt(1) - 128);\n      }\n      const lastByte = this.readInt(1);\n      for (let dt = 1; dt <= FirstBytes.length; dt += 1) {\n        const num = FirstBytes[FirstBytes.length - dt];\n        if (typeof num === \"number\") {\n          value += num * 128 ** dt;\n        }\n      }\n      value += lastByte;\n    }\n    return value;\n  }\n}\n","avg_line_length":23.5339805825,"max_line_length":77,"alphanum_fraction":0.5697194719,"loc":56,"functions":5,"function_signatures":0,"function_parameters":4,"variable_declarations":10,"property_declarations":2,"function_usages":1,"trivial_types":0,"predefined_types":9,"type_definitions":1,"dynamism_heuristic":1,"loc_per_function":8.4,"estimated_tokens":688,"fun_ann_density":0.0130813953,"var_ann_density":0.0145348837,"prop_ann_density":0.0029069767,"typedef_density":0.0014534884,"dynamism_density":0.0014534884,"trivial_density":0.0,"predefined_density":0.4285714286,"metric":0.2499671971,"content_without_annotations":"\/**\n * File Parser\n *\/\nexport class FileParser {\n  \/\/ Data for parsing\n  private readonly data;\n\n  \/\/ File pointer\n  private pointer;\n\n  \/**\n   * Constructor\n   *\n   * @param dataView - Data to use for parsing\n   *\/\n  public constructor(dataView) {\n    this.data = dataView;\n    this.pointer = 0;\n  }\n\n  \/**\n   * Move Pointer\n   *\n   * @param bytes - How many bytes to move by\n   *\/\n  public movePointer(bytes) {\n    \/\/ Move the pointer negative and positive direction\n    this.pointer += bytes;\n    return this.pointer;\n  }\n\n  \/**\n   * Read an integer from buffer\n   *\n   * @param bytes - Number of bytes to read\n   *\/\n  public readInt(bytes) {\n    \/\/ Get integer from next bytes group (big-endian)\n    const clamp_bytes = Math.min(bytes, this.data.byteLength - this.pointer);\n\n    \/\/ EOF\n    if (clamp_bytes < 1) {\n      return -1;\n    }\n    let value = 0;\n    if (clamp_bytes > 1) {\n      for (let i = 1; i <= clamp_bytes - 1; i += 1) {\n        value += this.data.getUint8(this.pointer) * 256 ** (clamp_bytes - i);\n        this.pointer += 1;\n      }\n    }\n    value += this.data.getUint8(this.pointer);\n\n    this.pointer += 1;\n    return value;\n  }\n\n  \/**\n   * Read a string from buffer\n   *\n   * @param bytes - Number of bytes to read\n   *\/\n  public readStr(bytes) {\n    \/\/ Read as ASCII chars, the followoing bytes\n    let text = \"\";\n    for (let char = 1; char <= bytes; char += 1)\n      text += String.fromCharCode(this.readInt(1));\n    return text;\n  }\n\n  \/**\n   * Read a variable length value\n   *\n   * @param bytes - Number of bytes to read\n   *\/\n  public readIntVLV() {\n    \/\/ Read a variable length value\n    let value = 0;\n    if (this.pointer >= this.data.byteLength) {\n      \/\/ EOF\n      return -1;\n    } else if (this.data.getUint8(this.pointer) < 128) {\n      \/\/ ...value in a single byte\n      value = this.readInt(1);\n    } else {\n      \/\/ ...value in multiple bytes\n      const FirstBytes = [];\n      while (this.data.getUint8(this.pointer) >= 128) {\n        FirstBytes.push(this.readInt(1) - 128);\n      }\n      const lastByte = this.readInt(1);\n      for (let dt = 1; dt <= FirstBytes.length; dt += 1) {\n        const num = FirstBytes[FirstBytes.length - dt];\n        if (typeof num === \"number\") {\n          value += num * 128 ** dt;\n        }\n      }\n      value += lastByte;\n    }\n    return value;\n  }\n}\n"}
{"hexsha":"e4d360f3d4c1039bdb46a42d9a95cd24139f5154","size":2962,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/namespaces\/pathUtils.ts","max_stars_repo_name":"gmetrixr\/gdash","max_stars_repo_head_hexsha":"e2d3cacb7a34f83777a2aa333dc93397b153f6ae","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"src\/namespaces\/pathUtils.ts","max_issues_repo_name":"gmetrixr\/gdash","max_issues_repo_head_hexsha":"e2d3cacb7a34f83777a2aa333dc93397b153f6ae","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/namespaces\/pathUtils.ts","max_forks_repo_name":"gmetrixr\/gdash","max_forks_repo_head_hexsha":"e2d3cacb7a34f83777a2aa333dc93397b153f6ae","max_forks_repo_licenses":["MIT"],"max_forks_count":2.0,"max_forks_repo_forks_event_min_datetime":"2022-02-28T10:42:13.000Z","max_forks_repo_forks_event_max_datetime":"2022-03-25T05:25:54.000Z","content":"\nconst imageFormats = [\"png\", \"jpg\", \"jpeg\", \"webp\"];\nconst videoFormats = [\"mp4\", \"m4v\"];\nconst audioFormats = [\"aac\", \"mp3\", \"weba\", \"mpeg\"];\nconst threeDFormats = [\"glb\", \"gltf\"];\nconst compressedFormats = [\"zip\", \"rar\", \"tar\", \"gzip\", \"gz\", \"bz2\", \"7z\"];\nconst gifFormats = [\"gif\"];\nconst pdfFormats = [\"pdf\"];\nexport const extensionWhitelist = [...imageFormats, ...videoFormats, ...audioFormats, ...threeDFormats, ...compressedFormats, ...gifFormats, ...pdfFormats];\nexport const disallowedFileExtensions = [\"php\", \"php3\", \"php4\", \"phtml\", \"pl\", \"py\", \"jsp\", \"asp\", \"htm\", \"shtml\", \"sh\", \"cg\"];\n\nexport const allowedMimeTypes = {\n  IMAGE: [\"image\/png\", \"image\/jpg\", \"image\/jpeg\", \"image\/webp\"],\n  VIDEO: [\"video\/mp4\", \"video\/mpeg\", \"video\/x-m4v\"],\n  AUDIO: [\"audio\/aac\", \"audio\/mp3\", \"audio\/mpeg\"],\n  COMPRESSED: [\"application\/zip\", \"application\/vnd.rar\", \"application\/x-tar\", \"application\/gzip\", \"application\/x-bzip2\", \"application\/x-7z-compressed\"],\n  THREED: [\"model\/gltf+binary\", \"model\/gltf+json\"],\n  GIF: [\"image\/gif\"],\n  OTHER: [\"application\/pdf\"],\n  PDF: [\"application\/pdf\"],\n  SPRITE: [\"application\/zip\", \"application\/vnd.rar\", \"application\/x-tar\", \"application\/gzip\", \"application\/x-bzip2\", \"application\/x-7z-compressed\"],\n  SCORM: [\"application\/zip\", \"application\/vnd.rar\", \"application\/x-tar\", \"application\/gzip\", \"application\/x-bzip2\", \"application\/x-7z-compressed\"],\n};\n\nexport enum FileType {\n  IMAGE = \"IMAGE\",\n  GIF = \"GIF\",\n  VIDEO = \"VIDEO\",\n  AUDIO = \"AUDIO\",\n  THREED = \"THREED\",\n  COMPRESSED = \"COMPRESSED\",\n  PDF = \"PDF\",\n  SCORM = \"SCORM\",\n  SPRITE = \"SPRITE\",\n  OTHER = \"OTHER\",\n}\n\nexport const getFileType = (path: string): FileType => {\n  const extension = getExtension(path);\n  if (imageFormats.includes(extension)) {\n    return FileType.IMAGE;\n  } else if (videoFormats.includes(extension)) {\n    return FileType.VIDEO;\n  } else if (audioFormats.includes(extension)) {\n    return FileType.AUDIO;\n  } else if (threeDFormats.includes(extension)) {\n    return FileType.THREED;\n  } else if (compressedFormats.includes(extension)) {\n    return FileType.COMPRESSED;\n  } else if (gifFormats.includes(extension)) {\n    return FileType.GIF;\n  } else if (pdfFormats.includes(extension)) {\n    return FileType.PDF;\n  } else {\n    return FileType.OTHER;\n  }\n}\n\nexport const getExtension = (path: string): string => {\n  \/\/ remove any query params that may be in the url\n  const q = path.split(\"?\");\n  if (q.length >= 2) {\n    path = q[0];\n  }\n  const fullFileName: string = path.substring(path.lastIndexOf(\"\/\") + 1);\n  return fullFileName.substring(fullFileName.lastIndexOf(\".\") + 1).toLowerCase();\n}\n\nexport function getFilenameWithoutExtension(path: string): string {\n  const fileName: string = path.substring(path.lastIndexOf(\"\/\") + 1);\n  return fileName.substring(0, fileName.lastIndexOf(\".\"));\n}\n\nexport function getFolderPathWithoutFilename(folderPath: string): string {\n  return folderPath.substring(0, folderPath.lastIndexOf(\"\/\"));\n}","avg_line_length":38.9736842105,"max_line_length":156,"alphanum_fraction":0.6704929102,"loc":68,"functions":4,"function_signatures":0,"function_parameters":4,"variable_declarations":16,"property_declarations":0,"function_usages":1,"trivial_types":0,"predefined_types":9,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":6.75,"estimated_tokens":881,"fun_ann_density":0.0090805902,"var_ann_density":0.0181611805,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.375,"metric":0.2503864922,"content_without_annotations":"\nconst imageFormats = [\"png\", \"jpg\", \"jpeg\", \"webp\"];\nconst videoFormats = [\"mp4\", \"m4v\"];\nconst audioFormats = [\"aac\", \"mp3\", \"weba\", \"mpeg\"];\nconst threeDFormats = [\"glb\", \"gltf\"];\nconst compressedFormats = [\"zip\", \"rar\", \"tar\", \"gzip\", \"gz\", \"bz2\", \"7z\"];\nconst gifFormats = [\"gif\"];\nconst pdfFormats = [\"pdf\"];\nexport const extensionWhitelist = [...imageFormats, ...videoFormats, ...audioFormats, ...threeDFormats, ...compressedFormats, ...gifFormats, ...pdfFormats];\nexport const disallowedFileExtensions = [\"php\", \"php3\", \"php4\", \"phtml\", \"pl\", \"py\", \"jsp\", \"asp\", \"htm\", \"shtml\", \"sh\", \"cg\"];\n\nexport const allowedMimeTypes = {\n  IMAGE: [\"image\/png\", \"image\/jpg\", \"image\/jpeg\", \"image\/webp\"],\n  VIDEO: [\"video\/mp4\", \"video\/mpeg\", \"video\/x-m4v\"],\n  AUDIO: [\"audio\/aac\", \"audio\/mp3\", \"audio\/mpeg\"],\n  COMPRESSED: [\"application\/zip\", \"application\/vnd.rar\", \"application\/x-tar\", \"application\/gzip\", \"application\/x-bzip2\", \"application\/x-7z-compressed\"],\n  THREED: [\"model\/gltf+binary\", \"model\/gltf+json\"],\n  GIF: [\"image\/gif\"],\n  OTHER: [\"application\/pdf\"],\n  PDF: [\"application\/pdf\"],\n  SPRITE: [\"application\/zip\", \"application\/vnd.rar\", \"application\/x-tar\", \"application\/gzip\", \"application\/x-bzip2\", \"application\/x-7z-compressed\"],\n  SCORM: [\"application\/zip\", \"application\/vnd.rar\", \"application\/x-tar\", \"application\/gzip\", \"application\/x-bzip2\", \"application\/x-7z-compressed\"],\n};\n\nexport enum FileType {\n  IMAGE = \"IMAGE\",\n  GIF = \"GIF\",\n  VIDEO = \"VIDEO\",\n  AUDIO = \"AUDIO\",\n  THREED = \"THREED\",\n  COMPRESSED = \"COMPRESSED\",\n  PDF = \"PDF\",\n  SCORM = \"SCORM\",\n  SPRITE = \"SPRITE\",\n  OTHER = \"OTHER\",\n}\n\nexport const getFileType = (path) => {\n  const extension = getExtension(path);\n  if (imageFormats.includes(extension)) {\n    return FileType.IMAGE;\n  } else if (videoFormats.includes(extension)) {\n    return FileType.VIDEO;\n  } else if (audioFormats.includes(extension)) {\n    return FileType.AUDIO;\n  } else if (threeDFormats.includes(extension)) {\n    return FileType.THREED;\n  } else if (compressedFormats.includes(extension)) {\n    return FileType.COMPRESSED;\n  } else if (gifFormats.includes(extension)) {\n    return FileType.GIF;\n  } else if (pdfFormats.includes(extension)) {\n    return FileType.PDF;\n  } else {\n    return FileType.OTHER;\n  }\n}\n\nexport const getExtension = (path) => {\n  \/\/ remove any query params that may be in the url\n  const q = path.split(\"?\");\n  if (q.length >= 2) {\n    path = q[0];\n  }\n  const fullFileName = path.substring(path.lastIndexOf(\"\/\") + 1);\n  return fullFileName.substring(fullFileName.lastIndexOf(\".\") + 1).toLowerCase();\n}\n\nexport function getFilenameWithoutExtension(path) {\n  const fileName = path.substring(path.lastIndexOf(\"\/\") + 1);\n  return fileName.substring(0, fileName.lastIndexOf(\".\"));\n}\n\nexport function getFolderPathWithoutFilename(folderPath) {\n  return folderPath.substring(0, folderPath.lastIndexOf(\"\/\"));\n}"}
{"hexsha":"a7d2370ab8654f6a4ae33e2acb3c198102b400d1","size":2057,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/utils\/verification.ts","max_stars_repo_name":"codeluosiyu\/toa-utils","max_stars_repo_head_hexsha":"4a88a32b9a5a642ec402f7540941da39661bc604","max_stars_repo_licenses":["MIT"],"max_stars_count":35.0,"max_stars_repo_stars_event_min_datetime":"2022-03-12T16:28:38.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-24T12:02:50.000Z","max_issues_repo_path":"src\/utils\/verification.ts","max_issues_repo_name":"codeluosiyu\/toa-tools","max_issues_repo_head_hexsha":"d09a0db2a34fc9352251cdac768d89980541695b","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/utils\/verification.ts","max_forks_repo_name":"codeluosiyu\/toa-tools","max_forks_repo_head_hexsha":"d09a0db2a34fc9352251cdac768d89980541695b","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/**\n * \u8fc7\u6ee4\u8868\u60c5\n * @param name\n * @returns\n *\/\nexport const filterEmoji = (name) => {\n  const str = name.replace(\n    \/[\\uD83C|\\uD83D|\\uD83E][\\uDC00-\\uDFFF][\\u200D|\\uFE0F]|[\\uD83C|\\uD83D|\\uD83E][\\uDC00-\\uDFFF]|[0-9|*|#]\\uFE0F\\u20E3|[0-9|#]\\u20E3|[\\u203C-\\u3299]\\uFE0F\\u200D|[\\u203C-\\u3299]\\uFE0F|[\\u2122-\\u2B55]|\\u303D|[\\A9|\\AE]\\u3030|\\uA9|\\uAE|\\u3030\/gi,\n    \"\"\n  );\n  return str;\n};\n\n\/**\n * \u8fc7\u6ee4\u7a0e\u53f7\n * @param num\n * @returns\n *\/\nexport const isNumber = (num: string) =>\n  \/^[0-9A-HJ-NPQRTUWXY]{2}\\d{6}[0-9A-HJ-NPQRTUWXY]{10}$\/.test(num);\n\n\/**\n * \u9a8c\u8bc1\u624b\u673a\u53f7\n * @param phone\n * @returns\n *\/\nexport const isPhone = (phone: any) => \/^[1][0-9]{10}$\/.test(phone);\n\n\/**\n * \u9a8c\u8bc1\u90ae\u7bb1\n * @param email\n * @returns\n *\/\nexport const isEmail = (email: string) =>\n  \/^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$\/.test(\n    email\n  );\n\n\/**\n * \u9a8c\u8bc1\u662f\u5426\u5b58\u5728\u7279\u6b8a\u7b26\u53f7\u6216\u8005\u8868\u60c5\n * @param value\n * @param tips\n * @returns\n *\/\nexport const hasEmoji = function (value: string, tips = \"\") {\n  let char =\n    \/[\\uD83C|\\uD83D|\\uD83E][\\uDC00-\\uDFFF][\\u200D|\\uFE0F]|[\\uD83C|\\uD83D|\\uD83E][\\uDC00-\\uDFFF]|[0-9|*|#]\\uFE0F\\u20E3|[0-9|#]\\u20E3|[\\u203C-\\u3299]\\uFE0F\\u200D|[\\u203C-\\u3299]\\uFE0F|[\\u2122-\\u2B55]|\\u303D|[\\A9|\\AE]\\u3030|\\uA9|\\uAE|\\u3030\/gi;\n  if (char.test(value)) {\n    return true;\n  }\n  return false;\n};\n\n\/**\n * \u83b7\u53d6\u6570\u7ec4\u7d22\u5f15\u503c\n * @param param0\n * @returns\n *\/\nexport const getIndexArr = function ({\n  id = \"\",\n  productTree = [],\n  idKey = \"id\",\n  childrenKey = \"child\",\n}: {\n  id: string;\n  productTree?: Array<any>;\n  idKey?: string;\n  childrenKey?: string;\n}) {\n  let indexArr: number[] = [];\n  let fn: (arr: Array<any>) => boolean = (arr) =>\n    arr.some((elem: any, index) => {\n      if (elem[idKey] == id) {\n        indexArr.push(index);\n        return true;\n      } else if (\n        elem[childrenKey] &&\n        elem[childrenKey] instanceof Array &&\n        elem[childrenKey].length\n      ) {\n        return fn(elem[childrenKey]) && indexArr.push(index);\n      }\n      return false;\n    });\n  fn(productTree);\n  indexArr.reverse();\n  return indexArr;\n};\n","avg_line_length":23.1123595506,"max_line_length":241,"alphanum_fraction":0.5619834711,"loc":52,"functions":8,"function_signatures":0,"function_parameters":10,"variable_declarations":10,"property_declarations":0,"function_usages":1,"trivial_types":4,"predefined_types":8,"type_definitions":0,"dynamism_heuristic":1,"loc_per_function":7.25,"estimated_tokens":933,"fun_ann_density":0.0192926045,"var_ann_density":0.0107181136,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0010718114,"trivial_density":0.1428571429,"predefined_density":0.2857142857,"metric":0.2476512917,"content_without_annotations":"\/**\n * \u8fc7\u6ee4\u8868\u60c5\n * @param name\n * @returns\n *\/\nexport const filterEmoji = (name) => {\n  const str = name.replace(\n    \/[\\uD83C|\\uD83D|\\uD83E][\\uDC00-\\uDFFF][\\u200D|\\uFE0F]|[\\uD83C|\\uD83D|\\uD83E][\\uDC00-\\uDFFF]|[0-9|*|#]\\uFE0F\\u20E3|[0-9|#]\\u20E3|[\\u203C-\\u3299]\\uFE0F\\u200D|[\\u203C-\\u3299]\\uFE0F|[\\u2122-\\u2B55]|\\u303D|[\\A9|\\AE]\\u3030|\\uA9|\\uAE|\\u3030\/gi,\n    \"\"\n  );\n  return str;\n};\n\n\/**\n * \u8fc7\u6ee4\u7a0e\u53f7\n * @param num\n * @returns\n *\/\nexport const isNumber = (num) =>\n  \/^[0-9A-HJ-NPQRTUWXY]{2}\\d{6}[0-9A-HJ-NPQRTUWXY]{10}$\/.test(num);\n\n\/**\n * \u9a8c\u8bc1\u624b\u673a\u53f7\n * @param phone\n * @returns\n *\/\nexport const isPhone = (phone) => \/^[1][0-9]{10}$\/.test(phone);\n\n\/**\n * \u9a8c\u8bc1\u90ae\u7bb1\n * @param email\n * @returns\n *\/\nexport const isEmail = (email) =>\n  \/^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$\/.test(\n    email\n  );\n\n\/**\n * \u9a8c\u8bc1\u662f\u5426\u5b58\u5728\u7279\u6b8a\u7b26\u53f7\u6216\u8005\u8868\u60c5\n * @param value\n * @param tips\n * @returns\n *\/\nexport const hasEmoji = function (value, tips = \"\") {\n  let char =\n    \/[\\uD83C|\\uD83D|\\uD83E][\\uDC00-\\uDFFF][\\u200D|\\uFE0F]|[\\uD83C|\\uD83D|\\uD83E][\\uDC00-\\uDFFF]|[0-9|*|#]\\uFE0F\\u20E3|[0-9|#]\\u20E3|[\\u203C-\\u3299]\\uFE0F\\u200D|[\\u203C-\\u3299]\\uFE0F|[\\u2122-\\u2B55]|\\u303D|[\\A9|\\AE]\\u3030|\\uA9|\\uAE|\\u3030\/gi;\n  if (char.test(value)) {\n    return true;\n  }\n  return false;\n};\n\n\/**\n * \u83b7\u53d6\u6570\u7ec4\u7d22\u5f15\u503c\n * @param param0\n * @returns\n *\/\nexport const getIndexArr = function ({\n  id = \"\",\n  productTree = [],\n  idKey = \"id\",\n  childrenKey = \"child\",\n}) {\n  let indexArr = [];\n  let fn = (arr) =>\n    arr.some((elem, index) => {\n      if (elem[idKey] == id) {\n        indexArr.push(index);\n        return true;\n      } else if (\n        elem[childrenKey] &&\n        elem[childrenKey] instanceof Array &&\n        elem[childrenKey].length\n      ) {\n        return fn(elem[childrenKey]) && indexArr.push(index);\n      }\n      return false;\n    });\n  fn(productTree);\n  indexArr.reverse();\n  return indexArr;\n};\n"}
{"hexsha":"52d6fc301866fccc3a2004222d9a88498840f05e","size":6289,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"UID_Test\/ClientApp\/src\/client\/createRouters.ts","max_stars_repo_name":"leeichang\/UID_Test","max_stars_repo_head_hexsha":"e0542a2ce5fd8c1693864db0db5edf71dad2919b","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-03-22T14:02:13.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-22T14:02:13.000Z","max_issues_repo_path":"UID_Test\/ClientApp\/src\/client\/createRouters.ts","max_issues_repo_name":"leeichang\/UID_Test","max_issues_repo_head_hexsha":"e0542a2ce5fd8c1693864db0db5edf71dad2919b","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"UID_Test\/ClientApp\/src\/client\/createRouters.ts","max_forks_repo_name":"leeichang\/UID_Test","max_forks_repo_head_hexsha":"e0542a2ce5fd8c1693864db0db5edf71dad2919b","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\n\ninterface Config {\n    rc: any\n    redirect?: string\n    rootFile?: string\n    \/** \u8fc7\u6ee4\u6587\u4ef6 *\/\n    filter?: (file: any) => boolean\n    \/** \u5b9a\u4e49\u7ec4\u4ef6\u8fd4\u56de *\/\n    component: (file: any) => any\n}\n\/**\n * https:\/\/github.com\/MrHzq\/vue-router-auto\n * rc\uff1arequire.context \u4f20\u5165\u7684\u6587\u4ef6\n * redirect\uff1a\u9700\u8981\u5c06\u6839\u8def\u7531(\/)\u91cd\u5b9a\u5411\u5230\u7684\u8def\u7531\n * rootFile\uff1a\u9875\u9762\u7ea7\u522b\u7684.vue\u5b58\u653e\u7684\u6587\u4ef6\u540d\u79f0\n * filter\uff1a\u8fc7\u6ee4\u6587\u4ef6\n * component\uff1a\u5b9a\u4e49\u7ec4\u4ef6\u8fd4\u56de\n *\/\nexport function createRouters(config: Config) {\n    \/\/ \u6240\u751f\u6210\u7684\u6240\u6709\u8def\u7531\u6570\u7ec4\n    const Routers: any = []\n    const defaultConfig: Config = {\n        rc: null,\n        redirect: '',\n        rootFile: 'pages',\n        filter: () => true,\n        component: () => ({})\n    }\n    const { rc, redirect, filter, rootFile, component } = (<any>Object).assign(\n        {},\n        defaultConfig,\n        config\n    )\n    if (rc === null) return Routers\n\n    \/\/ allRouters[object]\uff1a\u5b58\u50a8\u6240\u6709\u8def\u7531\u7684\u53d8\u91cf\uff1a\u5148\u5c06\u6240\u6709\u7684\u8def\u7531\u751f\u6210\uff0c\u7136\u540e\u653e\u5728\u8be5\u53d8\u91cf\u91cc\u9762\n    const allRouters: any = {\n        len1: []\n    }\n    \/\/ \u901a\u8fc7\u5faa\u73afRC(\u4f20\u5165\u7684\u6587\u4ef6)\n    const routerFileAndLen = rc\n        .keys()\n        .filter(filter)\n        .map((fileName: any) => {\n            \/\/ \u56e0\u4e3a\u5f97\u5230\u7684filename\u683c\u5f0f\u662f: '.\/baseButton.vue', \u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u53bb\u6389\u5934\u548c\u5c3e\uff0c\u53ea\u4fdd\u7559\u771f\u6b63\u7684\u6587\u4ef6\u540d\n            const realFileName = fileName\n                .replace(\/^\\.\\\/\/, '')\n                .replace(\/\\.\\w+$\/, '')\n            return {\n                file: fileName,\n                fileName: realFileName,\n                \/\/ routerName(\u8def\u7531\u540d\u79f0)\uff1a\u5c06 \/ \u8f6c\u4e3a - \u5e76\u53bb\u6389 _\n                routerName: realFileName.replace(\/\\\/\/g, '-').replace(\/_\/g, '').replace(\/-index\/g, ''),\n                \/\/ routerComponent(\u8def\u7531\u5f02\u6b65component\u7684\u6587\u4ef6\u8def\u5f84)\uff1a\u5c06 .\/baseButton.vue \u4ece . \u4e4b\u540e\u622a\u53d6\n                routerComponent: fileName.substr(1),\n                \/\/ fileLen(\u6587\u4ef6\u7684\u5c42\u7ea7\u6df1\u5ea6)\uff1a\u901a\u8fc7 \/ \u7684\u6570\u91cf\u6765\u5224\u65ad\u5f53\u524d\u6587\u4ef6\u7684\u6df1\u5ea6\n                fileLen: fileName.match(\/\\\/\/g).length\n            }\n        })\n        .sort((i: any, j: any) => i.fileLen - j.fileLen) \/\/ \u901a\u8fc7\u6587\u4ef6\u6df1\u5ea6 \u5347\u5e8f\u6392\u5e8f\n\n    \/\/ \u4f20\u5165\u6587\u4ef6\u4e2d\u6700\u5927\u6df1\u5ea6\n    let maxLen = 0\n    routerFileAndLen.map((r: any) => {\n        const name = r.routerName\n        \/\/ \u751f\u6210\u4e00\u5757\u8def\u7531\u5bf9\u8c61\uff0c\u5305\u542b\uff1aname\u3001fileName(\u7528\u4e8e\u540e\u7eed\u5904\u7406\u771f\u6b63path\u7684\u4f9d\u636e)\u3001path\u3001needDelectName(\u7528\u4e8e\u540e\u7eed\u5904\u7406\uff0c\u5224\u65ad\u662f\u5426\u5220\u9664name\u7684\u4f9d\u636e)\u3001component\n        const obj = {\n            name,\n            exact: true,\n            fileName: r.fileName,\n            \/\/ path\uff1a\u53ea\u662f\u4ee5name\u547d\u540d\u7684path\uff0c\u8fd8\u4e0d\u662f\u771f\u6b63\u7684\u8def\u7531path\n            path: '\/' + (name === 'index' ? '' : name),\n            \/\/ needDelectName: name === 'index',\n            needDelectName: false,\n            component: component(rc(r.file))\/\/() => import(`~\/${rootFile}${r.routerComponent}`)\n        }\n        maxLen = r.fileLen\n        \/\/ allRouters\u7684key\uff1a\u4ee5 'len'\u52a0\u5f53\u524d\u7684\u6587\u4ef6\u6df1\u5ea6 \u4f5c\u4e3akey\n        const key = 'len' + maxLen\n        if (Array.isArray(allRouters[key])) allRouters[key].push(obj)\n        else allRouters[key] = [obj]\n    })\n\n    \/\/ \u5c06\u6839\u76ee\u5f55\u5c42\u7684\u8def\u7531\u653e\u5165Routers\u4e2d\n    \/\/ @ts-ignore\n    Routers.push(...allRouters.len1)\n\n    \/\/ \u622a\u53d6\u540d\u79f0\u65b9\u6cd5\uff1a\u4ece\u5f00\u59cb\u5230\u6700\u540e\u4e00\u4e2a'-'\u4e4b\u95f4\u7684\u5b57\u7b26\u4e32\n    const substrName = (name: any) => name.substr(0, name.lastIndexOf('-'))\n\n    \/**\n     * \u6b63\u5f0f\u751f\u6210\u8def\u7531\uff1a1\u3001\u5c06\u76f8\u5e94\u7684\u8def\u7531\u653e\u5728\u5bf9\u5e94\u7684\u8def\u7531\u4e0b\uff0c\u5f62\u6210\u5b50\u8def\u7531\uff1b2\u3001\u751f\u6210\u540c\u7ea7\u8def\u7531\n     * index\uff1a\u5f53\u524d\u6587\u4ef6\u6df1\u5ea6\uff0c\u4e3amaxlen\u7684\u5012\u5e8f\u5faa\u73af\n     * nofindnum\uff1a\u672a\u627e\u5230\u8def\u7531\u7684\u6b21\u6570\n     * newcurr\uff1a\u5f53\u524d\u65b0\u7684\u6df1\u5ea6\u4e0b\u7684\u8def\u7531\u6570\u636e\n     *\/\n    const ceateRouter = (index: any, nofindnum = 0, newcurr = null) => {\n        \/\/ \u5f53\u524d\u6df1\u5ea6\u4e0b\u7684\u8def\u7531\u6570\u636e\uff1a\u4f18\u5148\u4f7f\u7528\u4f20\u5165\u7684newcurr\uff0c\u5176\u6b21\u83b7\u53d6\u5f53\u524d\u6df1\u5ea6\u5bf9\u5e94\u7684\u8def\u7531\u6570\u636e\n        const curr = newcurr || allRouters['len' + index]\n        \/\/ \u5f53\u524d\u6df1\u5ea6\u4e0a\u4e00\u5c42\u7684\u8def\u7531\u6570\u636e\n        const pre = allRouters['len' + (index - 1)]\n        \/\/ \u82e5 \u6ca1\u6709\u4e0a\u4e00\u5c42\u7684\u6570\u636e\u4e86\n        if (!pre) {\n            \/\/ \u5219\u8868\u660e\u662f\u5c5e\u4e8e\u9876\u5c42\u7684\u8def\u7531\n            curr.map((c: any) => {\n                let path = '\/' + c.fileName.replace('\/index', '')\n                \/\/ if (path.match('_')) path = path.replace('\/_', '\/:')\n                \/\/ \u5c06\u771f\u6b63\u7684\u8def\u7531path\u8d4b\u503c\u7ed9\u5f53\u524d\u8def\u7531\n                c.path = path\n                \/\/ \u5c06\u5f53\u524d\u8def\u7531\u653e\u5230Routers\u91cc\u9762\n                Routers.push(c)\n            })\n            return\n        }\n\n        \/\/ \u5728\u4e0a\u4e00\u5c42\u4e2d \u672a\u627e\u5230\u7684 \u5f53\u524d\u6df1\u5ea6\u8def\u7531\u6570\u636e\n        let noFind: any = []\n\n        \/\/ \u5faa\u73af\u5f53\u524d\u6df1\u5ea6\u8def\u7531\u6570\u636e\n        curr?.map((c: any) => {\n            \/\/ \u5728 \u4e0a\u4e00\u5c42\u6df1\u5ea6 \u7684\u8def\u7531\u6570\u636e\u91cc\u9762\u67e5\u627e\n            const fobj = pre.find((p: any) => {\n                \/\/ \u751f\u6210 \u5f53\u524d\u6df1\u5ea6 \u5f53\u524d\u9879 \u8def\u7531\u7684name\n                let name = substrName(c.name)\n                \/\/ \u5faa\u73afnofindnum\uff0c\u5f53nofindnum>0\uff0c\u5219\u8868\u793a\u5df2\u7ecf\u51fa\u73b0\uff1a\u5728\u4e0a\u4e00\u5c42\u4e2d\u672a\u627e\u5230\u5bf9\u5e94\u7684\u7236\u8def\u7531\uff0c\u5219\u9700\u8981\u5c06 \u5f53\u524d\u6df1\u5ea6 \u5f53\u524d\u9879 \u8def\u7531\u7684name \u518d\u6b21\u751f\u6210\n                for (let i = 0; i < nofindnum; i++) {\n                    name = substrName(name)\n                }\n\n                return name === p.name\n            })\n            \/\/ \u5982\u679c \u627e\u5230\u4e86 \u5bf9\u5e94\u7684 \u7236\u8def\u7531\u6570\u636e(fobj)\n            if (fobj) {\n                \/\/ \u751f\u6210 \u5f53\u524d\u8def\u7531\u7684path\uff1a1\u3001\u53bb\u6389\u5f53\u524d\u8def\u7531\u4e2d\u4e0e\u7236\u8def\u7531\u91cd\u590d\u7684\uff1b2\u3001\u53bb\u6389\/\uff1b3\u3001\u5c06 _ \u8f6c\u4e3a :\uff1b\n\n                let path = c.fileName\n                    .replace(fobj.fileName, '')\n                    .substr(1)\n                    .replace('_', ':')\n                if (path.match('\/') && !path.match('\/:')) {\n                    path = path.replace('\/index', '')\n                }\n                if (path === undefined) {\n                    throw new Error(\n                        `\u627e\u5230\u4e86\u5bf9\u5e94\u7684\u7236\u8def\u7531\uff0c\u4f46\u662f\u751f\u6210\u5b50\u8def\u7531\u7684path\u4e3a\u3010undefined\u3011\u4e86`\n                    )\n                }\n\n                \/\/ \u5c06\u771f\u6b63\u7684\u8def\u7531path\u8d4b\u503c\u7ed9\u5f53\u524d\u8def\u7531\n                c.path = path\n\n                \/\/ \u82e5\uff1a\u5f53\u524d\u8def\u7531\u4e3a index\n                if (path === 'index') {\n                    \/\/ 1\u3001\u8f6c\u4e3a '' path\uff0c''\uff1a\u8868\u660e\u662f\u9ed8\u8ba4\u5b50\u8def\u7531\uff0c\u90a3\u7236\u8def\u7531\u5c31\u4e0d\u80fd\u5b58\u5728name\u5c5e\u6027\n                    c.path = ''\n                    \/\/ 2\u3001\u5c06\u7236\u8def\u7531\u7684needDelectName\u6807\u8bb0\u4e3atrue\uff0c\u8868\u660e\u9700\u8981\u5220\u9664\u5b83\u7684name\n                    fobj.needDelectName = fobj.needDelectName || true\n                }\n                \/\/ \u5c06\u5f53\u524d\u8def\u7531\u653e\u5230\u7236\u8def\u7531\u7684children\u91cc\u9762\n                if (Array.isArray(fobj.children)) fobj.children.push(c)\n                else fobj.children = [c]\n            } else noFind.push(c) \/\/ \u8868\u660e\u672a\u627e\u5230\u7236\u8def\u7531\uff0c\u5219\u5148\u5c06\u5f53\u524d\u8def\u7531\u7684\u6570\u636e\u653e\u5165noFind\u4e2d\u5b58\u50a8\u8d77\u6765\n        })\n\n        \/\/ \u82e5\u5b58\u5728\uff1a\u672a\u627e\u5230\u7684\u8def\u7531\u6570\u636e\uff0c\u5219\u518d\u6b21\u5411\u4e0a\u4e00\u4e2a\u5c42\u7ea7\u5bfb\u627e\n        if (noFind.length) ceateRouter(index - 1, ++nofindnum, noFind)\n    }\n    \/\/ \u5012\u5e8f\u5faa\u73af \u6700\u5927\u6df1\u5ea6\uff0c\u7136\u540e\u8c03\u7528\u751f\u6210\u8def\u7531\u65b9\u6cd5\n    for (let i = maxLen; i > 1; i--) ceateRouter(i)\n\n    \/\/ \u8def\u7531\u751f\u6210\u5b8c\u6bd5\u4e86\uff0c\u5e94\u8be5\u5220\u9664 \u6709\u9ed8\u8ba4\u5b50\u8def\u7531\u7684\u7236\u8def\u7531\u7684name\u5c5e\u6027\n    const deleteNameFun = (arr: any) => {\n        arr.map((r: any) => {\n            \/\/ \u5220\u9664\u591a\u4f59\u7684fileName\u5c5e\u6027\n            delete r.fileName\n            \/\/ \u5224\u65ad\u662f\u5426\u9700\u8981\u5220\u9664name\u5c5e\u6027\n            if (r.needDelectName) delete r.name\n            \/\/ \u5224\u65ad\u5b8c\u6bd5\u4e86\uff0c\u5219\u8981\u5220\u9664needDelectName\u5c5e\u6027\n            delete r.needDelectName\n            \/\/ \u82e5 \u5b58\u5728\u5b50\u8def\u7531 \u5219\u7ee7\u7eed\u8c03\u7528deleteNameFun\uff0c\u5220\u9664name\n            if (Array.isArray(r.children)) deleteNameFun(r.children)\n        })\n    }\n    \/\/ \u8c03\u7528deleteNameFun\uff0c\u5148\u5220\u9664Routers\u7684\u4e00\u7ea7\u8def\u7531\u7684name\n    deleteNameFun(Routers)\n\n    \/\/ \u82e5\u5b58\u5728\u91cd\u5b9a\u5411\u7684\u8def\u7531\uff0c\u5219\u52a0\u5165\u91cd\u5b9a\u5411\n    if (redirect) Routers.unshift({ path: '\/', redirect })\n    \/\/ \u8fd4\u56de\u6b63\u513f\u516b\u7ecf\u7684\u7684\u8def\u7531\u6570\u636e\n    return Routers\n}","avg_line_length":32.7552083333,"max_line_length":105,"alphanum_fraction":0.5031006519,"loc":116,"functions":13,"function_signatures":0,"function_parameters":14,"variable_declarations":22,"property_declarations":5,"function_usages":3,"trivial_types":19,"predefined_types":3,"type_definitions":1,"dynamism_heuristic":0,"loc_per_function":17.0769230769,"estimated_tokens":2007,"fun_ann_density":0.0134529148,"var_ann_density":0.0109616343,"prop_ann_density":0.0024912805,"typedef_density":0.0004982561,"dynamism_density":0.0,"trivial_density":0.3518518519,"predefined_density":0.0555555556,"metric":0.2332717214,"content_without_annotations":"\n\ninterface Config {\n    rc\n    redirect?\n    rootFile?\n    \/** \u8fc7\u6ee4\u6587\u4ef6 *\/\n    filter?\n    \/** \u5b9a\u4e49\u7ec4\u4ef6\u8fd4\u56de *\/\n    component\n}\n\/**\n * https:\/\/github.com\/MrHzq\/vue-router-auto\n * rc\uff1arequire.context \u4f20\u5165\u7684\u6587\u4ef6\n * redirect\uff1a\u9700\u8981\u5c06\u6839\u8def\u7531(\/)\u91cd\u5b9a\u5411\u5230\u7684\u8def\u7531\n * rootFile\uff1a\u9875\u9762\u7ea7\u522b\u7684.vue\u5b58\u653e\u7684\u6587\u4ef6\u540d\u79f0\n * filter\uff1a\u8fc7\u6ee4\u6587\u4ef6\n * component\uff1a\u5b9a\u4e49\u7ec4\u4ef6\u8fd4\u56de\n *\/\nexport function createRouters(config) {\n    \/\/ \u6240\u751f\u6210\u7684\u6240\u6709\u8def\u7531\u6570\u7ec4\n    const Routers = []\n    const defaultConfig = {\n        rc: null,\n        redirect: '',\n        rootFile: 'pages',\n        filter: () => true,\n        component: () => ({})\n    }\n    const { rc, redirect, filter, rootFile, component } = (<any>Object).assign(\n        {},\n        defaultConfig,\n        config\n    )\n    if (rc === null) return Routers\n\n    \/\/ allRouters[object]\uff1a\u5b58\u50a8\u6240\u6709\u8def\u7531\u7684\u53d8\u91cf\uff1a\u5148\u5c06\u6240\u6709\u7684\u8def\u7531\u751f\u6210\uff0c\u7136\u540e\u653e\u5728\u8be5\u53d8\u91cf\u91cc\u9762\n    const allRouters = {\n        len1: []\n    }\n    \/\/ \u901a\u8fc7\u5faa\u73afRC(\u4f20\u5165\u7684\u6587\u4ef6)\n    const routerFileAndLen = rc\n        .keys()\n        .filter(filter)\n        .map((fileName) => {\n            \/\/ \u56e0\u4e3a\u5f97\u5230\u7684filename\u683c\u5f0f\u662f: '.\/baseButton.vue', \u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u53bb\u6389\u5934\u548c\u5c3e\uff0c\u53ea\u4fdd\u7559\u771f\u6b63\u7684\u6587\u4ef6\u540d\n            const realFileName = fileName\n                .replace(\/^\\.\\\/\/, '')\n                .replace(\/\\.\\w+$\/, '')\n            return {\n                file: fileName,\n                fileName: realFileName,\n                \/\/ routerName(\u8def\u7531\u540d\u79f0)\uff1a\u5c06 \/ \u8f6c\u4e3a - \u5e76\u53bb\u6389 _\n                routerName: realFileName.replace(\/\\\/\/g, '-').replace(\/_\/g, '').replace(\/-index\/g, ''),\n                \/\/ routerComponent(\u8def\u7531\u5f02\u6b65component\u7684\u6587\u4ef6\u8def\u5f84)\uff1a\u5c06 .\/baseButton.vue \u4ece . \u4e4b\u540e\u622a\u53d6\n                routerComponent: fileName.substr(1),\n                \/\/ fileLen(\u6587\u4ef6\u7684\u5c42\u7ea7\u6df1\u5ea6)\uff1a\u901a\u8fc7 \/ \u7684\u6570\u91cf\u6765\u5224\u65ad\u5f53\u524d\u6587\u4ef6\u7684\u6df1\u5ea6\n                fileLen: fileName.match(\/\\\/\/g).length\n            }\n        })\n        .sort((i, j) => i.fileLen - j.fileLen) \/\/ \u901a\u8fc7\u6587\u4ef6\u6df1\u5ea6 \u5347\u5e8f\u6392\u5e8f\n\n    \/\/ \u4f20\u5165\u6587\u4ef6\u4e2d\u6700\u5927\u6df1\u5ea6\n    let maxLen = 0\n    routerFileAndLen.map((r) => {\n        const name = r.routerName\n        \/\/ \u751f\u6210\u4e00\u5757\u8def\u7531\u5bf9\u8c61\uff0c\u5305\u542b\uff1aname\u3001fileName(\u7528\u4e8e\u540e\u7eed\u5904\u7406\u771f\u6b63path\u7684\u4f9d\u636e)\u3001path\u3001needDelectName(\u7528\u4e8e\u540e\u7eed\u5904\u7406\uff0c\u5224\u65ad\u662f\u5426\u5220\u9664name\u7684\u4f9d\u636e)\u3001component\n        const obj = {\n            name,\n            exact: true,\n            fileName: r.fileName,\n            \/\/ path\uff1a\u53ea\u662f\u4ee5name\u547d\u540d\u7684path\uff0c\u8fd8\u4e0d\u662f\u771f\u6b63\u7684\u8def\u7531path\n            path: '\/' + (name === 'index' ? '' : name),\n            \/\/ needDelectName: name === 'index',\n            needDelectName: false,\n            component: component(rc(r.file))\/\/() => import(`~\/${rootFile}${r.routerComponent}`)\n        }\n        maxLen = r.fileLen\n        \/\/ allRouters\u7684key\uff1a\u4ee5 'len'\u52a0\u5f53\u524d\u7684\u6587\u4ef6\u6df1\u5ea6 \u4f5c\u4e3akey\n        const key = 'len' + maxLen\n        if (Array.isArray(allRouters[key])) allRouters[key].push(obj)\n        else allRouters[key] = [obj]\n    })\n\n    \/\/ \u5c06\u6839\u76ee\u5f55\u5c42\u7684\u8def\u7531\u653e\u5165Routers\u4e2d\n    \/\/ @ts-ignore\n    Routers.push(...allRouters.len1)\n\n    \/\/ \u622a\u53d6\u540d\u79f0\u65b9\u6cd5\uff1a\u4ece\u5f00\u59cb\u5230\u6700\u540e\u4e00\u4e2a'-'\u4e4b\u95f4\u7684\u5b57\u7b26\u4e32\n    const substrName = (name) => name.substr(0, name.lastIndexOf('-'))\n\n    \/**\n     * \u6b63\u5f0f\u751f\u6210\u8def\u7531\uff1a1\u3001\u5c06\u76f8\u5e94\u7684\u8def\u7531\u653e\u5728\u5bf9\u5e94\u7684\u8def\u7531\u4e0b\uff0c\u5f62\u6210\u5b50\u8def\u7531\uff1b2\u3001\u751f\u6210\u540c\u7ea7\u8def\u7531\n     * index\uff1a\u5f53\u524d\u6587\u4ef6\u6df1\u5ea6\uff0c\u4e3amaxlen\u7684\u5012\u5e8f\u5faa\u73af\n     * nofindnum\uff1a\u672a\u627e\u5230\u8def\u7531\u7684\u6b21\u6570\n     * newcurr\uff1a\u5f53\u524d\u65b0\u7684\u6df1\u5ea6\u4e0b\u7684\u8def\u7531\u6570\u636e\n     *\/\n    const ceateRouter = (index, nofindnum = 0, newcurr = null) => {\n        \/\/ \u5f53\u524d\u6df1\u5ea6\u4e0b\u7684\u8def\u7531\u6570\u636e\uff1a\u4f18\u5148\u4f7f\u7528\u4f20\u5165\u7684newcurr\uff0c\u5176\u6b21\u83b7\u53d6\u5f53\u524d\u6df1\u5ea6\u5bf9\u5e94\u7684\u8def\u7531\u6570\u636e\n        const curr = newcurr || allRouters['len' + index]\n        \/\/ \u5f53\u524d\u6df1\u5ea6\u4e0a\u4e00\u5c42\u7684\u8def\u7531\u6570\u636e\n        const pre = allRouters['len' + (index - 1)]\n        \/\/ \u82e5 \u6ca1\u6709\u4e0a\u4e00\u5c42\u7684\u6570\u636e\u4e86\n        if (!pre) {\n            \/\/ \u5219\u8868\u660e\u662f\u5c5e\u4e8e\u9876\u5c42\u7684\u8def\u7531\n            curr.map((c) => {\n                let path = '\/' + c.fileName.replace('\/index', '')\n                \/\/ if (path.match('_')) path = path.replace('\/_', '\/:')\n                \/\/ \u5c06\u771f\u6b63\u7684\u8def\u7531path\u8d4b\u503c\u7ed9\u5f53\u524d\u8def\u7531\n                c.path = path\n                \/\/ \u5c06\u5f53\u524d\u8def\u7531\u653e\u5230Routers\u91cc\u9762\n                Routers.push(c)\n            })\n            return\n        }\n\n        \/\/ \u5728\u4e0a\u4e00\u5c42\u4e2d \u672a\u627e\u5230\u7684 \u5f53\u524d\u6df1\u5ea6\u8def\u7531\u6570\u636e\n        let noFind = []\n\n        \/\/ \u5faa\u73af\u5f53\u524d\u6df1\u5ea6\u8def\u7531\u6570\u636e\n        curr?.map((c) => {\n            \/\/ \u5728 \u4e0a\u4e00\u5c42\u6df1\u5ea6 \u7684\u8def\u7531\u6570\u636e\u91cc\u9762\u67e5\u627e\n            const fobj = pre.find((p) => {\n                \/\/ \u751f\u6210 \u5f53\u524d\u6df1\u5ea6 \u5f53\u524d\u9879 \u8def\u7531\u7684name\n                let name = substrName(c.name)\n                \/\/ \u5faa\u73afnofindnum\uff0c\u5f53nofindnum>0\uff0c\u5219\u8868\u793a\u5df2\u7ecf\u51fa\u73b0\uff1a\u5728\u4e0a\u4e00\u5c42\u4e2d\u672a\u627e\u5230\u5bf9\u5e94\u7684\u7236\u8def\u7531\uff0c\u5219\u9700\u8981\u5c06 \u5f53\u524d\u6df1\u5ea6 \u5f53\u524d\u9879 \u8def\u7531\u7684name \u518d\u6b21\u751f\u6210\n                for (let i = 0; i < nofindnum; i++) {\n                    name = substrName(name)\n                }\n\n                return name === p.name\n            })\n            \/\/ \u5982\u679c \u627e\u5230\u4e86 \u5bf9\u5e94\u7684 \u7236\u8def\u7531\u6570\u636e(fobj)\n            if (fobj) {\n                \/\/ \u751f\u6210 \u5f53\u524d\u8def\u7531\u7684path\uff1a1\u3001\u53bb\u6389\u5f53\u524d\u8def\u7531\u4e2d\u4e0e\u7236\u8def\u7531\u91cd\u590d\u7684\uff1b2\u3001\u53bb\u6389\/\uff1b3\u3001\u5c06 _ \u8f6c\u4e3a :\uff1b\n\n                let path = c.fileName\n                    .replace(fobj.fileName, '')\n                    .substr(1)\n                    .replace('_', ':')\n                if (path.match('\/') && !path.match('\/:')) {\n                    path = path.replace('\/index', '')\n                }\n                if (path === undefined) {\n                    throw new Error(\n                        `\u627e\u5230\u4e86\u5bf9\u5e94\u7684\u7236\u8def\u7531\uff0c\u4f46\u662f\u751f\u6210\u5b50\u8def\u7531\u7684path\u4e3a\u3010undefined\u3011\u4e86`\n                    )\n                }\n\n                \/\/ \u5c06\u771f\u6b63\u7684\u8def\u7531path\u8d4b\u503c\u7ed9\u5f53\u524d\u8def\u7531\n                c.path = path\n\n                \/\/ \u82e5\uff1a\u5f53\u524d\u8def\u7531\u4e3a index\n                if (path === 'index') {\n                    \/\/ 1\u3001\u8f6c\u4e3a '' path\uff0c''\uff1a\u8868\u660e\u662f\u9ed8\u8ba4\u5b50\u8def\u7531\uff0c\u90a3\u7236\u8def\u7531\u5c31\u4e0d\u80fd\u5b58\u5728name\u5c5e\u6027\n                    c.path = ''\n                    \/\/ 2\u3001\u5c06\u7236\u8def\u7531\u7684needDelectName\u6807\u8bb0\u4e3atrue\uff0c\u8868\u660e\u9700\u8981\u5220\u9664\u5b83\u7684name\n                    fobj.needDelectName = fobj.needDelectName || true\n                }\n                \/\/ \u5c06\u5f53\u524d\u8def\u7531\u653e\u5230\u7236\u8def\u7531\u7684children\u91cc\u9762\n                if (Array.isArray(fobj.children)) fobj.children.push(c)\n                else fobj.children = [c]\n            } else noFind.push(c) \/\/ \u8868\u660e\u672a\u627e\u5230\u7236\u8def\u7531\uff0c\u5219\u5148\u5c06\u5f53\u524d\u8def\u7531\u7684\u6570\u636e\u653e\u5165noFind\u4e2d\u5b58\u50a8\u8d77\u6765\n        })\n\n        \/\/ \u82e5\u5b58\u5728\uff1a\u672a\u627e\u5230\u7684\u8def\u7531\u6570\u636e\uff0c\u5219\u518d\u6b21\u5411\u4e0a\u4e00\u4e2a\u5c42\u7ea7\u5bfb\u627e\n        if (noFind.length) ceateRouter(index - 1, ++nofindnum, noFind)\n    }\n    \/\/ \u5012\u5e8f\u5faa\u73af \u6700\u5927\u6df1\u5ea6\uff0c\u7136\u540e\u8c03\u7528\u751f\u6210\u8def\u7531\u65b9\u6cd5\n    for (let i = maxLen; i > 1; i--) ceateRouter(i)\n\n    \/\/ \u8def\u7531\u751f\u6210\u5b8c\u6bd5\u4e86\uff0c\u5e94\u8be5\u5220\u9664 \u6709\u9ed8\u8ba4\u5b50\u8def\u7531\u7684\u7236\u8def\u7531\u7684name\u5c5e\u6027\n    const deleteNameFun = (arr) => {\n        arr.map((r) => {\n            \/\/ \u5220\u9664\u591a\u4f59\u7684fileName\u5c5e\u6027\n            delete r.fileName\n            \/\/ \u5224\u65ad\u662f\u5426\u9700\u8981\u5220\u9664name\u5c5e\u6027\n            if (r.needDelectName) delete r.name\n            \/\/ \u5224\u65ad\u5b8c\u6bd5\u4e86\uff0c\u5219\u8981\u5220\u9664needDelectName\u5c5e\u6027\n            delete r.needDelectName\n            \/\/ \u82e5 \u5b58\u5728\u5b50\u8def\u7531 \u5219\u7ee7\u7eed\u8c03\u7528deleteNameFun\uff0c\u5220\u9664name\n            if (Array.isArray(r.children)) deleteNameFun(r.children)\n        })\n    }\n    \/\/ \u8c03\u7528deleteNameFun\uff0c\u5148\u5220\u9664Routers\u7684\u4e00\u7ea7\u8def\u7531\u7684name\n    deleteNameFun(Routers)\n\n    \/\/ \u82e5\u5b58\u5728\u91cd\u5b9a\u5411\u7684\u8def\u7531\uff0c\u5219\u52a0\u5165\u91cd\u5b9a\u5411\n    if (redirect) Routers.unshift({ path: '\/', redirect })\n    \/\/ \u8fd4\u56de\u6b63\u513f\u516b\u7ecf\u7684\u7684\u8def\u7531\u6570\u636e\n    return Routers\n}"}
{"hexsha":"4ef875146bf91d02a43b946ba072a27eeddf80b2","size":2167,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/utils\/dateUtils.ts","max_stars_repo_name":"D2Phoenix\/ton-swap","max_stars_repo_head_hexsha":"0f7a8b4d41f8f031e56a14647440e9230bd9f3af","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-01-31T11:03:50.000Z","max_stars_repo_stars_event_max_datetime":"2022-01-31T11:03:50.000Z","max_issues_repo_path":"src\/utils\/dateUtils.ts","max_issues_repo_name":"D2Phoenix\/ton-swap","max_issues_repo_head_hexsha":"0f7a8b4d41f8f031e56a14647440e9230bd9f3af","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/utils\/dateUtils.ts","max_forks_repo_name":"D2Phoenix\/ton-swap","max_forks_repo_head_hexsha":"0f7a8b4d41f8f031e56a14647440e9230bd9f3af","max_forks_repo_licenses":["MIT"],"max_forks_count":1.0,"max_forks_repo_forks_event_min_datetime":"2022-01-31T15:36:34.000Z","max_forks_repo_forks_event_max_datetime":"2022-01-31T15:36:34.000Z","content":"class DateUtils {\n  static monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n  static toDayMonthFormat(date: Date) {\n    const day = date.getDate();\n    const monthIndex = date.getMonth();\n    const monthName = DateUtils.monthNames[monthIndex];\n    return `${day}-${monthName}`;\n  }\n\n  static toShortFormat(date: Date) {\n    const day = date.getDate();\n    const monthIndex = date.getMonth();\n    const monthName = DateUtils.monthNames[monthIndex];\n    const year = date.getFullYear();\n\n    return `${day} ${monthName} ${year}`;\n  }\n\n  static timeSince(time: Date) {\n    const time_formats = [\n      [60, 'seconds', 1], \/\/ 60\n      [120, '1 minute ago', '1 minute from now'], \/\/ 60*2\n      [3600, 'minutes', 60], \/\/ 60*60, 60\n      [7200, '1 hour ago', '1 hour from now'], \/\/ 60*60*2\n      [86400, 'hours', 3600], \/\/ 60*60*24, 60*60\n      [172800, 'Yesterday', 'Tomorrow'], \/\/ 60*60*24*2\n      [604800, 'days', 86400], \/\/ 60*60*24*7, 60*60*24\n      [1209600, 'Last week', 'Next week'], \/\/ 60*60*24*7*4*2\n      [2419200, 'weeks', 604800], \/\/ 60*60*24*7*4, 60*60*24*7\n      [4838400, 'Last month', 'Next month'], \/\/ 60*60*24*7*4*2\n      [29030400, 'months', 2419200], \/\/ 60*60*24*7*4*12, 60*60*24*7*4\n      [58060800, 'Last year', 'Next year'], \/\/ 60*60*24*7*4*12*2\n      [2903040000, 'years', 29030400], \/\/ 60*60*24*7*4*12*100, 60*60*24*7*4*12\n      [5806080000, 'Last century', 'Next century'], \/\/ 60*60*24*7*4*12*100*2\n      [58060800000, 'centuries', 2903040000], \/\/ 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n    ];\n    let seconds = (+new Date().valueOf() - time.valueOf()) \/ 1000,\n      token = 'ago',\n      list_choice = 1;\n\n    if (seconds === 0) {\n      return 'Just now';\n    }\n    if (seconds < 0) {\n      seconds = Math.abs(seconds);\n      token = 'from now';\n      list_choice = 2;\n    }\n    let i = 0,\n      format;\n    while ((format = time_formats[i++]))\n      if (seconds < format[0]) {\n        if (typeof format[2] == 'string') return format[list_choice];\n        else return Math.floor(seconds \/ format[2]) + ' ' + format[1] + ' ' + token;\n      }\n    return time;\n  }\n}\n\nexport default DateUtils;\n","avg_line_length":34.9516129032,"max_line_length":107,"alphanum_fraction":0.5579141671,"loc":55,"functions":3,"function_signatures":0,"function_parameters":3,"variable_declarations":13,"property_declarations":1,"function_usages":0,"trivial_types":0,"predefined_types":0,"type_definitions":1,"dynamism_heuristic":1,"loc_per_function":15.0,"estimated_tokens":948,"fun_ann_density":0.0063291139,"var_ann_density":0.0137130802,"prop_ann_density":0.0010548523,"typedef_density":0.0010548523,"dynamism_density":0.0010548523,"trivial_density":0.0,"predefined_density":0.0,"metric":0.2312160858,"content_without_annotations":"class DateUtils {\n  static monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n  static toDayMonthFormat(date) {\n    const day = date.getDate();\n    const monthIndex = date.getMonth();\n    const monthName = DateUtils.monthNames[monthIndex];\n    return `${day}-${monthName}`;\n  }\n\n  static toShortFormat(date) {\n    const day = date.getDate();\n    const monthIndex = date.getMonth();\n    const monthName = DateUtils.monthNames[monthIndex];\n    const year = date.getFullYear();\n\n    return `${day} ${monthName} ${year}`;\n  }\n\n  static timeSince(time) {\n    const time_formats = [\n      [60, 'seconds', 1], \/\/ 60\n      [120, '1 minute ago', '1 minute from now'], \/\/ 60*2\n      [3600, 'minutes', 60], \/\/ 60*60, 60\n      [7200, '1 hour ago', '1 hour from now'], \/\/ 60*60*2\n      [86400, 'hours', 3600], \/\/ 60*60*24, 60*60\n      [172800, 'Yesterday', 'Tomorrow'], \/\/ 60*60*24*2\n      [604800, 'days', 86400], \/\/ 60*60*24*7, 60*60*24\n      [1209600, 'Last week', 'Next week'], \/\/ 60*60*24*7*4*2\n      [2419200, 'weeks', 604800], \/\/ 60*60*24*7*4, 60*60*24*7\n      [4838400, 'Last month', 'Next month'], \/\/ 60*60*24*7*4*2\n      [29030400, 'months', 2419200], \/\/ 60*60*24*7*4*12, 60*60*24*7*4\n      [58060800, 'Last year', 'Next year'], \/\/ 60*60*24*7*4*12*2\n      [2903040000, 'years', 29030400], \/\/ 60*60*24*7*4*12*100, 60*60*24*7*4*12\n      [5806080000, 'Last century', 'Next century'], \/\/ 60*60*24*7*4*12*100*2\n      [58060800000, 'centuries', 2903040000], \/\/ 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n    ];\n    let seconds = (+new Date().valueOf() - time.valueOf()) \/ 1000,\n      token = 'ago',\n      list_choice = 1;\n\n    if (seconds === 0) {\n      return 'Just now';\n    }\n    if (seconds < 0) {\n      seconds = Math.abs(seconds);\n      token = 'from now';\n      list_choice = 2;\n    }\n    let i = 0,\n      format;\n    while ((format = time_formats[i++]))\n      if (seconds < format[0]) {\n        if (typeof format[2] == 'string') return format[list_choice];\n        else return Math.floor(seconds \/ format[2]) + ' ' + format[1] + ' ' + token;\n      }\n    return time;\n  }\n}\n\nexport default DateUtils;\n"}
{"hexsha":"b31a5e2a1789d50d26c605d881b979a28beb80a4","size":3607,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/index.ts","max_stars_repo_name":"x6ud\/closest-points-between-two-lines","max_stars_repo_head_hexsha":"0407eb2574defb61fc24175fd20b06e0f716bff8","max_stars_repo_licenses":["MIT"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-01-09T06:29:47.000Z","max_stars_repo_stars_event_max_datetime":"2022-01-09T06:29:47.000Z","max_issues_repo_path":"src\/index.ts","max_issues_repo_name":"x6ud\/closest-points-between-two-lines","max_issues_repo_head_hexsha":"0407eb2574defb61fc24175fd20b06e0f716bff8","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/index.ts","max_forks_repo_name":"x6ud\/closest-points-between-two-lines","max_forks_repo_head_hexsha":"0407eb2574defb61fc24175fd20b06e0f716bff8","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"type Vec3 = [number, number, number] | Float32Array | Float64Array;\n\n\/**\n * Find the two closest points on two 3D lines.\n * Return true if two lines are parallel.\n *\n * @param out1 Output - The closest point on line 1.\n * @param out2 Output - The closest point on line 2.\n * @param p1x X of a point on line 1.\n * @param p1y Y of a point on line 1.\n * @param p1z Z of a point on line 1.\n * @param n1x X of the unit vector of the direction of line 1.\n * @param n1y Y of the unit vector of the direction of line 1.\n * @param n1z Z of the unit vector of the direction of line 1.\n * @param p2x X of a point on line 2.\n * @param p2y Y of a point on line 2.\n * @param p2z Z of a point on line 2.\n * @param n2x X of the unit vector of the direction of line 2.\n * @param n2y Y of the unit vector of the direction of line 2.\n * @param n2z Z of the unit vector of the direction of line 2.\n *\/\nexport default function closestPointsBetweenTwoLines(\n    out1: Vec3 | null, out2: Vec3 | null,\n    p1x: number, p1y: number, p1z: number,\n    n1x: number, n1y: number, n1z: number,\n    p2x: number, p2y: number, p2z: number,\n    n2x: number, n2y: number, n2z: number\n): boolean {\n    let d = n1x ** 2 * n2y ** 2\n        + n1x ** 2 * n2z ** 2\n        - 2 * n1x * n1y * n2x * n2y\n        - 2 * n1x * n1z * n2x * n2z\n        + n1y ** 2 * n2x ** 2\n        + n1y ** 2 * n2z ** 2\n        - 2 * n1y * n1z * n2y * n2z\n        + n1z ** 2 * n2x ** 2\n        + n1z ** 2 * n2y ** 2;\n    let parallel = false;\n    let t1 = (\n        n1x * n2x * n2y * p1y\n        - n1x * n2x * n2y * p2y\n        + n1x * n2x * n2z * p1z\n        - n1x * n2x * n2z * p2z\n        - n1x * n2y ** 2 * p1x\n        + n1x * n2y ** 2 * p2x\n        - n1x * n2z ** 2 * p1x\n        + n1x * n2z ** 2 * p2x\n        - n1y * n2x ** 2 * p1y\n        + n1y * n2x ** 2 * p2y\n        + n1y * n2x * n2y * p1x\n        - n1y * n2x * n2y * p2x\n        + n1y * n2y * n2z * p1z\n        - n1y * n2y * n2z * p2z\n        - n1y * n2z ** 2 * p1y\n        + n1y * n2z ** 2 * p2y\n        - n1z * n2x ** 2 * p1z\n        + n1z * n2x ** 2 * p2z\n        + n1z * n2x * n2z * p1x\n        - n1z * n2x * n2z * p2x\n        - n1z * n2y ** 2 * p1z\n        + n1z * n2y ** 2 * p2z\n        + n1z * n2y * n2z * p1y\n        - n1z * n2y * n2z * p2y) \/ d;\n    if (!isFinite(t1)) {\n        parallel = true;\n        t1 = 0;\n    }\n    let o1x = p1x + n1x * t1;\n    let o1y = p1y + n1y * t1;\n    let o1z = p1z + n1z * t1;\n    if (out1) {\n        out1[0] = o1x;\n        out1[1] = o1y;\n        out1[2] = o1z;\n    }\n    if (out2) {\n        let t3 = (\n            -n1x * n2y * p1z\n            + n1x * n2y * p2z\n            + n1x * n2z * p1y\n            - n1x * n2z * p2y\n            + n1y * n2x * p1z\n            - n1y * n2x * p2z\n            - n1y * n2z * p1x\n            + n1y * n2z * p2x\n            - n1z * n2x * p1y\n            + n1z * n2x * p2y\n            + n1z * n2y * p1x\n            - n1z * n2y * p2x) \/ d;\n        if (isFinite(t3)) {\n            let n3x = n1y * n2z - n1z * n2y;\n            let n3y = -n1x * n2z + n1z * n2x;\n            let n3z = n1x * n2y - n1y * n2x;\n            out2[0] = o1x + n3x * t3;\n            out2[1] = o1y + n3y * t3;\n            out2[2] = o1z + n3z * t3;\n        } else {\n            parallel = true;\n            let n3x = n1y * (p1z - p2z) - n1z * (p1y - p2y);\n            let n3y = -n1x * (p1z - p2z) + n1z * (p1x - p2x);\n            let n3z = n1x * (p1y - p2y) - n1y * (p1x - p2x);\n            out2[0] = o1x + n1y * n3z - n1z * n3y;\n            out2[1] = o1y + -n1x * n3z + n1z * n3x;\n            out2[2] = o1z + n1x * n3y - n1y * n3x;\n        }\n    }\n    return parallel;\n}","avg_line_length":33.3981481481,"max_line_length":67,"alphanum_fraction":0.4588300527,"loc":88,"functions":1,"function_signatures":0,"function_parameters":14,"variable_declarations":13,"property_declarations":0,"function_usages":0,"trivial_types":0,"predefined_types":16,"type_definitions":1,"dynamism_heuristic":0,"loc_per_function":79.0,"estimated_tokens":1591,"fun_ann_density":0.0094280327,"var_ann_density":0.0081709617,"prop_ann_density":0.0,"typedef_density":0.0006285355,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.5714285714,"metric":0.2193988987,"content_without_annotations":"type Vec3 = [number, number, number] | Float32Array | Float64Array;\n\n\/**\n * Find the two closest points on two 3D lines.\n * Return true if two lines are parallel.\n *\n * @param out1 Output - The closest point on line 1.\n * @param out2 Output - The closest point on line 2.\n * @param p1x X of a point on line 1.\n * @param p1y Y of a point on line 1.\n * @param p1z Z of a point on line 1.\n * @param n1x X of the unit vector of the direction of line 1.\n * @param n1y Y of the unit vector of the direction of line 1.\n * @param n1z Z of the unit vector of the direction of line 1.\n * @param p2x X of a point on line 2.\n * @param p2y Y of a point on line 2.\n * @param p2z Z of a point on line 2.\n * @param n2x X of the unit vector of the direction of line 2.\n * @param n2y Y of the unit vector of the direction of line 2.\n * @param n2z Z of the unit vector of the direction of line 2.\n *\/\nexport default function closestPointsBetweenTwoLines(\n    out1, out2,\n    p1x, p1y, p1z,\n    n1x, n1y, n1z,\n    p2x, p2y, p2z,\n    n2x, n2y, n2z\n) {\n    let d = n1x ** 2 * n2y ** 2\n        + n1x ** 2 * n2z ** 2\n        - 2 * n1x * n1y * n2x * n2y\n        - 2 * n1x * n1z * n2x * n2z\n        + n1y ** 2 * n2x ** 2\n        + n1y ** 2 * n2z ** 2\n        - 2 * n1y * n1z * n2y * n2z\n        + n1z ** 2 * n2x ** 2\n        + n1z ** 2 * n2y ** 2;\n    let parallel = false;\n    let t1 = (\n        n1x * n2x * n2y * p1y\n        - n1x * n2x * n2y * p2y\n        + n1x * n2x * n2z * p1z\n        - n1x * n2x * n2z * p2z\n        - n1x * n2y ** 2 * p1x\n        + n1x * n2y ** 2 * p2x\n        - n1x * n2z ** 2 * p1x\n        + n1x * n2z ** 2 * p2x\n        - n1y * n2x ** 2 * p1y\n        + n1y * n2x ** 2 * p2y\n        + n1y * n2x * n2y * p1x\n        - n1y * n2x * n2y * p2x\n        + n1y * n2y * n2z * p1z\n        - n1y * n2y * n2z * p2z\n        - n1y * n2z ** 2 * p1y\n        + n1y * n2z ** 2 * p2y\n        - n1z * n2x ** 2 * p1z\n        + n1z * n2x ** 2 * p2z\n        + n1z * n2x * n2z * p1x\n        - n1z * n2x * n2z * p2x\n        - n1z * n2y ** 2 * p1z\n        + n1z * n2y ** 2 * p2z\n        + n1z * n2y * n2z * p1y\n        - n1z * n2y * n2z * p2y) \/ d;\n    if (!isFinite(t1)) {\n        parallel = true;\n        t1 = 0;\n    }\n    let o1x = p1x + n1x * t1;\n    let o1y = p1y + n1y * t1;\n    let o1z = p1z + n1z * t1;\n    if (out1) {\n        out1[0] = o1x;\n        out1[1] = o1y;\n        out1[2] = o1z;\n    }\n    if (out2) {\n        let t3 = (\n            -n1x * n2y * p1z\n            + n1x * n2y * p2z\n            + n1x * n2z * p1y\n            - n1x * n2z * p2y\n            + n1y * n2x * p1z\n            - n1y * n2x * p2z\n            - n1y * n2z * p1x\n            + n1y * n2z * p2x\n            - n1z * n2x * p1y\n            + n1z * n2x * p2y\n            + n1z * n2y * p1x\n            - n1z * n2y * p2x) \/ d;\n        if (isFinite(t3)) {\n            let n3x = n1y * n2z - n1z * n2y;\n            let n3y = -n1x * n2z + n1z * n2x;\n            let n3z = n1x * n2y - n1y * n2x;\n            out2[0] = o1x + n3x * t3;\n            out2[1] = o1y + n3y * t3;\n            out2[2] = o1z + n3z * t3;\n        } else {\n            parallel = true;\n            let n3x = n1y * (p1z - p2z) - n1z * (p1y - p2y);\n            let n3y = -n1x * (p1z - p2z) + n1z * (p1x - p2x);\n            let n3z = n1x * (p1y - p2y) - n1y * (p1x - p2x);\n            out2[0] = o1x + n1y * n3z - n1z * n3y;\n            out2[1] = o1y + -n1x * n3z + n1z * n3x;\n            out2[2] = o1z + n1x * n3y - n1y * n3x;\n        }\n    }\n    return parallel;\n}"}
{"hexsha":"0ac468cdf3c8d2136343160aa7b224310a7ba0b6","size":10011,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/chromatic\/lib\/jsdom-shims.ts","max_stars_repo_name":"Red-Folder\/chromatic-core","max_stars_repo_head_hexsha":"ba8824bf4084c7b98bc38930b151d0b664211f76","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"src\/chromatic\/lib\/jsdom-shims.ts","max_issues_repo_name":"Red-Folder\/chromatic-core","max_issues_repo_head_hexsha":"ba8824bf4084c7b98bc38930b151d0b664211f76","max_issues_repo_licenses":["MIT"],"max_issues_count":1.0,"max_issues_repo_issues_event_min_datetime":"2022-01-22T12:07:16.000Z","max_issues_repo_issues_event_max_datetime":"2022-01-22T12:07:16.000Z","max_forks_repo_path":"src\/chromatic\/lib\/jsdom-shims.ts","max_forks_repo_name":"Red-Folder\/chromatic-core","max_forks_repo_head_hexsha":"ba8824bf4084c7b98bc38930b151d0b664211f76","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/* eslint-disable @typescript-eslint\/no-empty-function, max-classes-per-file, no-param-reassign *\/\r\n\r\nconst alwaysFn = (C: any): any => {\r\n  \/\/ Search up the prototype chain until we hit base. The base class of Class has no name I guess.\r\n  const classHierarchy = [];\r\n  for (let curr = C; curr.name; curr = Object.getPrototypeOf(curr)) {\r\n    classHierarchy.push(curr);\r\n  }\r\n\r\n  \/\/ Get all static methods defined on any ancestor\r\n  const statics = classHierarchy\r\n    .map(klass => Object.getOwnPropertyNames(klass))\r\n    .reduce((a, b) => [...a, ...b], []) \/\/ flatten\r\n    .filter(n => typeof C[n] === 'function')\r\n    .reduce((acc: any, name) => {\r\n      acc[name] = C[name];\r\n      return acc;\r\n    }, {});\r\n\r\n  return Object.assign(\r\n    \/\/ eslint-disable-next-line func-names\r\n    function() {\r\n      return new C();\r\n    },\r\n    C,\r\n    statics\r\n  );\r\n};\r\n\r\n\/\/ Add canvas mock based on this comment: https:\/\/github.com\/jsdom\/jsdom\/issues\/1782#issuecomment-337656878\r\nfunction mockCanvas(window: any) {\r\n  window.HTMLCanvasElement.prototype.getContext = () => ({\r\n    fillRect: () => ({}),\r\n    clearRect: () => ({}),\r\n    getImageData: (_x: number, _y: number, w: number, h: number) => ({ data: new Array(w * h * 4) }),\r\n    putImageData: () => ({}),\r\n    createImageData: () => [],\r\n    setTransform: () => ({}),\r\n    drawImage: () => ({}),\r\n    save: () => ({}),\r\n    fillText: () => ({}),\r\n    restore: () => ({}),\r\n    beginPath: () => ({}),\r\n    moveTo: () => ({}),\r\n    lineTo: () => ({}),\r\n    closePath: () => ({}),\r\n    stroke: () => ({}),\r\n    translate: () => ({}),\r\n    scale: () => ({}),\r\n    rotate: () => ({}),\r\n    arc: () => ({}),\r\n    fill: () => ({}),\r\n    measureText: () => ({ width: 0 }),\r\n    transform: () => ({}),\r\n    rect: () => ({}),\r\n    clip: () => ({}),\r\n  });\r\n\r\n  window.HTMLCanvasElement.prototype.toDataURL = () => '';\r\n}\r\n\r\nfunction mockIntl(window: any) {\r\n  if (!window.Intl) {\r\n    class IntlMock {\r\n      static supportedLocalesOf() {\r\n        return [];\r\n      }\r\n\r\n      resolvedOptions() {\r\n        return {};\r\n      }\r\n    }\r\n    class IntlFormatMock extends IntlMock {\r\n      format() {\r\n        return '';\r\n      }\r\n\r\n      formatToParts() {\r\n        return [];\r\n      }\r\n    }\r\n    class IntlCollatorMock extends IntlMock {\r\n      compare() {\r\n        return 0;\r\n      }\r\n    }\r\n    class IntlPluralRulesMock extends IntlMock {\r\n      select() {\r\n        return '';\r\n      }\r\n    }\r\n\r\n    class IntlDateTimeFormatMock extends IntlFormatMock {}\r\n    class IntlNumberFormatMock extends IntlFormatMock {}\r\n    class IntlListFormatMock extends IntlFormatMock {}\r\n    class IntlRelativeTimeFormatMock extends IntlFormatMock {}\r\n    Object.defineProperty(window, 'Intl', {\r\n      value: {\r\n        Collator: alwaysFn(IntlCollatorMock),\r\n        DateTimeFormat: alwaysFn(IntlDateTimeFormatMock),\r\n        ListFormat: alwaysFn(IntlListFormatMock),\r\n        NumberFormat: alwaysFn(IntlNumberFormatMock),\r\n        PluralRules: alwaysFn(IntlPluralRulesMock),\r\n        RelativeTimeFormat: alwaysFn(IntlRelativeTimeFormatMock),\r\n      },\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockMatchMedia(window: any) {\r\n  if (!window.matchMedia) {\r\n    Object.defineProperty(window, 'matchMedia', {\r\n      value: () => ({\r\n        matches: true,\r\n        addListener: () => {},\r\n        removeListener: () => {},\r\n      }),\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockLocalStorage(window: any) {\r\n  if (!window.localStorage) {\r\n    class LocalStorageMock {\r\n      store: any;\r\n      constructor() {\r\n        this.store = {};\r\n      }\r\n\r\n      getItem(key: any): any {\r\n        return this.store[key];\r\n      }\r\n\r\n      removeItem(key: any) {\r\n        delete this.store[key];\r\n      }\r\n\r\n      setItem(key: any, value: any) {\r\n        this.store[key] = value.toString();\r\n      }\r\n\r\n      clear() {\r\n        this.store = {};\r\n      }\r\n    }\r\n    Object.defineProperty(window, 'localStorage', {\r\n      value: new LocalStorageMock(),\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockWebWorker(window: any) {\r\n  if (!window.Worker) {\r\n    class WorkerMock {\r\n      addEventListener() {}\r\n\r\n      removeEventLister() {}\r\n\r\n      postMessage() {}\r\n\r\n      terminate() {}\r\n    }\r\n    Object.defineProperty(window, 'Worker', {\r\n      value: WorkerMock,\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockCrypto(window: any) {\r\n  if (!window.crypto) {\r\n    Object.defineProperty(window, 'crypto', {\r\n      value: {\r\n        getRandomValues: (arr: any) => arr.fill(0),\r\n      },\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockMimeTypes(window: any) {\r\n  if (!window.navigator.mimeTypes) {\r\n    Object.defineProperty(window.navigator, 'mimeTypes', {\r\n      value: () => [],\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockFetch(window: any) {\r\n  \/\/ issue: https:\/\/github.com\/chromaui\/chromatic-cli\/issues\/14\r\n  Object.defineProperty(window, 'fetch', {\r\n    value: () =>\r\n      new Promise((_res, _rej) => {\r\n        \/\/ we just let this never resolve\r\n      }),\r\n    writable: true,\r\n  });\r\n}\r\n\r\nfunction mockObjectURL(window: any) {\r\n  if (!window.URL.createObjectURL) {\r\n    Object.defineProperty(window.URL, 'createObjectURL', { value: () => {}, writable: true });\r\n  }\r\n  if (!window.URL.revokeObjectURL) {\r\n    Object.defineProperty(window.URL, 'revokeObjectURL', { value: () => {}, writable: true });\r\n  }\r\n}\r\n\r\nfunction mockMutationObserver(window: any) {\r\n  if (!window.MutationObserver) {\r\n    \/\/ We have to do this in this screwy way because Angular does some monkey patching\r\n    \/\/ expects an non-es2015 class here.\r\n    \/\/ eslint-disable-next-line no-inner-declarations\r\n    \/\/ @ts-ignore\r\n    function MutationObserverMock() {}\r\n    MutationObserverMock.prototype = {\r\n      observe() {\r\n        return [];\r\n      },\r\n      takeRecords() {\r\n        return [];\r\n      },\r\n      disconnect() {},\r\n    };\r\n\r\n    Object.defineProperty(window, 'MutationObserver', {\r\n      value: MutationObserverMock,\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockSVG(window: any) {\r\n  \/\/ issue: https:\/\/github.com\/chromaui\/chromatic-cli\/issues\/27\r\n  \/\/ solution found here: https:\/\/github.com\/facebook\/jest\/issues\/5379#issuecomment-360044161\r\n  \/\/ not incuded in jsdom yet: https:\/\/github.com\/jsdom\/jsdom\/issues\/2128\r\n  const svgElements = [\r\n    'SVGAElement',\r\n    'SVGAltGlyphElement',\r\n    'SVGAngle',\r\n    'SVGAnimateColorElement',\r\n    'SVGAnimateElement',\r\n    'SVGAnimateMotionElement',\r\n    'SVGAnimateTransformElement',\r\n    'SVGAnimatedAngle',\r\n    'SVGAnimatedBoolean',\r\n    'SVGAnimatedEnumeration',\r\n    'SVGAnimatedInteger',\r\n    'SVGAnimatedLength',\r\n    'SVGAnimatedLengthList',\r\n    'SVGAnimatedNumber',\r\n    'SVGAnimatedNumberList',\r\n    'SVGAnimatedPoints',\r\n    'SVGAnimatedPreserveAspectRatio',\r\n    'SVGAnimatedRect',\r\n    'SVGAnimatedString',\r\n    'SVGAnimatedTransformList',\r\n    'SVGAnimationElement',\r\n    'SVGCircleElement',\r\n    'SVGClipPathElement',\r\n    'SVGComponentTransferFunctionElement',\r\n    'SVGCursorElement',\r\n    'SVGDefsElement',\r\n    'SVGDescElement',\r\n    'SVGDocument',\r\n    'SVGElement',\r\n    'SVGEllipseElement',\r\n    'SVGFEBlendElement',\r\n    'SVGFEColorMatrixElement',\r\n    'SVGFEComponentTransferElement',\r\n    'SVGFECompositeElement',\r\n    'SVGFEConvolveMatrixElement',\r\n    'SVGFEDiffuseLightingElement',\r\n    'SVGFEDisplacementMapElement',\r\n    'SVGFEDistantLightElement',\r\n    'SVGFEDropShadowElement',\r\n    'SVGFEFloodElement',\r\n    'SVGFEFuncAElement',\r\n    'SVGFEFuncBElement',\r\n    'SVGFEFuncGElement',\r\n    'SVGFEFuncRElement',\r\n    'SVGFEGaussianBlurElement',\r\n    'SVGFEImageElement',\r\n    'SVGFEMergeElement',\r\n    'SVGFEMergeNodeElement',\r\n    'SVGFEMorphologyElement',\r\n    'SVGFEOffsetElement',\r\n    'SVGFEPointLightElement',\r\n    'SVGFESpecularLightingElement',\r\n    'SVGFESpotLightElement',\r\n    'SVGFETileElement',\r\n    'SVGFETurbulenceElement',\r\n    'SVGFilterElement',\r\n    'SVGFilterPrimitiveStandardAttributes',\r\n    'SVGFontElement',\r\n    'SVGFontFaceElement',\r\n    'SVGFontFaceFormatElement',\r\n    'SVGFontFaceNameElement',\r\n    'SVGFontFaceSrcElement',\r\n    'SVGFontFaceUriElement',\r\n    'SVGForeignObjectElement',\r\n    'SVGGElement',\r\n    'SVGGlyphElement',\r\n    'SVGGradientElement',\r\n    'SVGGraphicsElement',\r\n    'SVGHKernElement',\r\n    'SVGImageElement',\r\n    'SVGLength',\r\n    'SVGLengthList',\r\n    'SVGLineElement',\r\n    'SVGLinearGradientElement',\r\n    'SVGMPathElement',\r\n    'SVGMaskElement',\r\n    'SVGMatrix',\r\n    'SVGMetadataElement',\r\n    'SVGMissingGlyphElement',\r\n    'SVGNumber',\r\n    'SVGNumberList',\r\n    'SVGPathElement',\r\n    'SVGPatternElement',\r\n    'SVGPoint',\r\n    'SVGPolylineElement',\r\n    'SVGPreserveAspectRatio',\r\n    'SVGRadialGradientElement',\r\n    'SVGRect',\r\n    'SVGRectElement',\r\n    'SVGSVGElement',\r\n    'SVGScriptElement',\r\n    'SVGSetElement',\r\n    'SVGStopElement',\r\n    'SVGStringList',\r\n    'SVGStylable',\r\n    'SVGStyleElement',\r\n    'SVGSwitchElement',\r\n    'SVGSymbolElement',\r\n    'SVGTRefElement',\r\n    'SVGTSpanElement',\r\n    'SVGTests',\r\n    'SVGTextContentElement',\r\n    'SVGTextElement',\r\n    'SVGTextPathElement',\r\n    'SVGTextPositioningElement',\r\n    'SVGTitleElement',\r\n    'SVGTransform',\r\n    'SVGTransformList',\r\n    'SVGTransformable',\r\n    'SVGURIReference',\r\n    'SVGUnitTypes',\r\n    'SVGUseElement',\r\n    'SVGVKernElement',\r\n    'SVGViewElement',\r\n    'SVGZoomAndPan',\r\n  ];\r\n\r\n  svgElements.forEach(e => {\r\n    if (!window[e]) {\r\n      \/\/ eslint-disable-next-line no-eval\r\n      const Value = eval(`(class ${e} extends window.HTMLElement {})`);\r\n\r\n      Object.defineProperty(window, e, {\r\n        value: Value,\r\n        writable: true,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport function addShimsToJSDOM(window: any) {\r\n  mockSVG(window);\r\n  mockMutationObserver(window);\r\n  mockObjectURL(window);\r\n  mockFetch(window);\r\n  mockMimeTypes(window);\r\n  mockCrypto(window);\r\n  mockWebWorker(window);\r\n  mockLocalStorage(window);\r\n  mockMatchMedia(window);\r\n  mockIntl(window);\r\n  mockCanvas(window);\r\n}\r\n","avg_line_length":26.0025974026,"max_line_length":108,"alphanum_fraction":0.590949955,"loc":340,"functions":73,"function_signatures":0,"function_parameters":31,"variable_declarations":6,"property_declarations":1,"function_usages":12,"trivial_types":22,"predefined_types":4,"type_definitions":10,"dynamism_heuristic":2,"loc_per_function":5.4794520548,"estimated_tokens":2590,"fun_ann_density":0.0401544402,"var_ann_density":0.0023166023,"prop_ann_density":0.0003861004,"typedef_density":0.0038610039,"dynamism_density":0.0007722008,"trivial_density":0.1981981982,"predefined_density":0.036036036,"metric":0.2775539786,"content_without_annotations":"\/* eslint-disable @typescript-eslint\/no-empty-function, max-classes-per-file, no-param-reassign *\/\r\n\r\nconst alwaysFn = (C) => {\r\n  \/\/ Search up the prototype chain until we hit base. The base class of Class has no name I guess.\r\n  const classHierarchy = [];\r\n  for (let curr = C; curr.name; curr = Object.getPrototypeOf(curr)) {\r\n    classHierarchy.push(curr);\r\n  }\r\n\r\n  \/\/ Get all static methods defined on any ancestor\r\n  const statics = classHierarchy\r\n    .map(klass => Object.getOwnPropertyNames(klass))\r\n    .reduce((a, b) => [...a, ...b], []) \/\/ flatten\r\n    .filter(n => typeof C[n] === 'function')\r\n    .reduce((acc, name) => {\r\n      acc[name] = C[name];\r\n      return acc;\r\n    }, {});\r\n\r\n  return Object.assign(\r\n    \/\/ eslint-disable-next-line func-names\r\n    function() {\r\n      return new C();\r\n    },\r\n    C,\r\n    statics\r\n  );\r\n};\r\n\r\n\/\/ Add canvas mock based on this comment: https:\/\/github.com\/jsdom\/jsdom\/issues\/1782#issuecomment-337656878\r\nfunction mockCanvas(window) {\r\n  window.HTMLCanvasElement.prototype.getContext = () => ({\r\n    fillRect: () => ({}),\r\n    clearRect: () => ({}),\r\n    getImageData: (_x, _y, w, h) => ({ data: new Array(w * h * 4) }),\r\n    putImageData: () => ({}),\r\n    createImageData: () => [],\r\n    setTransform: () => ({}),\r\n    drawImage: () => ({}),\r\n    save: () => ({}),\r\n    fillText: () => ({}),\r\n    restore: () => ({}),\r\n    beginPath: () => ({}),\r\n    moveTo: () => ({}),\r\n    lineTo: () => ({}),\r\n    closePath: () => ({}),\r\n    stroke: () => ({}),\r\n    translate: () => ({}),\r\n    scale: () => ({}),\r\n    rotate: () => ({}),\r\n    arc: () => ({}),\r\n    fill: () => ({}),\r\n    measureText: () => ({ width: 0 }),\r\n    transform: () => ({}),\r\n    rect: () => ({}),\r\n    clip: () => ({}),\r\n  });\r\n\r\n  window.HTMLCanvasElement.prototype.toDataURL = () => '';\r\n}\r\n\r\nfunction mockIntl(window) {\r\n  if (!window.Intl) {\r\n    class IntlMock {\r\n      static supportedLocalesOf() {\r\n        return [];\r\n      }\r\n\r\n      resolvedOptions() {\r\n        return {};\r\n      }\r\n    }\r\n    class IntlFormatMock extends IntlMock {\r\n      format() {\r\n        return '';\r\n      }\r\n\r\n      formatToParts() {\r\n        return [];\r\n      }\r\n    }\r\n    class IntlCollatorMock extends IntlMock {\r\n      compare() {\r\n        return 0;\r\n      }\r\n    }\r\n    class IntlPluralRulesMock extends IntlMock {\r\n      select() {\r\n        return '';\r\n      }\r\n    }\r\n\r\n    class IntlDateTimeFormatMock extends IntlFormatMock {}\r\n    class IntlNumberFormatMock extends IntlFormatMock {}\r\n    class IntlListFormatMock extends IntlFormatMock {}\r\n    class IntlRelativeTimeFormatMock extends IntlFormatMock {}\r\n    Object.defineProperty(window, 'Intl', {\r\n      value: {\r\n        Collator: alwaysFn(IntlCollatorMock),\r\n        DateTimeFormat: alwaysFn(IntlDateTimeFormatMock),\r\n        ListFormat: alwaysFn(IntlListFormatMock),\r\n        NumberFormat: alwaysFn(IntlNumberFormatMock),\r\n        PluralRules: alwaysFn(IntlPluralRulesMock),\r\n        RelativeTimeFormat: alwaysFn(IntlRelativeTimeFormatMock),\r\n      },\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockMatchMedia(window) {\r\n  if (!window.matchMedia) {\r\n    Object.defineProperty(window, 'matchMedia', {\r\n      value: () => ({\r\n        matches: true,\r\n        addListener: () => {},\r\n        removeListener: () => {},\r\n      }),\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockLocalStorage(window) {\r\n  if (!window.localStorage) {\r\n    class LocalStorageMock {\r\n      store;\r\n      constructor() {\r\n        this.store = {};\r\n      }\r\n\r\n      getItem(key) {\r\n        return this.store[key];\r\n      }\r\n\r\n      removeItem(key) {\r\n        delete this.store[key];\r\n      }\r\n\r\n      setItem(key, value) {\r\n        this.store[key] = value.toString();\r\n      }\r\n\r\n      clear() {\r\n        this.store = {};\r\n      }\r\n    }\r\n    Object.defineProperty(window, 'localStorage', {\r\n      value: new LocalStorageMock(),\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockWebWorker(window) {\r\n  if (!window.Worker) {\r\n    class WorkerMock {\r\n      addEventListener() {}\r\n\r\n      removeEventLister() {}\r\n\r\n      postMessage() {}\r\n\r\n      terminate() {}\r\n    }\r\n    Object.defineProperty(window, 'Worker', {\r\n      value: WorkerMock,\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockCrypto(window) {\r\n  if (!window.crypto) {\r\n    Object.defineProperty(window, 'crypto', {\r\n      value: {\r\n        getRandomValues: (arr) => arr.fill(0),\r\n      },\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockMimeTypes(window) {\r\n  if (!window.navigator.mimeTypes) {\r\n    Object.defineProperty(window.navigator, 'mimeTypes', {\r\n      value: () => [],\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockFetch(window) {\r\n  \/\/ issue: https:\/\/github.com\/chromaui\/chromatic-cli\/issues\/14\r\n  Object.defineProperty(window, 'fetch', {\r\n    value: () =>\r\n      new Promise((_res, _rej) => {\r\n        \/\/ we just let this never resolve\r\n      }),\r\n    writable: true,\r\n  });\r\n}\r\n\r\nfunction mockObjectURL(window) {\r\n  if (!window.URL.createObjectURL) {\r\n    Object.defineProperty(window.URL, 'createObjectURL', { value: () => {}, writable: true });\r\n  }\r\n  if (!window.URL.revokeObjectURL) {\r\n    Object.defineProperty(window.URL, 'revokeObjectURL', { value: () => {}, writable: true });\r\n  }\r\n}\r\n\r\nfunction mockMutationObserver(window) {\r\n  if (!window.MutationObserver) {\r\n    \/\/ We have to do this in this screwy way because Angular does some monkey patching\r\n    \/\/ expects an non-es2015 class here.\r\n    \/\/ eslint-disable-next-line no-inner-declarations\r\n    \/\/ @ts-ignore\r\n    function MutationObserverMock() {}\r\n    MutationObserverMock.prototype = {\r\n      observe() {\r\n        return [];\r\n      },\r\n      takeRecords() {\r\n        return [];\r\n      },\r\n      disconnect() {},\r\n    };\r\n\r\n    Object.defineProperty(window, 'MutationObserver', {\r\n      value: MutationObserverMock,\r\n      writable: true,\r\n    });\r\n  }\r\n}\r\n\r\nfunction mockSVG(window) {\r\n  \/\/ issue: https:\/\/github.com\/chromaui\/chromatic-cli\/issues\/27\r\n  \/\/ solution found here: https:\/\/github.com\/facebook\/jest\/issues\/5379#issuecomment-360044161\r\n  \/\/ not incuded in jsdom yet: https:\/\/github.com\/jsdom\/jsdom\/issues\/2128\r\n  const svgElements = [\r\n    'SVGAElement',\r\n    'SVGAltGlyphElement',\r\n    'SVGAngle',\r\n    'SVGAnimateColorElement',\r\n    'SVGAnimateElement',\r\n    'SVGAnimateMotionElement',\r\n    'SVGAnimateTransformElement',\r\n    'SVGAnimatedAngle',\r\n    'SVGAnimatedBoolean',\r\n    'SVGAnimatedEnumeration',\r\n    'SVGAnimatedInteger',\r\n    'SVGAnimatedLength',\r\n    'SVGAnimatedLengthList',\r\n    'SVGAnimatedNumber',\r\n    'SVGAnimatedNumberList',\r\n    'SVGAnimatedPoints',\r\n    'SVGAnimatedPreserveAspectRatio',\r\n    'SVGAnimatedRect',\r\n    'SVGAnimatedString',\r\n    'SVGAnimatedTransformList',\r\n    'SVGAnimationElement',\r\n    'SVGCircleElement',\r\n    'SVGClipPathElement',\r\n    'SVGComponentTransferFunctionElement',\r\n    'SVGCursorElement',\r\n    'SVGDefsElement',\r\n    'SVGDescElement',\r\n    'SVGDocument',\r\n    'SVGElement',\r\n    'SVGEllipseElement',\r\n    'SVGFEBlendElement',\r\n    'SVGFEColorMatrixElement',\r\n    'SVGFEComponentTransferElement',\r\n    'SVGFECompositeElement',\r\n    'SVGFEConvolveMatrixElement',\r\n    'SVGFEDiffuseLightingElement',\r\n    'SVGFEDisplacementMapElement',\r\n    'SVGFEDistantLightElement',\r\n    'SVGFEDropShadowElement',\r\n    'SVGFEFloodElement',\r\n    'SVGFEFuncAElement',\r\n    'SVGFEFuncBElement',\r\n    'SVGFEFuncGElement',\r\n    'SVGFEFuncRElement',\r\n    'SVGFEGaussianBlurElement',\r\n    'SVGFEImageElement',\r\n    'SVGFEMergeElement',\r\n    'SVGFEMergeNodeElement',\r\n    'SVGFEMorphologyElement',\r\n    'SVGFEOffsetElement',\r\n    'SVGFEPointLightElement',\r\n    'SVGFESpecularLightingElement',\r\n    'SVGFESpotLightElement',\r\n    'SVGFETileElement',\r\n    'SVGFETurbulenceElement',\r\n    'SVGFilterElement',\r\n    'SVGFilterPrimitiveStandardAttributes',\r\n    'SVGFontElement',\r\n    'SVGFontFaceElement',\r\n    'SVGFontFaceFormatElement',\r\n    'SVGFontFaceNameElement',\r\n    'SVGFontFaceSrcElement',\r\n    'SVGFontFaceUriElement',\r\n    'SVGForeignObjectElement',\r\n    'SVGGElement',\r\n    'SVGGlyphElement',\r\n    'SVGGradientElement',\r\n    'SVGGraphicsElement',\r\n    'SVGHKernElement',\r\n    'SVGImageElement',\r\n    'SVGLength',\r\n    'SVGLengthList',\r\n    'SVGLineElement',\r\n    'SVGLinearGradientElement',\r\n    'SVGMPathElement',\r\n    'SVGMaskElement',\r\n    'SVGMatrix',\r\n    'SVGMetadataElement',\r\n    'SVGMissingGlyphElement',\r\n    'SVGNumber',\r\n    'SVGNumberList',\r\n    'SVGPathElement',\r\n    'SVGPatternElement',\r\n    'SVGPoint',\r\n    'SVGPolylineElement',\r\n    'SVGPreserveAspectRatio',\r\n    'SVGRadialGradientElement',\r\n    'SVGRect',\r\n    'SVGRectElement',\r\n    'SVGSVGElement',\r\n    'SVGScriptElement',\r\n    'SVGSetElement',\r\n    'SVGStopElement',\r\n    'SVGStringList',\r\n    'SVGStylable',\r\n    'SVGStyleElement',\r\n    'SVGSwitchElement',\r\n    'SVGSymbolElement',\r\n    'SVGTRefElement',\r\n    'SVGTSpanElement',\r\n    'SVGTests',\r\n    'SVGTextContentElement',\r\n    'SVGTextElement',\r\n    'SVGTextPathElement',\r\n    'SVGTextPositioningElement',\r\n    'SVGTitleElement',\r\n    'SVGTransform',\r\n    'SVGTransformList',\r\n    'SVGTransformable',\r\n    'SVGURIReference',\r\n    'SVGUnitTypes',\r\n    'SVGUseElement',\r\n    'SVGVKernElement',\r\n    'SVGViewElement',\r\n    'SVGZoomAndPan',\r\n  ];\r\n\r\n  svgElements.forEach(e => {\r\n    if (!window[e]) {\r\n      \/\/ eslint-disable-next-line no-eval\r\n      const Value = eval(`(class ${e} extends window.HTMLElement {})`);\r\n\r\n      Object.defineProperty(window, e, {\r\n        value: Value,\r\n        writable: true,\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport function addShimsToJSDOM(window) {\r\n  mockSVG(window);\r\n  mockMutationObserver(window);\r\n  mockObjectURL(window);\r\n  mockFetch(window);\r\n  mockMimeTypes(window);\r\n  mockCrypto(window);\r\n  mockWebWorker(window);\r\n  mockLocalStorage(window);\r\n  mockMatchMedia(window);\r\n  mockIntl(window);\r\n  mockCanvas(window);\r\n}\r\n"}
{"hexsha":"6c720cf9896446d51c2fbf27c0bd5b96c8e2a900","size":2115,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/app\/models\/ontology-discipline.model.ts","max_stars_repo_name":"os-climate\/sostrades-webgui","max_stars_repo_head_hexsha":"029dc7f13850997fb756991e98c2b6d4d837de51","max_stars_repo_licenses":["MIT","Apache-2.0","BSD-3-Clause"],"max_stars_count":1.0,"max_stars_repo_stars_event_min_datetime":"2022-03-16T08:25:41.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-16T08:25:41.000Z","max_issues_repo_path":"src\/app\/models\/ontology-discipline.model.ts","max_issues_repo_name":"os-climate\/sostrades-webgui","max_issues_repo_head_hexsha":"029dc7f13850997fb756991e98c2b6d4d837de51","max_issues_repo_licenses":["MIT","Apache-2.0","BSD-3-Clause"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/app\/models\/ontology-discipline.model.ts","max_forks_repo_name":"os-climate\/sostrades-webgui","max_forks_repo_head_hexsha":"029dc7f13850997fb756991e98c2b6d4d837de51","max_forks_repo_licenses":["MIT","Apache-2.0","BSD-3-Clause"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"export class OntologyDiscipline {\n\n  constructor(\n    public id: string,\n    public label: string,\n    public delivered: string,\n    public implemented: string,\n    public maturity: string,\n    public source: string,\n    public className: string,\n    public validator: string,\n    public validated: string,\n    public uri: string,\n    public icon: string\n  ) { }\n\n  public static Create(jsonData: any): OntologyDiscipline {\n    const result: OntologyDiscipline = new OntologyDiscipline(\n      jsonData[OntologyParameterAttributes.ID],\n      jsonData[OntologyParameterAttributes.LABEL],\n      jsonData[OntologyParameterAttributes.DELIVERED],\n      jsonData[OntologyParameterAttributes.IMPLEMENTED],\n      jsonData[OntologyParameterAttributes.MATURITY],\n      jsonData[OntologyParameterAttributes.SOURCE],\n      jsonData[OntologyParameterAttributes.CLASSNAME],\n      jsonData[OntologyParameterAttributes.VALIDATOR],\n      jsonData[OntologyParameterAttributes.VALIDATED],\n      jsonData[OntologyParameterAttributes.URI],\n      jsonData[OntologyParameterAttributes.ICON]);\n\n    return result;\n  }\n\n  public static getKeyLabel(key: string): string {\n    const keyLabelDict = {\n      id: 'ID',\n      delivered: 'Delivered',\n      implemented: 'Implemented',\n      label: 'Discipline Name',\n      maturity: 'Maturity',\n      source: 'Source',\n      className: 'Discipline Class Name',\n      uri: 'Ontology URI',\n      validator: 'Validator',\n      validated: 'Validated'\n    };\n\n    if (key in keyLabelDict) {\n      return keyLabelDict[key];\n    } else {\n      return key;\n    }\n  }\n\n  public toString = (): string => {\n    const strings: string[] = [];\n    if (this.id !== null && this.id !== undefined) {\n      strings.push(`${this.id}`);\n    }\n\n    \/\/ TO BE IMPLEMENTED IF NEEDED\n    return strings.join('\\n');\n  }\n}\n\nexport enum OntologyParameterAttributes {\n  ID = 'id',\n  DELIVERED = 'delivered',\n  IMPLEMENTED = 'implemented',\n  LABEL = 'label',\n  MATURITY = 'modelType',\n  SOURCE = 'originSource',\n  CLASSNAME = 'pythonClass',\n  URI = 'uri',\n  VALIDATOR = 'validator',\n  VALIDATED = 'validated',\n  ICON = 'icon'\n}\n","avg_line_length":26.7721518987,"max_line_length":62,"alphanum_fraction":0.6676122931,"loc":69,"functions":4,"function_signatures":0,"function_parameters":13,"variable_declarations":3,"property_declarations":1,"function_usages":0,"trivial_types":1,"predefined_types":15,"type_definitions":1,"dynamism_heuristic":0,"loc_per_function":8.75,"estimated_tokens":494,"fun_ann_density":0.0344129555,"var_ann_density":0.0060728745,"prop_ann_density":0.0020242915,"typedef_density":0.0020242915,"dynamism_density":0.0,"trivial_density":0.0476190476,"predefined_density":0.7142857143,"metric":0.2720118883,"content_without_annotations":"export class OntologyDiscipline {\n\n  constructor(\n    public id,\n    public label,\n    public delivered,\n    public implemented,\n    public maturity,\n    public source,\n    public className,\n    public validator,\n    public validated,\n    public uri,\n    public icon\n  ) { }\n\n  public static Create(jsonData) {\n    const result = new OntologyDiscipline(\n      jsonData[OntologyParameterAttributes.ID],\n      jsonData[OntologyParameterAttributes.LABEL],\n      jsonData[OntologyParameterAttributes.DELIVERED],\n      jsonData[OntologyParameterAttributes.IMPLEMENTED],\n      jsonData[OntologyParameterAttributes.MATURITY],\n      jsonData[OntologyParameterAttributes.SOURCE],\n      jsonData[OntologyParameterAttributes.CLASSNAME],\n      jsonData[OntologyParameterAttributes.VALIDATOR],\n      jsonData[OntologyParameterAttributes.VALIDATED],\n      jsonData[OntologyParameterAttributes.URI],\n      jsonData[OntologyParameterAttributes.ICON]);\n\n    return result;\n  }\n\n  public static getKeyLabel(key) {\n    const keyLabelDict = {\n      id: 'ID',\n      delivered: 'Delivered',\n      implemented: 'Implemented',\n      label: 'Discipline Name',\n      maturity: 'Maturity',\n      source: 'Source',\n      className: 'Discipline Class Name',\n      uri: 'Ontology URI',\n      validator: 'Validator',\n      validated: 'Validated'\n    };\n\n    if (key in keyLabelDict) {\n      return keyLabelDict[key];\n    } else {\n      return key;\n    }\n  }\n\n  public toString = () => {\n    const strings = [];\n    if (this.id !== null && this.id !== undefined) {\n      strings.push(`${this.id}`);\n    }\n\n    \/\/ TO BE IMPLEMENTED IF NEEDED\n    return strings.join('\\n');\n  }\n}\n\nexport enum OntologyParameterAttributes {\n  ID = 'id',\n  DELIVERED = 'delivered',\n  IMPLEMENTED = 'implemented',\n  LABEL = 'label',\n  MATURITY = 'modelType',\n  SOURCE = 'originSource',\n  CLASSNAME = 'pythonClass',\n  URI = 'uri',\n  VALIDATOR = 'validator',\n  VALIDATED = 'validated',\n  ICON = 'icon'\n}\n"}
{"hexsha":"2eea3cdf17dad8f71b37165f9ddfdf85c5088bdf","size":7018,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/offset-polygon.ts","max_stars_repo_name":"Stanko\/offset-polygon","max_stars_repo_head_hexsha":"4e92233e2187d0c67a03505ec077128b265a5365","max_stars_repo_licenses":["MIT"],"max_stars_count":2.0,"max_stars_repo_stars_event_min_datetime":"2022-01-31T10:34:57.000Z","max_stars_repo_stars_event_max_datetime":"2022-01-31T11:00:47.000Z","max_issues_repo_path":"src\/offset-polygon.ts","max_issues_repo_name":"Stanko\/offset-polygon","max_issues_repo_head_hexsha":"4e92233e2187d0c67a03505ec077128b265a5365","max_issues_repo_licenses":["MIT"],"max_issues_count":1.0,"max_issues_repo_issues_event_min_datetime":"2022-01-31T10:37:18.000Z","max_issues_repo_issues_event_max_datetime":"2022-01-31T20:53:40.000Z","max_forks_repo_path":"src\/offset-polygon.ts","max_forks_repo_name":"Stanko\/offset-polygon","max_forks_repo_head_hexsha":"4e92233e2187d0c67a03505ec077128b265a5365","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/\/ TODO check these comments:\n\/\/ Assuming that polygon vertices are in clockwise order\n\ntype Vector = {\n  x: number;\n  y: number;\n};\n\ntype Edge = {\n  index: number;\n  inwardNormal: Vector;\n  outwardNormal: Vector;\n  vertex1: Vector;\n  vertex2: Vector;\n};\n\ntype OffsetEdge = {\n  vertex1: Vector;\n  vertex2: Vector;\n};\n\ntype Polygon = {\n  edges: Edge[];\n  offsetEdges?: OffsetEdge[];\n  maxX: number;\n  maxY: number;\n  minX: number;\n  minY: number;\n  vertices: Vector[];\n};\n\nconst TWO_PI = Math.PI * 2;\n\n\/\/ See http:\/\/paulbourke.net\/geometry\/pointlineplane\/\nfunction inwardEdgeNormal(vertex1: Vector, vertex2: Vector): Vector {\n  \/\/ Assuming that polygon vertices are in clockwise order\n  const dx = vertex2.x - vertex1.x;\n  const dy = vertex2.y - vertex1.y;\n  const edgeLength = Math.sqrt(dx * dx + dy * dy);\n\n  return {\n    x: -dy \/ edgeLength,\n    y: dx \/ edgeLength,\n  };\n}\n\nfunction outwardEdgeNormal(vertex1: Vector, vertex2: Vector): Vector {\n  var n = inwardEdgeNormal(vertex1, vertex2);\n\n  return {\n    x: -n.x,\n    y: -n.y,\n  };\n}\n\nfunction createPolygon(vertices: Vector[]): Polygon {\n  const edges: Edge[] = [];\n  let minX = vertices.length > 0 ? vertices[0].x : undefined;\n  let minY = vertices.length > 0 ? vertices[0].y : undefined;\n  let maxX = minX;\n  let maxY = minY;\n\n  for (let i = 0; i < vertices.length; i++) {\n    const vertex1 = vertices[i];\n    const vertex2 = vertices[(i + 1) % vertices.length];\n\n    const outwardNormal = outwardEdgeNormal(vertex1, vertex2);\n\n    const inwardNormal = inwardEdgeNormal(vertex1, vertex2);\n\n    const edge: Edge = {\n      vertex1,\n      vertex2,\n      index: i,\n      outwardNormal,\n      inwardNormal,\n    };\n\n    edges.push(edge);\n\n    const x = vertices[i].x;\n    const y = vertices[i].y;\n    minX = Math.min(x, minX);\n    minY = Math.min(y, minY);\n    maxX = Math.max(x, maxX);\n    maxY = Math.max(y, maxY);\n  }\n\n  const polygon: Polygon = {\n    vertices,\n    edges,\n    minX,\n    minY,\n    maxX,\n    maxY,\n  };\n\n  return polygon;\n}\n\n\/\/ based on http:\/\/local.wasp.uwa.edu.au\/~pbourke\/geometry\/lineline2d\/, edgeA => \"line a\", edgeB => \"line b\"\n\nfunction edgesIntersection(edgeA: Edge | OffsetEdge, edgeB: Edge | OffsetEdge) {\n  const den =\n    (edgeB.vertex2.y - edgeB.vertex1.y) * (edgeA.vertex2.x - edgeA.vertex1.x) -\n    (edgeB.vertex2.x - edgeB.vertex1.x) * (edgeA.vertex2.y - edgeA.vertex1.y);\n\n  if (den == 0) {\n    return null; \/\/ lines are parallel or coincident\n  }\n\n  const ua =\n    ((edgeB.vertex2.x - edgeB.vertex1.x) * (edgeA.vertex1.y - edgeB.vertex1.y) -\n      (edgeB.vertex2.y - edgeB.vertex1.y) *\n        (edgeA.vertex1.x - edgeB.vertex1.x)) \/\n    den;\n\n  const ub =\n    ((edgeA.vertex2.x - edgeA.vertex1.x) * (edgeA.vertex1.y - edgeB.vertex1.y) -\n      (edgeA.vertex2.y - edgeA.vertex1.y) *\n        (edgeA.vertex1.x - edgeB.vertex1.x)) \/\n    den;\n\n  \/\/ Edges are not intersecting but the lines defined by them are\n  const isIntersectionOutside = ua < 0 || ub < 0 || ua > 1 || ub > 1;\n\n  return {\n    x: edgeA.vertex1.x + ua * (edgeA.vertex2.x - edgeA.vertex1.x),\n    y: edgeA.vertex1.y + ua * (edgeA.vertex2.y - edgeA.vertex1.y),\n    isIntersectionOutside,\n  };\n}\n\nfunction appendArc(\n  arcSegments: number,\n  vertices: Vector[],\n  center: Vector,\n  radius: number,\n  startVertex: Vector,\n  endVertex: Vector,\n  isPaddingBoundary: boolean\n) {\n  var startAngle = Math.atan2(\n    startVertex.y - center.y,\n    startVertex.x - center.x\n  );\n  var endAngle = Math.atan2(endVertex.y - center.y, endVertex.x - center.x);\n\n  if (startAngle < 0) {\n    startAngle += TWO_PI;\n  }\n\n  if (endAngle < 0) {\n    endAngle += TWO_PI;\n  }\n\n  const angle =\n    startAngle > endAngle\n      ? startAngle - endAngle\n      : startAngle + TWO_PI - endAngle;\n  const angleStep = (isPaddingBoundary ? -angle : TWO_PI - angle) \/ arcSegments;\n\n  vertices.push(startVertex);\n\n  for (let i = 1; i < arcSegments; ++i) {\n    const angle = startAngle + angleStep * i;\n\n    const vertex = {\n      x: center.x + Math.cos(angle) * radius,\n      y: center.y + Math.sin(angle) * radius,\n    };\n\n    vertices.push(vertex);\n  }\n\n  vertices.push(endVertex);\n}\n\nfunction createOffsetEdge(edge: Edge, dx: number, dy: number): OffsetEdge {\n  return {\n    vertex1: {\n      x: edge.vertex1.x + dx,\n      y: edge.vertex1.y + dy,\n    },\n    vertex2: {\n      x: edge.vertex2.x + dx,\n      y: edge.vertex2.y + dy,\n    },\n  };\n}\n\nfunction createMarginPolygon(\n  polygon: Polygon,\n  offset: number,\n  arcSegments: number\n): Polygon {\n  const offsetEdges: OffsetEdge[] = [];\n\n  for (let i = 0; i < polygon.edges.length; i++) {\n    const edge = polygon.edges[i];\n    const dx = edge.outwardNormal.x * offset;\n    const dy = edge.outwardNormal.y * offset;\n    offsetEdges.push(createOffsetEdge(edge, dx, dy));\n  }\n\n  const vertices: Vector[] = [];\n\n  for (let i = 0; i < offsetEdges.length; i++) {\n    const thisEdge = offsetEdges[i];\n    const prevEdge =\n      offsetEdges[(i + offsetEdges.length - 1) % offsetEdges.length];\n    const vertex = edgesIntersection(prevEdge, thisEdge);\n\n    if (vertex && (!vertex.isIntersectionOutside || arcSegments < 1)) {\n      vertices.push({\n        x: vertex.x,\n        y: vertex.y,\n      });\n    } else {\n      const arcCenter = polygon.edges[i].vertex1;\n\n      appendArc(\n        arcSegments,\n        vertices,\n        arcCenter,\n        offset,\n        prevEdge.vertex2,\n        thisEdge.vertex1,\n        false\n      );\n    }\n  }\n\n  const marginPolygon = createPolygon(vertices);\n\n  marginPolygon.offsetEdges = offsetEdges;\n\n  return marginPolygon;\n}\n\nfunction createPaddingPolygon(\n  polygon: Polygon,\n  offset: number,\n  arcSegments: number\n): Polygon {\n  const offsetEdges: OffsetEdge[] = [];\n\n  for (let i = 0; i < polygon.edges.length; i++) {\n    const edge = polygon.edges[i];\n    const dx = edge.inwardNormal.x * offset;\n    const dy = edge.inwardNormal.y * offset;\n    offsetEdges.push(createOffsetEdge(edge, dx, dy));\n  }\n\n  const vertices: Vector[] = [];\n\n  for (let i = 0; i < offsetEdges.length; i++) {\n    const thisEdge = offsetEdges[i];\n    const prevEdge =\n      offsetEdges[(i + offsetEdges.length - 1) % offsetEdges.length];\n    const vertex = edgesIntersection(prevEdge, thisEdge);\n    if (vertex && (!vertex.isIntersectionOutside || arcSegments < 1)) {\n      vertices.push({\n        x: vertex.x,\n        y: vertex.y,\n      });\n    } else {\n      const arcCenter = polygon.edges[i].vertex1;\n\n      appendArc(\n        arcSegments,\n        vertices,\n        arcCenter,\n        offset,\n        prevEdge.vertex2,\n        thisEdge.vertex1,\n        true\n      );\n    }\n  }\n\n  const paddingPolygon = createPolygon(vertices);\n\n  paddingPolygon.offsetEdges = offsetEdges;\n\n  return paddingPolygon;\n}\n\nexport default function offsetPolygon(\n  vertices: Vector[],\n  offset: number,\n  arcSegments: number = 0\n): Vector[] {\n  const polygon = createPolygon(vertices);\n\n  if (offset > 0) {\n    return createMarginPolygon(polygon, offset, arcSegments).vertices;\n  } else {\n    return createPaddingPolygon(polygon, -offset, arcSegments).vertices;\n  }\n}\n","avg_line_length":23.238410596,"max_line_length":108,"alphanum_fraction":0.6236819607,"loc":241,"functions":9,"function_signatures":0,"function_parameters":26,"variable_declarations":55,"property_declarations":16,"function_usages":8,"trivial_types":0,"predefined_types":18,"type_definitions":4,"dynamism_heuristic":0,"loc_per_function":19.7777777778,"estimated_tokens":2159,"fun_ann_density":0.0162112089,"var_ann_density":0.0254747568,"prop_ann_density":0.0074108384,"typedef_density":0.0018527096,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.1698113208,"metric":0.2960859223,"content_without_annotations":"\/\/ TODO check these comments:\n\/\/ Assuming that polygon vertices are in clockwise order\n\ntype Vector = {\n  x;\n  y;\n};\n\ntype Edge = {\n  index;\n  inwardNormal;\n  outwardNormal;\n  vertex1;\n  vertex2;\n};\n\ntype OffsetEdge = {\n  vertex1;\n  vertex2;\n};\n\ntype Polygon = {\n  edges;\n  offsetEdges?;\n  maxX;\n  maxY;\n  minX;\n  minY;\n  vertices;\n};\n\nconst TWO_PI = Math.PI * 2;\n\n\/\/ See http:\/\/paulbourke.net\/geometry\/pointlineplane\/\nfunction inwardEdgeNormal(vertex1, vertex2) {\n  \/\/ Assuming that polygon vertices are in clockwise order\n  const dx = vertex2.x - vertex1.x;\n  const dy = vertex2.y - vertex1.y;\n  const edgeLength = Math.sqrt(dx * dx + dy * dy);\n\n  return {\n    x: -dy \/ edgeLength,\n    y: dx \/ edgeLength,\n  };\n}\n\nfunction outwardEdgeNormal(vertex1, vertex2) {\n  var n = inwardEdgeNormal(vertex1, vertex2);\n\n  return {\n    x: -n.x,\n    y: -n.y,\n  };\n}\n\nfunction createPolygon(vertices) {\n  const edges = [];\n  let minX = vertices.length > 0 ? vertices[0].x : undefined;\n  let minY = vertices.length > 0 ? vertices[0].y : undefined;\n  let maxX = minX;\n  let maxY = minY;\n\n  for (let i = 0; i < vertices.length; i++) {\n    const vertex1 = vertices[i];\n    const vertex2 = vertices[(i + 1) % vertices.length];\n\n    const outwardNormal = outwardEdgeNormal(vertex1, vertex2);\n\n    const inwardNormal = inwardEdgeNormal(vertex1, vertex2);\n\n    const edge = {\n      vertex1,\n      vertex2,\n      index: i,\n      outwardNormal,\n      inwardNormal,\n    };\n\n    edges.push(edge);\n\n    const x = vertices[i].x;\n    const y = vertices[i].y;\n    minX = Math.min(x, minX);\n    minY = Math.min(y, minY);\n    maxX = Math.max(x, maxX);\n    maxY = Math.max(y, maxY);\n  }\n\n  const polygon = {\n    vertices,\n    edges,\n    minX,\n    minY,\n    maxX,\n    maxY,\n  };\n\n  return polygon;\n}\n\n\/\/ based on http:\/\/local.wasp.uwa.edu.au\/~pbourke\/geometry\/lineline2d\/, edgeA => \"line a\", edgeB => \"line b\"\n\nfunction edgesIntersection(edgeA, edgeB) {\n  const den =\n    (edgeB.vertex2.y - edgeB.vertex1.y) * (edgeA.vertex2.x - edgeA.vertex1.x) -\n    (edgeB.vertex2.x - edgeB.vertex1.x) * (edgeA.vertex2.y - edgeA.vertex1.y);\n\n  if (den == 0) {\n    return null; \/\/ lines are parallel or coincident\n  }\n\n  const ua =\n    ((edgeB.vertex2.x - edgeB.vertex1.x) * (edgeA.vertex1.y - edgeB.vertex1.y) -\n      (edgeB.vertex2.y - edgeB.vertex1.y) *\n        (edgeA.vertex1.x - edgeB.vertex1.x)) \/\n    den;\n\n  const ub =\n    ((edgeA.vertex2.x - edgeA.vertex1.x) * (edgeA.vertex1.y - edgeB.vertex1.y) -\n      (edgeA.vertex2.y - edgeA.vertex1.y) *\n        (edgeA.vertex1.x - edgeB.vertex1.x)) \/\n    den;\n\n  \/\/ Edges are not intersecting but the lines defined by them are\n  const isIntersectionOutside = ua < 0 || ub < 0 || ua > 1 || ub > 1;\n\n  return {\n    x: edgeA.vertex1.x + ua * (edgeA.vertex2.x - edgeA.vertex1.x),\n    y: edgeA.vertex1.y + ua * (edgeA.vertex2.y - edgeA.vertex1.y),\n    isIntersectionOutside,\n  };\n}\n\nfunction appendArc(\n  arcSegments,\n  vertices,\n  center,\n  radius,\n  startVertex,\n  endVertex,\n  isPaddingBoundary\n) {\n  var startAngle = Math.atan2(\n    startVertex.y - center.y,\n    startVertex.x - center.x\n  );\n  var endAngle = Math.atan2(endVertex.y - center.y, endVertex.x - center.x);\n\n  if (startAngle < 0) {\n    startAngle += TWO_PI;\n  }\n\n  if (endAngle < 0) {\n    endAngle += TWO_PI;\n  }\n\n  const angle =\n    startAngle > endAngle\n      ? startAngle - endAngle\n      : startAngle + TWO_PI - endAngle;\n  const angleStep = (isPaddingBoundary ? -angle : TWO_PI - angle) \/ arcSegments;\n\n  vertices.push(startVertex);\n\n  for (let i = 1; i < arcSegments; ++i) {\n    const angle = startAngle + angleStep * i;\n\n    const vertex = {\n      x: center.x + Math.cos(angle) * radius,\n      y: center.y + Math.sin(angle) * radius,\n    };\n\n    vertices.push(vertex);\n  }\n\n  vertices.push(endVertex);\n}\n\nfunction createOffsetEdge(edge, dx, dy) {\n  return {\n    vertex1: {\n      x: edge.vertex1.x + dx,\n      y: edge.vertex1.y + dy,\n    },\n    vertex2: {\n      x: edge.vertex2.x + dx,\n      y: edge.vertex2.y + dy,\n    },\n  };\n}\n\nfunction createMarginPolygon(\n  polygon,\n  offset,\n  arcSegments\n) {\n  const offsetEdges = [];\n\n  for (let i = 0; i < polygon.edges.length; i++) {\n    const edge = polygon.edges[i];\n    const dx = edge.outwardNormal.x * offset;\n    const dy = edge.outwardNormal.y * offset;\n    offsetEdges.push(createOffsetEdge(edge, dx, dy));\n  }\n\n  const vertices = [];\n\n  for (let i = 0; i < offsetEdges.length; i++) {\n    const thisEdge = offsetEdges[i];\n    const prevEdge =\n      offsetEdges[(i + offsetEdges.length - 1) % offsetEdges.length];\n    const vertex = edgesIntersection(prevEdge, thisEdge);\n\n    if (vertex && (!vertex.isIntersectionOutside || arcSegments < 1)) {\n      vertices.push({\n        x: vertex.x,\n        y: vertex.y,\n      });\n    } else {\n      const arcCenter = polygon.edges[i].vertex1;\n\n      appendArc(\n        arcSegments,\n        vertices,\n        arcCenter,\n        offset,\n        prevEdge.vertex2,\n        thisEdge.vertex1,\n        false\n      );\n    }\n  }\n\n  const marginPolygon = createPolygon(vertices);\n\n  marginPolygon.offsetEdges = offsetEdges;\n\n  return marginPolygon;\n}\n\nfunction createPaddingPolygon(\n  polygon,\n  offset,\n  arcSegments\n) {\n  const offsetEdges = [];\n\n  for (let i = 0; i < polygon.edges.length; i++) {\n    const edge = polygon.edges[i];\n    const dx = edge.inwardNormal.x * offset;\n    const dy = edge.inwardNormal.y * offset;\n    offsetEdges.push(createOffsetEdge(edge, dx, dy));\n  }\n\n  const vertices = [];\n\n  for (let i = 0; i < offsetEdges.length; i++) {\n    const thisEdge = offsetEdges[i];\n    const prevEdge =\n      offsetEdges[(i + offsetEdges.length - 1) % offsetEdges.length];\n    const vertex = edgesIntersection(prevEdge, thisEdge);\n    if (vertex && (!vertex.isIntersectionOutside || arcSegments < 1)) {\n      vertices.push({\n        x: vertex.x,\n        y: vertex.y,\n      });\n    } else {\n      const arcCenter = polygon.edges[i].vertex1;\n\n      appendArc(\n        arcSegments,\n        vertices,\n        arcCenter,\n        offset,\n        prevEdge.vertex2,\n        thisEdge.vertex1,\n        true\n      );\n    }\n  }\n\n  const paddingPolygon = createPolygon(vertices);\n\n  paddingPolygon.offsetEdges = offsetEdges;\n\n  return paddingPolygon;\n}\n\nexport default function offsetPolygon(\n  vertices,\n  offset,\n  arcSegments = 0\n) {\n  const polygon = createPolygon(vertices);\n\n  if (offset > 0) {\n    return createMarginPolygon(polygon, offset, arcSegments).vertices;\n  } else {\n    return createPaddingPolygon(polygon, -offset, arcSegments).vertices;\n  }\n}\n"}
{"hexsha":"574a90b8366d07f821fdec6eb1f5c102e754c994","size":3759,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/utils\/PitchUtil.ts","max_stars_repo_name":"igorski\/molecular-music-generator-web","max_stars_repo_head_hexsha":"b1265ab84a18e893d71bf537a534dc730d090f21","max_stars_repo_licenses":["MIT"],"max_stars_count":5.0,"max_stars_repo_stars_event_min_datetime":"2022-02-02T01:45:08.000Z","max_stars_repo_stars_event_max_datetime":"2022-03-03T23:17:28.000Z","max_issues_repo_path":"src\/utils\/PitchUtil.ts","max_issues_repo_name":"igorski\/molecular-music-generator-web","max_issues_repo_head_hexsha":"b1265ab84a18e893d71bf537a534dc730d090f21","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/utils\/PitchUtil.ts","max_forks_repo_name":"igorski\/molecular-music-generator-web","max_forks_repo_head_hexsha":"b1265ab84a18e893d71bf537a534dc730d090f21","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/**\n * The MIT License (MIT)\n *\n * Igor Zinken 2016-2022 - https:\/\/www.igorski.nl\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and\/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\/\n\n\/**\n * order of note names within a single octave\n *\/\nexport const OCTAVE_SCALE: Array<string> = [ \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\" ];\n\n\/**\n * @param {string} aNote - musical note to return ( A, B, C, D, E, F, G with\n *               possible enharmonic notes ( 'b' meaning 'flat', '#' meaning 'sharp' )\n *               NOTE: flats are CASE sensitive ( to prevent seeing the note 'B' instead of 'b' )\n * @param {number} aOctave - the octave to return ( accepted range 0 - 9 )\n * @return {number} containing exact frequency in Hz for requested note\n *\/\nexport const getFrequency = ( aNote: string, aOctave: number ): number => {\n    let freq;\n    let enharmonic = 0;\n\n    \/\/ detect flat enharmonic\n    let i = aNote.indexOf( \"b\" );\n    if ( i > -1 ) {\n        aNote = aNote.substr( i - 1, 1 );\n        enharmonic = -1;\n    }\n\n    \/\/ detect sharp enharmonic\n    i = aNote.indexOf( \"#\" );\n    if ( i > -1 ) {\n        aNote = aNote.substr( i - 1, 1 );\n        enharmonic = 1;\n    }\n\n    freq = getOctaveIndex( aNote, enharmonic );\n\n    if ( aOctave === 4 ) {\n        return freq;\n    }\n    else {\n        \/\/ translate the pitches to the requested octave\n        const d = aOctave - 4;\n        let j = Math.abs( d );\n\n        for ( i = 0; i < j; ++i ) {\n            if ( d > 0 ) {\n                freq *= 2;\n            }\n            else {\n                freq *= 0.5;\n            }\n        }\n        return freq;\n    }\n};\n\n\/* internal methods *\/\n\n\/**\n * pitch table for all notes from C to B at octave 4\n * which is used for calculating all pitches at other octaves\n *\/\nconst OCTAVE: Array<number> = [\n    261.626, 277.183, 293.665, 311.127, 329.628, 349.228, 369.994, 391.995, 415.305, 440, 466.164, 493.883\n];\n\n\/**\n * retrieves the index in the octave array for a given note\n * modifier enharmonic returns the previous ( for a 'flat' note )\n * or next ( for a 'sharp' note ) index\n *\n * @param {string} aNote ( A, B, C, D, E, F, G )\n * @param {number=} aEnharmonic optional, defaults to 0 ( 0, -1 for flat, 1 for sharp )\n * @return {number}\n *\/\nfunction getOctaveIndex( aNote: string, aEnharmonic?: number ): number {\n    if ( typeof aEnharmonic !== \"number\" ) {\n        aEnharmonic = 0;\n    }\n\n    for ( let i = 0, j = OCTAVE.length; i < j; ++i ) {\n        if ( OCTAVE_SCALE[ i ] === aNote ) {\n            let k = i + aEnharmonic;\n\n            if ( k > j ) {\n                return OCTAVE[ 0 ];\n            }\n            if ( k < 0 ) {\n                return OCTAVE[ OCTAVE.length - 1 ];\n            }\n            return OCTAVE[ k ];\n        }\n    }\n    return NaN;\n}\n","avg_line_length":32.6869565217,"max_line_length":111,"alphanum_fraction":0.5887204044,"loc":53,"functions":2,"function_signatures":0,"function_parameters":4,"variable_declarations":11,"property_declarations":0,"function_usages":1,"trivial_types":0,"predefined_types":8,"type_definitions":0,"dynamism_heuristic":1,"loc_per_function":22.5,"estimated_tokens":1157,"fun_ann_density":0.0051858254,"var_ann_density":0.0095073466,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0008643042,"trivial_density":0.0,"predefined_density":0.4705882353,"metric":0.2128090911,"content_without_annotations":"\/**\n * The MIT License (MIT)\n *\n * Igor Zinken 2016-2022 - https:\/\/www.igorski.nl\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and\/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\/\n\n\/**\n * order of note names within a single octave\n *\/\nexport const OCTAVE_SCALE = [ \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\" ];\n\n\/**\n * @param {string} aNote - musical note to return ( A, B, C, D, E, F, G with\n *               possible enharmonic notes ( 'b' meaning 'flat', '#' meaning 'sharp' )\n *               NOTE: flats are CASE sensitive ( to prevent seeing the note 'B' instead of 'b' )\n * @param {number} aOctave - the octave to return ( accepted range 0 - 9 )\n * @return {number} containing exact frequency in Hz for requested note\n *\/\nexport const getFrequency = ( aNote, aOctave ) => {\n    let freq;\n    let enharmonic = 0;\n\n    \/\/ detect flat enharmonic\n    let i = aNote.indexOf( \"b\" );\n    if ( i > -1 ) {\n        aNote = aNote.substr( i - 1, 1 );\n        enharmonic = -1;\n    }\n\n    \/\/ detect sharp enharmonic\n    i = aNote.indexOf( \"#\" );\n    if ( i > -1 ) {\n        aNote = aNote.substr( i - 1, 1 );\n        enharmonic = 1;\n    }\n\n    freq = getOctaveIndex( aNote, enharmonic );\n\n    if ( aOctave === 4 ) {\n        return freq;\n    }\n    else {\n        \/\/ translate the pitches to the requested octave\n        const d = aOctave - 4;\n        let j = Math.abs( d );\n\n        for ( i = 0; i < j; ++i ) {\n            if ( d > 0 ) {\n                freq *= 2;\n            }\n            else {\n                freq *= 0.5;\n            }\n        }\n        return freq;\n    }\n};\n\n\/* internal methods *\/\n\n\/**\n * pitch table for all notes from C to B at octave 4\n * which is used for calculating all pitches at other octaves\n *\/\nconst OCTAVE = [\n    261.626, 277.183, 293.665, 311.127, 329.628, 349.228, 369.994, 391.995, 415.305, 440, 466.164, 493.883\n];\n\n\/**\n * retrieves the index in the octave array for a given note\n * modifier enharmonic returns the previous ( for a 'flat' note )\n * or next ( for a 'sharp' note ) index\n *\n * @param {string} aNote ( A, B, C, D, E, F, G )\n * @param {number=} aEnharmonic optional, defaults to 0 ( 0, -1 for flat, 1 for sharp )\n * @return {number}\n *\/\nfunction getOctaveIndex( aNote, aEnharmonic? ) {\n    if ( typeof aEnharmonic !== \"number\" ) {\n        aEnharmonic = 0;\n    }\n\n    for ( let i = 0, j = OCTAVE.length; i < j; ++i ) {\n        if ( OCTAVE_SCALE[ i ] === aNote ) {\n            let k = i + aEnharmonic;\n\n            if ( k > j ) {\n                return OCTAVE[ 0 ];\n            }\n            if ( k < 0 ) {\n                return OCTAVE[ OCTAVE.length - 1 ];\n            }\n            return OCTAVE[ k ];\n        }\n    }\n    return NaN;\n}\n"}
{"hexsha":"c8c0eb3cd54ad278f0d858d396c8e71c98b9926b","size":2286,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"src\/handpose\/util.ts","max_stars_repo_name":"BTTHuyen\/Human_library","max_stars_repo_head_hexsha":"ac44363382a10a753f3e99dfb18fd75ff6eafbec","max_stars_repo_licenses":["MIT"],"max_stars_count":null,"max_stars_repo_stars_event_min_datetime":null,"max_stars_repo_stars_event_max_datetime":null,"max_issues_repo_path":"src\/handpose\/util.ts","max_issues_repo_name":"BTTHuyen\/Human_library","max_issues_repo_head_hexsha":"ac44363382a10a753f3e99dfb18fd75ff6eafbec","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"src\/handpose\/util.ts","max_forks_repo_name":"BTTHuyen\/Human_library","max_forks_repo_head_hexsha":"ac44363382a10a753f3e99dfb18fd75ff6eafbec","max_forks_repo_licenses":["MIT"],"max_forks_count":1.0,"max_forks_repo_forks_event_min_datetime":"2022-01-05T23:18:23.000Z","max_forks_repo_forks_event_max_datetime":"2022-01-05T23:18:23.000Z","content":"export function normalizeRadians(angle) {\n  return angle - 2 * Math.PI * Math.floor((angle + Math.PI) \/ (2 * Math.PI));\n}\n\nexport function computeRotation(point1, point2) {\n  const radians = Math.PI \/ 2 - Math.atan2(-(point2[1] - point1[1]), point2[0] - point1[0]);\n  return normalizeRadians(radians);\n}\n\nexport const buildTranslationMatrix = (x, y) => [[1, 0, x], [0, 1, y], [0, 0, 1]];\n\nexport function dot(v1, v2) {\n  let product = 0;\n  for (let i = 0; i < v1.length; i++) {\n    product += v1[i] * v2[i];\n  }\n  return product;\n}\n\nexport function getColumnFrom2DArr(arr, columnIndex) {\n  const column: Array<number> = [];\n  for (let i = 0; i < arr.length; i++) {\n    column.push(arr[i][columnIndex]);\n  }\n  return column;\n}\n\nexport function multiplyTransformMatrices(mat1, mat2) {\n  const product: Array<number[]> = [];\n  const size = mat1.length;\n  for (let row = 0; row < size; row++) {\n    product.push([]);\n    for (let col = 0; col < size; col++) {\n      product[row].push(dot(mat1[row], getColumnFrom2DArr(mat2, col)));\n    }\n  }\n  return product;\n}\n\nexport function buildRotationMatrix(rotation, center) {\n  const cosA = Math.cos(rotation);\n  const sinA = Math.sin(rotation);\n  const rotationMatrix = [[cosA, -sinA, 0], [sinA, cosA, 0], [0, 0, 1]];\n  const translationMatrix = buildTranslationMatrix(center[0], center[1]);\n  const translationTimesRotation = multiplyTransformMatrices(translationMatrix, rotationMatrix);\n  const negativeTranslationMatrix = buildTranslationMatrix(-center[0], -center[1]);\n  return multiplyTransformMatrices(translationTimesRotation, negativeTranslationMatrix);\n}\n\nexport function invertTransformMatrix(matrix) {\n  const rotationComponent = [[matrix[0][0], matrix[1][0]], [matrix[0][1], matrix[1][1]]];\n  const translationComponent = [matrix[0][2], matrix[1][2]];\n  const invertedTranslation = [\n    -dot(rotationComponent[0], translationComponent),\n    -dot(rotationComponent[1], translationComponent),\n  ];\n  return [\n    rotationComponent[0].concat(invertedTranslation[0]),\n    rotationComponent[1].concat(invertedTranslation[1]),\n    [0, 0, 1],\n  ];\n}\n\nexport function rotatePoint(homogeneousCoordinate, rotationMatrix) {\n  return [\n    dot(homogeneousCoordinate, rotationMatrix[0]),\n    dot(homogeneousCoordinate, rotationMatrix[1]),\n  ];\n}\n","avg_line_length":32.6571428571,"max_line_length":96,"alphanum_fraction":0.6819772528,"loc":61,"functions":9,"function_signatures":0,"function_parameters":16,"variable_declarations":19,"property_declarations":0,"function_usages":5,"trivial_types":0,"predefined_types":2,"type_definitions":0,"dynamism_heuristic":0,"loc_per_function":5.0,"estimated_tokens":689,"fun_ann_density":0.0362844702,"var_ann_density":0.0275761974,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0,"trivial_density":0.0,"predefined_density":0.0454545455,"metric":0.3462763355,"content_without_annotations":"export function normalizeRadians(angle) {\n  return angle - 2 * Math.PI * Math.floor((angle + Math.PI) \/ (2 * Math.PI));\n}\n\nexport function computeRotation(point1, point2) {\n  const radians = Math.PI \/ 2 - Math.atan2(-(point2[1] - point1[1]), point2[0] - point1[0]);\n  return normalizeRadians(radians);\n}\n\nexport const buildTranslationMatrix = (x, y) => [[1, 0, x], [0, 1, y], [0, 0, 1]];\n\nexport function dot(v1, v2) {\n  let product = 0;\n  for (let i = 0; i < v1.length; i++) {\n    product += v1[i] * v2[i];\n  }\n  return product;\n}\n\nexport function getColumnFrom2DArr(arr, columnIndex) {\n  const column = [];\n  for (let i = 0; i < arr.length; i++) {\n    column.push(arr[i][columnIndex]);\n  }\n  return column;\n}\n\nexport function multiplyTransformMatrices(mat1, mat2) {\n  const product = [];\n  const size = mat1.length;\n  for (let row = 0; row < size; row++) {\n    product.push([]);\n    for (let col = 0; col < size; col++) {\n      product[row].push(dot(mat1[row], getColumnFrom2DArr(mat2, col)));\n    }\n  }\n  return product;\n}\n\nexport function buildRotationMatrix(rotation, center) {\n  const cosA = Math.cos(rotation);\n  const sinA = Math.sin(rotation);\n  const rotationMatrix = [[cosA, -sinA, 0], [sinA, cosA, 0], [0, 0, 1]];\n  const translationMatrix = buildTranslationMatrix(center[0], center[1]);\n  const translationTimesRotation = multiplyTransformMatrices(translationMatrix, rotationMatrix);\n  const negativeTranslationMatrix = buildTranslationMatrix(-center[0], -center[1]);\n  return multiplyTransformMatrices(translationTimesRotation, negativeTranslationMatrix);\n}\n\nexport function invertTransformMatrix(matrix) {\n  const rotationComponent = [[matrix[0][0], matrix[1][0]], [matrix[0][1], matrix[1][1]]];\n  const translationComponent = [matrix[0][2], matrix[1][2]];\n  const invertedTranslation = [\n    -dot(rotationComponent[0], translationComponent),\n    -dot(rotationComponent[1], translationComponent),\n  ];\n  return [\n    rotationComponent[0].concat(invertedTranslation[0]),\n    rotationComponent[1].concat(invertedTranslation[1]),\n    [0, 0, 1],\n  ];\n}\n\nexport function rotatePoint(homogeneousCoordinate, rotationMatrix) {\n  return [\n    dot(homogeneousCoordinate, rotationMatrix[0]),\n    dot(homogeneousCoordinate, rotationMatrix[1]),\n  ];\n}\n"}
{"hexsha":"9411bc35f0916e880babde2f1f971f7c4f02165d","size":2488,"ext":"ts","lang":"TypeScript","max_stars_repo_path":"problemset\/trapping-rain-water\/index.ts","max_stars_repo_name":"OUDUIDUI\/leet-code","max_stars_repo_head_hexsha":"50e61ce16d1c419ccefc075ae9ead721cdd1cdbb","max_stars_repo_licenses":["MIT"],"max_stars_count":6.0,"max_stars_repo_stars_event_min_datetime":"2022-01-17T03:19:56.000Z","max_stars_repo_stars_event_max_datetime":"2022-01-17T05:45:39.000Z","max_issues_repo_path":"problemset\/trapping-rain-water\/index.ts","max_issues_repo_name":"OUDUIDUI\/leet-code","max_issues_repo_head_hexsha":"50e61ce16d1c419ccefc075ae9ead721cdd1cdbb","max_issues_repo_licenses":["MIT"],"max_issues_count":null,"max_issues_repo_issues_event_min_datetime":null,"max_issues_repo_issues_event_max_datetime":null,"max_forks_repo_path":"problemset\/trapping-rain-water\/index.ts","max_forks_repo_name":"OUDUIDUI\/leet-code","max_forks_repo_head_hexsha":"50e61ce16d1c419ccefc075ae9ead721cdd1cdbb","max_forks_repo_licenses":["MIT"],"max_forks_count":null,"max_forks_repo_forks_event_min_datetime":null,"max_forks_repo_forks_event_max_datetime":null,"content":"\/**\n * \u52a8\u6001\u89c4\u5212\n * @desc \u65f6\u95f4\u590d\u6742\u5ea6 O(N)  \u7a7a\u95f4\u590d\u6742\u5ea6 O(N)\n * @param height {number[]}\n * @return {number}\n *\/\nexport function trap(height: number[]): number {\n  const len = height.length\n  if (!len) return 0\n\n  \/\/ \u8bb0\u5f55\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u7684\u6700\u5927\u503c\u6570\u7ec4\n  const leftMax: number[] = new Array(len).fill(0)\n  for (let i = 0; i < len; i++)\n    leftMax[i] = i === 0 ? height[i] : Math.max(leftMax[i - 1], height[i])\n\n  \/\/ \u8bb0\u5f55\u4ece\u53f3\u5230\u5de6\u626b\u63cf\u7684\u6700\u5927\u503c\u6570\u7ec4\n  const rightMax = new Array(len).fill(0)\n  for (let i = len - 1; i >= 0; i--) {\n    rightMax[i]\n      = i === len - 1 ? height[i] : Math.max(rightMax[i + 1], height[i])\n  }\n\n  let ans = 0\n  \/\/ leftMax\u548crightMax\u91cd\u53e0\u7684\u533a\u57df\u51cf\u6389height[i]\u5c31\u662f\u5bf9\u5e94\u533a\u57df\u7684\u63a5\u6c34\u91cf\n  for (let i = 0; i < len; i++)\n    ans += Math.min(leftMax[i], rightMax[i]) - height[i]\n\n  return ans\n}\n\n\/**\n * \u5355\u8c03\u6808\n * @desc \u65f6\u95f4\u590d\u6742\u5ea6 O(N)  \u7a7a\u95f4\u590d\u6742\u5ea6 O(N)\n * @param height {number[]}\n * @return {number}\n *\/\nexport function trap2(height: number[]): number {\n  let ans = 0\n  const stack: number[] = []\n  for (let i = 0; i < height.length; i++) {\n    while (\n      stack.length\n      && \/* \u6808\u6709\u503c *\/ height[i]\n        > height[stack[stack.length - 1]] \/* \u5f53\u524d\u9ad8\u5ea6\u6bd4\u4e0a\u4e00\u4e2a\u9ad8\u5ea6\u9ad8\u7684\u8bdd *\/\n    ) {\n      \/\/ \u83b7\u53d6\u6808\u9876\uff0c\u5e76\u5f39\u51fa\n      const top = stack.pop() as number\n\n      \/\/ \u786e\u4fdd\u6808\u8fd8\u6709\u503c\n      if (!stack.length) break\n\n      \/\/ \u83b7\u53d6\u5de6\u8fb9\u5750\u6807\n      const left = stack[stack.length - 1] as number\n      \/\/ \u8ba1\u7b97\u51fa\u5bbd\u9ad8\n      const w = i - left - 1\n      const h = Math.min(height[left], height[i]) - height[top]\n      ans += w * h\n    }\n\n    \/\/ \u5165\u6808\n    stack.push(i)\n  }\n\n  return ans\n}\n\n\/**\n * \u53cc\u6307\u9488\n * @desc \u65f6\u95f4\u590d\u6742\u5ea6 O(N)  \u7a7a\u95f4\u590d\u6742\u5ea6 O(1)\n * @param height {number[]}\n * @return {number}\n *\/\nexport function trap3(height: number[]): number {\n  let ans = 0\n\n  let left = 0\n  let right: number = height.length - 1\n  let leftMaxHeight = 0\n  let rightMaxHeight = 0\n\n  while (left < right) {\n    \/\/ \u66f4\u65b0\u5de6\u53f3\u6700\u5927\u9ad8\u5ea6\n    leftMaxHeight = Math.max(leftMaxHeight, height[left])\n    rightMaxHeight = Math.max(rightMaxHeight, height[right])\n\n    if (height[left] < height[right]) {\n      \/\/ \u5f53height[left] < height[right] \u5728\u52a8\u6001\u89c4\u5212\u4e2d\u5fc5\u6709leftMax[left] < rightMax[left]\n      \/\/ \u56e0\u6b64\u5728\u52a8\u6001\u89c4\u5212\u4e2d\uff0c\u6b64\u65f6\u7684\u9ad8\u5ea6\u4e3a Math.min(leftMax[left], rightMax[left]) - height[left]\n      \/\/ \u5373 leftMaxHeight - height[left]\n      ans += leftMaxHeight - height[left]\n      left++\n    }\n    else {\n      \/\/ \u540c\u7406\uff0c\u5f53height[left] >= height[right] \u5728\u52a8\u6001\u89c4\u5212\u4e2d\u5fc5\u6709leftMax[right] >= rightMax[right]\n      \/\/ \u56e0\u6b64\u5728\u52a8\u6001\u89c4\u5212\u4e2d\uff0c\u6b64\u65f6\u7684\u9ad8\u5ea6\u4e3a Math.min(leftMax[right], rightMax[right]) - height[right]\n      \/\/ \u5373 rightMaxHeight - height[right]\n      ans += rightMaxHeight - height[right]\n      right--\n    }\n  }\n\n  return ans\n}\n","avg_line_length":23.9230769231,"max_line_length":84,"alphanum_fraction":0.5791800643,"loc":56,"functions":3,"function_signatures":0,"function_parameters":3,"variable_declarations":19,"property_declarations":0,"function_usages":0,"trivial_types":0,"predefined_types":11,"type_definitions":0,"dynamism_heuristic":2,"loc_per_function":16.6666666667,"estimated_tokens":942,"fun_ann_density":0.0063694268,"var_ann_density":0.0201698514,"prop_ann_density":0.0,"typedef_density":0.0,"dynamism_density":0.0021231423,"trivial_density":0.0,"predefined_density":0.44,"metric":0.2499917776,"content_without_annotations":"\/**\n * \u52a8\u6001\u89c4\u5212\n * @desc \u65f6\u95f4\u590d\u6742\u5ea6 O(N)  \u7a7a\u95f4\u590d\u6742\u5ea6 O(N)\n * @param height {number[]}\n * @return {number}\n *\/\nexport function trap(height) {\n  const len = height.length\n  if (!len) return 0\n\n  \/\/ \u8bb0\u5f55\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u7684\u6700\u5927\u503c\u6570\u7ec4\n  const leftMax = new Array(len).fill(0)\n  for (let i = 0; i < len; i++)\n    leftMax[i] = i === 0 ? height[i] : Math.max(leftMax[i - 1], height[i])\n\n  \/\/ \u8bb0\u5f55\u4ece\u53f3\u5230\u5de6\u626b\u63cf\u7684\u6700\u5927\u503c\u6570\u7ec4\n  const rightMax = new Array(len).fill(0)\n  for (let i = len - 1; i >= 0; i--) {\n    rightMax[i]\n      = i === len - 1 ? height[i] : Math.max(rightMax[i + 1], height[i])\n  }\n\n  let ans = 0\n  \/\/ leftMax\u548crightMax\u91cd\u53e0\u7684\u533a\u57df\u51cf\u6389height[i]\u5c31\u662f\u5bf9\u5e94\u533a\u57df\u7684\u63a5\u6c34\u91cf\n  for (let i = 0; i < len; i++)\n    ans += Math.min(leftMax[i], rightMax[i]) - height[i]\n\n  return ans\n}\n\n\/**\n * \u5355\u8c03\u6808\n * @desc \u65f6\u95f4\u590d\u6742\u5ea6 O(N)  \u7a7a\u95f4\u590d\u6742\u5ea6 O(N)\n * @param height {number[]}\n * @return {number}\n *\/\nexport function trap2(height) {\n  let ans = 0\n  const stack = []\n  for (let i = 0; i < height.length; i++) {\n    while (\n      stack.length\n      && \/* \u6808\u6709\u503c *\/ height[i]\n        > height[stack[stack.length - 1]] \/* \u5f53\u524d\u9ad8\u5ea6\u6bd4\u4e0a\u4e00\u4e2a\u9ad8\u5ea6\u9ad8\u7684\u8bdd *\/\n    ) {\n      \/\/ \u83b7\u53d6\u6808\u9876\uff0c\u5e76\u5f39\u51fa\n      const top = stack.pop() as number\n\n      \/\/ \u786e\u4fdd\u6808\u8fd8\u6709\u503c\n      if (!stack.length) break\n\n      \/\/ \u83b7\u53d6\u5de6\u8fb9\u5750\u6807\n      const left = stack[stack.length - 1] as number\n      \/\/ \u8ba1\u7b97\u51fa\u5bbd\u9ad8\n      const w = i - left - 1\n      const h = Math.min(height[left], height[i]) - height[top]\n      ans += w * h\n    }\n\n    \/\/ \u5165\u6808\n    stack.push(i)\n  }\n\n  return ans\n}\n\n\/**\n * \u53cc\u6307\u9488\n * @desc \u65f6\u95f4\u590d\u6742\u5ea6 O(N)  \u7a7a\u95f4\u590d\u6742\u5ea6 O(1)\n * @param height {number[]}\n * @return {number}\n *\/\nexport function trap3(height) {\n  let ans = 0\n\n  let left = 0\n  let right = height.length - 1\n  let leftMaxHeight = 0\n  let rightMaxHeight = 0\n\n  while (left < right) {\n    \/\/ \u66f4\u65b0\u5de6\u53f3\u6700\u5927\u9ad8\u5ea6\n    leftMaxHeight = Math.max(leftMaxHeight, height[left])\n    rightMaxHeight = Math.max(rightMaxHeight, height[right])\n\n    if (height[left] < height[right]) {\n      \/\/ \u5f53height[left] < height[right] \u5728\u52a8\u6001\u89c4\u5212\u4e2d\u5fc5\u6709leftMax[left] < rightMax[left]\n      \/\/ \u56e0\u6b64\u5728\u52a8\u6001\u89c4\u5212\u4e2d\uff0c\u6b64\u65f6\u7684\u9ad8\u5ea6\u4e3a Math.min(leftMax[left], rightMax[left]) - height[left]\n      \/\/ \u5373 leftMaxHeight - height[left]\n      ans += leftMaxHeight - height[left]\n      left++\n    }\n    else {\n      \/\/ \u540c\u7406\uff0c\u5f53height[left] >= height[right] \u5728\u52a8\u6001\u89c4\u5212\u4e2d\u5fc5\u6709leftMax[right] >= rightMax[right]\n      \/\/ \u56e0\u6b64\u5728\u52a8\u6001\u89c4\u5212\u4e2d\uff0c\u6b64\u65f6\u7684\u9ad8\u5ea6\u4e3a Math.min(leftMax[right], rightMax[right]) - height[right]\n      \/\/ \u5373 rightMaxHeight - height[right]\n      ans += rightMaxHeight - height[right]\n      right--\n    }\n  }\n\n  return ans\n}\n"}
